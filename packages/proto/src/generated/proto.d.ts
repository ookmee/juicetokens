import * as $protobuf from "protobufjs";
import Long = require("long");
/** Namespace tokenengine. */
export namespace tokenengine {

    /** Properties of an EncryptedToken. */
    interface IEncryptedToken {

        /** EncryptedToken id */
        id?: (string|null);

        /** EncryptedToken encryptedPayload */
        encryptedPayload?: (Uint8Array|null);

        /** EncryptedToken status */
        status?: (string|null);

        /** EncryptedToken timestamp */
        timestamp?: (number|Long|null);

        /** EncryptedToken metadata */
        metadata?: (tokenengine.ITokenMetadata|null);
    }

    /** Represents an EncryptedToken. */
    class EncryptedToken implements IEncryptedToken {

        /**
         * Constructs a new EncryptedToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.IEncryptedToken);

        /** EncryptedToken id. */
        public id: string;

        /** EncryptedToken encryptedPayload. */
        public encryptedPayload: Uint8Array;

        /** EncryptedToken status. */
        public status: string;

        /** EncryptedToken timestamp. */
        public timestamp: (number|Long);

        /** EncryptedToken metadata. */
        public metadata?: (tokenengine.ITokenMetadata|null);

        /**
         * Creates a new EncryptedToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EncryptedToken instance
         */
        public static create(properties?: tokenengine.IEncryptedToken): tokenengine.EncryptedToken;

        /**
         * Encodes the specified EncryptedToken message. Does not implicitly {@link tokenengine.EncryptedToken.verify|verify} messages.
         * @param message EncryptedToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.IEncryptedToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EncryptedToken message, length delimited. Does not implicitly {@link tokenengine.EncryptedToken.verify|verify} messages.
         * @param message EncryptedToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.IEncryptedToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EncryptedToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EncryptedToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.EncryptedToken;

        /**
         * Decodes an EncryptedToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EncryptedToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.EncryptedToken;

        /**
         * Verifies an EncryptedToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EncryptedToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EncryptedToken
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.EncryptedToken;

        /**
         * Creates a plain object from an EncryptedToken message. Also converts values to other types if specified.
         * @param message EncryptedToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.EncryptedToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EncryptedToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for EncryptedToken
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a TokenMetadata. */
    interface ITokenMetadata {

        /** TokenMetadata version */
        version?: (string|null);

        /** TokenMetadata type */
        type?: (string|null);

        /** TokenMetadata attributes */
        attributes?: ({ [k: string]: string }|null);
    }

    /** Represents a TokenMetadata. */
    class TokenMetadata implements ITokenMetadata {

        /**
         * Constructs a new TokenMetadata.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.ITokenMetadata);

        /** TokenMetadata version. */
        public version: string;

        /** TokenMetadata type. */
        public type: string;

        /** TokenMetadata attributes. */
        public attributes: { [k: string]: string };

        /**
         * Creates a new TokenMetadata instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TokenMetadata instance
         */
        public static create(properties?: tokenengine.ITokenMetadata): tokenengine.TokenMetadata;

        /**
         * Encodes the specified TokenMetadata message. Does not implicitly {@link tokenengine.TokenMetadata.verify|verify} messages.
         * @param message TokenMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.ITokenMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TokenMetadata message, length delimited. Does not implicitly {@link tokenengine.TokenMetadata.verify|verify} messages.
         * @param message TokenMetadata message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.ITokenMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TokenMetadata message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TokenMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.TokenMetadata;

        /**
         * Decodes a TokenMetadata message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TokenMetadata
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.TokenMetadata;

        /**
         * Verifies a TokenMetadata message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TokenMetadata message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TokenMetadata
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.TokenMetadata;

        /**
         * Creates a plain object from a TokenMetadata message. Also converts values to other types if specified.
         * @param message TokenMetadata
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.TokenMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TokenMetadata to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TokenMetadata
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a WalletToken. */
    interface IWalletToken {

        /** WalletToken token */
        token?: (tokenengine.IEncryptedToken|null);

        /** WalletToken offlineReady */
        offlineReady?: (boolean|null);

        /** WalletToken priority */
        priority?: (number|null);

        /** WalletToken lastAccessed */
        lastAccessed?: (number|Long|null);
    }

    /** Represents a WalletToken. */
    class WalletToken implements IWalletToken {

        /**
         * Constructs a new WalletToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.IWalletToken);

        /** WalletToken token. */
        public token?: (tokenengine.IEncryptedToken|null);

        /** WalletToken offlineReady. */
        public offlineReady: boolean;

        /** WalletToken priority. */
        public priority: number;

        /** WalletToken lastAccessed. */
        public lastAccessed: (number|Long);

        /**
         * Creates a new WalletToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WalletToken instance
         */
        public static create(properties?: tokenengine.IWalletToken): tokenengine.WalletToken;

        /**
         * Encodes the specified WalletToken message. Does not implicitly {@link tokenengine.WalletToken.verify|verify} messages.
         * @param message WalletToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.IWalletToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WalletToken message, length delimited. Does not implicitly {@link tokenengine.WalletToken.verify|verify} messages.
         * @param message WalletToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.IWalletToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WalletToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WalletToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.WalletToken;

        /**
         * Decodes a WalletToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WalletToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.WalletToken;

        /**
         * Verifies a WalletToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WalletToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WalletToken
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.WalletToken;

        /**
         * Creates a plain object from a WalletToken message. Also converts values to other types if specified.
         * @param message WalletToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.WalletToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WalletToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for WalletToken
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SafeToken. */
    interface ISafeToken {

        /** SafeToken token */
        token?: (tokenengine.IEncryptedToken|null);

        /** SafeToken location */
        location?: (string|null);

        /** SafeToken recoveryHint */
        recoveryHint?: (Uint8Array|null);

        /** SafeToken backupTimestamp */
        backupTimestamp?: (number|Long|null);

        /** SafeToken backupLocations */
        backupLocations?: (string[]|null);
    }

    /** Represents a SafeToken. */
    class SafeToken implements ISafeToken {

        /**
         * Constructs a new SafeToken.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.ISafeToken);

        /** SafeToken token. */
        public token?: (tokenengine.IEncryptedToken|null);

        /** SafeToken location. */
        public location: string;

        /** SafeToken recoveryHint. */
        public recoveryHint: Uint8Array;

        /** SafeToken backupTimestamp. */
        public backupTimestamp: (number|Long);

        /** SafeToken backupLocations. */
        public backupLocations: string[];

        /**
         * Creates a new SafeToken instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SafeToken instance
         */
        public static create(properties?: tokenengine.ISafeToken): tokenengine.SafeToken;

        /**
         * Encodes the specified SafeToken message. Does not implicitly {@link tokenengine.SafeToken.verify|verify} messages.
         * @param message SafeToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.ISafeToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SafeToken message, length delimited. Does not implicitly {@link tokenengine.SafeToken.verify|verify} messages.
         * @param message SafeToken message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.ISafeToken, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SafeToken message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SafeToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.SafeToken;

        /**
         * Decodes a SafeToken message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SafeToken
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.SafeToken;

        /**
         * Verifies a SafeToken message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SafeToken message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SafeToken
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.SafeToken;

        /**
         * Creates a plain object from a SafeToken message. Also converts values to other types if specified.
         * @param message SafeToken
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.SafeToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SafeToken to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SafeToken
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a TransactionRequest. */
    interface ITransactionRequest {

        /** TransactionRequest id */
        id?: (string|null);

        /** TransactionRequest sender */
        sender?: (string|null);

        /** TransactionRequest receiver */
        receiver?: (string|null);

        /** TransactionRequest tokens */
        tokens?: (tokenengine.IEncryptedToken[]|null);

        /** TransactionRequest expiry */
        expiry?: (number|Long|null);

        /** TransactionRequest metadata */
        metadata?: ({ [k: string]: string }|null);
    }

    /** Represents a TransactionRequest. */
    class TransactionRequest implements ITransactionRequest {

        /**
         * Constructs a new TransactionRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.ITransactionRequest);

        /** TransactionRequest id. */
        public id: string;

        /** TransactionRequest sender. */
        public sender: string;

        /** TransactionRequest receiver. */
        public receiver: string;

        /** TransactionRequest tokens. */
        public tokens: tokenengine.IEncryptedToken[];

        /** TransactionRequest expiry. */
        public expiry: (number|Long);

        /** TransactionRequest metadata. */
        public metadata: { [k: string]: string };

        /**
         * Creates a new TransactionRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TransactionRequest instance
         */
        public static create(properties?: tokenengine.ITransactionRequest): tokenengine.TransactionRequest;

        /**
         * Encodes the specified TransactionRequest message. Does not implicitly {@link tokenengine.TransactionRequest.verify|verify} messages.
         * @param message TransactionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.ITransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TransactionRequest message, length delimited. Does not implicitly {@link tokenengine.TransactionRequest.verify|verify} messages.
         * @param message TransactionRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.ITransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TransactionRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TransactionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.TransactionRequest;

        /**
         * Decodes a TransactionRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TransactionRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.TransactionRequest;

        /**
         * Verifies a TransactionRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TransactionRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TransactionRequest
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.TransactionRequest;

        /**
         * Creates a plain object from a TransactionRequest message. Also converts values to other types if specified.
         * @param message TransactionRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.TransactionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TransactionRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TransactionRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a TransactionResponse. */
    interface ITransactionResponse {

        /** TransactionResponse id */
        id?: (string|null);

        /** TransactionResponse status */
        status?: (string|null);

        /** TransactionResponse errorMessage */
        errorMessage?: (string|null);

        /** TransactionResponse timestamp */
        timestamp?: (number|Long|null);
    }

    /** Represents a TransactionResponse. */
    class TransactionResponse implements ITransactionResponse {

        /**
         * Constructs a new TransactionResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.ITransactionResponse);

        /** TransactionResponse id. */
        public id: string;

        /** TransactionResponse status. */
        public status: string;

        /** TransactionResponse errorMessage. */
        public errorMessage: string;

        /** TransactionResponse timestamp. */
        public timestamp: (number|Long);

        /**
         * Creates a new TransactionResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TransactionResponse instance
         */
        public static create(properties?: tokenengine.ITransactionResponse): tokenengine.TransactionResponse;

        /**
         * Encodes the specified TransactionResponse message. Does not implicitly {@link tokenengine.TransactionResponse.verify|verify} messages.
         * @param message TransactionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.ITransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TransactionResponse message, length delimited. Does not implicitly {@link tokenengine.TransactionResponse.verify|verify} messages.
         * @param message TransactionResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.ITransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TransactionResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TransactionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.TransactionResponse;

        /**
         * Decodes a TransactionResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TransactionResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.TransactionResponse;

        /**
         * Verifies a TransactionResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TransactionResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TransactionResponse
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.TransactionResponse;

        /**
         * Creates a plain object from a TransactionResponse message. Also converts values to other types if specified.
         * @param message TransactionResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.TransactionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TransactionResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TransactionResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a TransactionConfirmation. */
    interface ITransactionConfirmation {

        /** TransactionConfirmation transactionId */
        transactionId?: (string|null);

        /** TransactionConfirmation status */
        status?: (string|null);

        /** TransactionConfirmation signature */
        signature?: (Uint8Array|null);

        /** TransactionConfirmation timestamp */
        timestamp?: (number|Long|null);
    }

    /** Represents a TransactionConfirmation. */
    class TransactionConfirmation implements ITransactionConfirmation {

        /**
         * Constructs a new TransactionConfirmation.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.ITransactionConfirmation);

        /** TransactionConfirmation transactionId. */
        public transactionId: string;

        /** TransactionConfirmation status. */
        public status: string;

        /** TransactionConfirmation signature. */
        public signature: Uint8Array;

        /** TransactionConfirmation timestamp. */
        public timestamp: (number|Long);

        /**
         * Creates a new TransactionConfirmation instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TransactionConfirmation instance
         */
        public static create(properties?: tokenengine.ITransactionConfirmation): tokenengine.TransactionConfirmation;

        /**
         * Encodes the specified TransactionConfirmation message. Does not implicitly {@link tokenengine.TransactionConfirmation.verify|verify} messages.
         * @param message TransactionConfirmation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.ITransactionConfirmation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TransactionConfirmation message, length delimited. Does not implicitly {@link tokenengine.TransactionConfirmation.verify|verify} messages.
         * @param message TransactionConfirmation message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.ITransactionConfirmation, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TransactionConfirmation message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TransactionConfirmation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.TransactionConfirmation;

        /**
         * Decodes a TransactionConfirmation message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TransactionConfirmation
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.TransactionConfirmation;

        /**
         * Verifies a TransactionConfirmation message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TransactionConfirmation message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TransactionConfirmation
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.TransactionConfirmation;

        /**
         * Creates a plain object from a TransactionConfirmation message. Also converts values to other types if specified.
         * @param message TransactionConfirmation
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.TransactionConfirmation, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TransactionConfirmation to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TransactionConfirmation
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a TransactionResult. */
    interface ITransactionResult {

        /** TransactionResult transactionId */
        transactionId?: (string|null);

        /** TransactionResult status */
        status?: (string|null);

        /** TransactionResult errorMessage */
        errorMessage?: (string|null);

        /** TransactionResult timestamp */
        timestamp?: (number|Long|null);
    }

    /** Represents a TransactionResult. */
    class TransactionResult implements ITransactionResult {

        /**
         * Constructs a new TransactionResult.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.ITransactionResult);

        /** TransactionResult transactionId. */
        public transactionId: string;

        /** TransactionResult status. */
        public status: string;

        /** TransactionResult errorMessage. */
        public errorMessage: string;

        /** TransactionResult timestamp. */
        public timestamp: (number|Long);

        /**
         * Creates a new TransactionResult instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TransactionResult instance
         */
        public static create(properties?: tokenengine.ITransactionResult): tokenengine.TransactionResult;

        /**
         * Encodes the specified TransactionResult message. Does not implicitly {@link tokenengine.TransactionResult.verify|verify} messages.
         * @param message TransactionResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.ITransactionResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TransactionResult message, length delimited. Does not implicitly {@link tokenengine.TransactionResult.verify|verify} messages.
         * @param message TransactionResult message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.ITransactionResult, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TransactionResult message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TransactionResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.TransactionResult;

        /**
         * Decodes a TransactionResult message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TransactionResult
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.TransactionResult;

        /**
         * Verifies a TransactionResult message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TransactionResult message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TransactionResult
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.TransactionResult;

        /**
         * Creates a plain object from a TransactionResult message. Also converts values to other types if specified.
         * @param message TransactionResult
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.TransactionResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TransactionResult to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for TransactionResult
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Represents a TokenStorage */
    class TokenStorage extends $protobuf.rpc.Service {

        /**
         * Constructs a new TokenStorage service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new TokenStorage service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): TokenStorage;

        /**
         * Calls AddToWallet.
         * @param request AddToWalletRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and StorageResponse
         */
        public addToWallet(request: tokenengine.IAddToWalletRequest, callback: tokenengine.TokenStorage.AddToWalletCallback): void;

        /**
         * Calls AddToWallet.
         * @param request AddToWalletRequest message or plain object
         * @returns Promise
         */
        public addToWallet(request: tokenengine.IAddToWalletRequest): Promise<tokenengine.StorageResponse>;

        /**
         * Calls RemoveFromWallet.
         * @param request RemoveFromWalletRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and StorageResponse
         */
        public removeFromWallet(request: tokenengine.IRemoveFromWalletRequest, callback: tokenengine.TokenStorage.RemoveFromWalletCallback): void;

        /**
         * Calls RemoveFromWallet.
         * @param request RemoveFromWalletRequest message or plain object
         * @returns Promise
         */
        public removeFromWallet(request: tokenengine.IRemoveFromWalletRequest): Promise<tokenengine.StorageResponse>;

        /**
         * Calls GetWalletTokens.
         * @param request GetWalletTokensRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and GetWalletTokensResponse
         */
        public getWalletTokens(request: tokenengine.IGetWalletTokensRequest, callback: tokenengine.TokenStorage.GetWalletTokensCallback): void;

        /**
         * Calls GetWalletTokens.
         * @param request GetWalletTokensRequest message or plain object
         * @returns Promise
         */
        public getWalletTokens(request: tokenengine.IGetWalletTokensRequest): Promise<tokenengine.GetWalletTokensResponse>;

        /**
         * Calls BackupToSafe.
         * @param request BackupToSafeRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and StorageResponse
         */
        public backupToSafe(request: tokenengine.IBackupToSafeRequest, callback: tokenengine.TokenStorage.BackupToSafeCallback): void;

        /**
         * Calls BackupToSafe.
         * @param request BackupToSafeRequest message or plain object
         * @returns Promise
         */
        public backupToSafe(request: tokenengine.IBackupToSafeRequest): Promise<tokenengine.StorageResponse>;

        /**
         * Calls RestoreFromSafe.
         * @param request RestoreFromSafeRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and StorageResponse
         */
        public restoreFromSafe(request: tokenengine.IRestoreFromSafeRequest, callback: tokenengine.TokenStorage.RestoreFromSafeCallback): void;

        /**
         * Calls RestoreFromSafe.
         * @param request RestoreFromSafeRequest message or plain object
         * @returns Promise
         */
        public restoreFromSafe(request: tokenengine.IRestoreFromSafeRequest): Promise<tokenengine.StorageResponse>;

        /**
         * Calls GetSafeTokens.
         * @param request GetSafeTokensRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and GetSafeTokensResponse
         */
        public getSafeTokens(request: tokenengine.IGetSafeTokensRequest, callback: tokenengine.TokenStorage.GetSafeTokensCallback): void;

        /**
         * Calls GetSafeTokens.
         * @param request GetSafeTokensRequest message or plain object
         * @returns Promise
         */
        public getSafeTokens(request: tokenengine.IGetSafeTokensRequest): Promise<tokenengine.GetSafeTokensResponse>;

        /**
         * Calls SyncWallet.
         * @param request SyncRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and SyncResponse
         */
        public syncWallet(request: tokenengine.ISyncRequest, callback: tokenengine.TokenStorage.SyncWalletCallback): void;

        /**
         * Calls SyncWallet.
         * @param request SyncRequest message or plain object
         * @returns Promise
         */
        public syncWallet(request: tokenengine.ISyncRequest): Promise<tokenengine.SyncResponse>;
    }

    namespace TokenStorage {

        /**
         * Callback as used by {@link tokenengine.TokenStorage#addToWallet}.
         * @param error Error, if any
         * @param [response] StorageResponse
         */
        type AddToWalletCallback = (error: (Error|null), response?: tokenengine.StorageResponse) => void;

        /**
         * Callback as used by {@link tokenengine.TokenStorage#removeFromWallet}.
         * @param error Error, if any
         * @param [response] StorageResponse
         */
        type RemoveFromWalletCallback = (error: (Error|null), response?: tokenengine.StorageResponse) => void;

        /**
         * Callback as used by {@link tokenengine.TokenStorage#getWalletTokens}.
         * @param error Error, if any
         * @param [response] GetWalletTokensResponse
         */
        type GetWalletTokensCallback = (error: (Error|null), response?: tokenengine.GetWalletTokensResponse) => void;

        /**
         * Callback as used by {@link tokenengine.TokenStorage#backupToSafe}.
         * @param error Error, if any
         * @param [response] StorageResponse
         */
        type BackupToSafeCallback = (error: (Error|null), response?: tokenengine.StorageResponse) => void;

        /**
         * Callback as used by {@link tokenengine.TokenStorage#restoreFromSafe}.
         * @param error Error, if any
         * @param [response] StorageResponse
         */
        type RestoreFromSafeCallback = (error: (Error|null), response?: tokenengine.StorageResponse) => void;

        /**
         * Callback as used by {@link tokenengine.TokenStorage#getSafeTokens}.
         * @param error Error, if any
         * @param [response] GetSafeTokensResponse
         */
        type GetSafeTokensCallback = (error: (Error|null), response?: tokenengine.GetSafeTokensResponse) => void;

        /**
         * Callback as used by {@link tokenengine.TokenStorage#syncWallet}.
         * @param error Error, if any
         * @param [response] SyncResponse
         */
        type SyncWalletCallback = (error: (Error|null), response?: tokenengine.SyncResponse) => void;
    }

    /** Properties of an AddToWalletRequest. */
    interface IAddToWalletRequest {

        /** AddToWalletRequest tokens */
        tokens?: (tokenengine.IWalletToken[]|null);
    }

    /** Represents an AddToWalletRequest. */
    class AddToWalletRequest implements IAddToWalletRequest {

        /**
         * Constructs a new AddToWalletRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.IAddToWalletRequest);

        /** AddToWalletRequest tokens. */
        public tokens: tokenengine.IWalletToken[];

        /**
         * Creates a new AddToWalletRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AddToWalletRequest instance
         */
        public static create(properties?: tokenengine.IAddToWalletRequest): tokenengine.AddToWalletRequest;

        /**
         * Encodes the specified AddToWalletRequest message. Does not implicitly {@link tokenengine.AddToWalletRequest.verify|verify} messages.
         * @param message AddToWalletRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.IAddToWalletRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AddToWalletRequest message, length delimited. Does not implicitly {@link tokenengine.AddToWalletRequest.verify|verify} messages.
         * @param message AddToWalletRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.IAddToWalletRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AddToWalletRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AddToWalletRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.AddToWalletRequest;

        /**
         * Decodes an AddToWalletRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AddToWalletRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.AddToWalletRequest;

        /**
         * Verifies an AddToWalletRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AddToWalletRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AddToWalletRequest
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.AddToWalletRequest;

        /**
         * Creates a plain object from an AddToWalletRequest message. Also converts values to other types if specified.
         * @param message AddToWalletRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.AddToWalletRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AddToWalletRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for AddToWalletRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a RemoveFromWalletRequest. */
    interface IRemoveFromWalletRequest {

        /** RemoveFromWalletRequest tokenIds */
        tokenIds?: (string[]|null);
    }

    /** Represents a RemoveFromWalletRequest. */
    class RemoveFromWalletRequest implements IRemoveFromWalletRequest {

        /**
         * Constructs a new RemoveFromWalletRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.IRemoveFromWalletRequest);

        /** RemoveFromWalletRequest tokenIds. */
        public tokenIds: string[];

        /**
         * Creates a new RemoveFromWalletRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RemoveFromWalletRequest instance
         */
        public static create(properties?: tokenengine.IRemoveFromWalletRequest): tokenengine.RemoveFromWalletRequest;

        /**
         * Encodes the specified RemoveFromWalletRequest message. Does not implicitly {@link tokenengine.RemoveFromWalletRequest.verify|verify} messages.
         * @param message RemoveFromWalletRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.IRemoveFromWalletRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RemoveFromWalletRequest message, length delimited. Does not implicitly {@link tokenengine.RemoveFromWalletRequest.verify|verify} messages.
         * @param message RemoveFromWalletRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.IRemoveFromWalletRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RemoveFromWalletRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RemoveFromWalletRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.RemoveFromWalletRequest;

        /**
         * Decodes a RemoveFromWalletRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RemoveFromWalletRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.RemoveFromWalletRequest;

        /**
         * Verifies a RemoveFromWalletRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RemoveFromWalletRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RemoveFromWalletRequest
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.RemoveFromWalletRequest;

        /**
         * Creates a plain object from a RemoveFromWalletRequest message. Also converts values to other types if specified.
         * @param message RemoveFromWalletRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.RemoveFromWalletRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RemoveFromWalletRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for RemoveFromWalletRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a GetWalletTokensRequest. */
    interface IGetWalletTokensRequest {

        /** GetWalletTokensRequest status */
        status?: (string|null);

        /** GetWalletTokensRequest offlineOnly */
        offlineOnly?: (boolean|null);
    }

    /** Represents a GetWalletTokensRequest. */
    class GetWalletTokensRequest implements IGetWalletTokensRequest {

        /**
         * Constructs a new GetWalletTokensRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.IGetWalletTokensRequest);

        /** GetWalletTokensRequest status. */
        public status: string;

        /** GetWalletTokensRequest offlineOnly. */
        public offlineOnly: boolean;

        /**
         * Creates a new GetWalletTokensRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetWalletTokensRequest instance
         */
        public static create(properties?: tokenengine.IGetWalletTokensRequest): tokenengine.GetWalletTokensRequest;

        /**
         * Encodes the specified GetWalletTokensRequest message. Does not implicitly {@link tokenengine.GetWalletTokensRequest.verify|verify} messages.
         * @param message GetWalletTokensRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.IGetWalletTokensRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetWalletTokensRequest message, length delimited. Does not implicitly {@link tokenengine.GetWalletTokensRequest.verify|verify} messages.
         * @param message GetWalletTokensRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.IGetWalletTokensRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetWalletTokensRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetWalletTokensRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.GetWalletTokensRequest;

        /**
         * Decodes a GetWalletTokensRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetWalletTokensRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.GetWalletTokensRequest;

        /**
         * Verifies a GetWalletTokensRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetWalletTokensRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetWalletTokensRequest
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.GetWalletTokensRequest;

        /**
         * Creates a plain object from a GetWalletTokensRequest message. Also converts values to other types if specified.
         * @param message GetWalletTokensRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.GetWalletTokensRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetWalletTokensRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for GetWalletTokensRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a GetWalletTokensResponse. */
    interface IGetWalletTokensResponse {

        /** GetWalletTokensResponse tokens */
        tokens?: (tokenengine.IWalletToken[]|null);
    }

    /** Represents a GetWalletTokensResponse. */
    class GetWalletTokensResponse implements IGetWalletTokensResponse {

        /**
         * Constructs a new GetWalletTokensResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.IGetWalletTokensResponse);

        /** GetWalletTokensResponse tokens. */
        public tokens: tokenengine.IWalletToken[];

        /**
         * Creates a new GetWalletTokensResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetWalletTokensResponse instance
         */
        public static create(properties?: tokenengine.IGetWalletTokensResponse): tokenengine.GetWalletTokensResponse;

        /**
         * Encodes the specified GetWalletTokensResponse message. Does not implicitly {@link tokenengine.GetWalletTokensResponse.verify|verify} messages.
         * @param message GetWalletTokensResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.IGetWalletTokensResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetWalletTokensResponse message, length delimited. Does not implicitly {@link tokenengine.GetWalletTokensResponse.verify|verify} messages.
         * @param message GetWalletTokensResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.IGetWalletTokensResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetWalletTokensResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetWalletTokensResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.GetWalletTokensResponse;

        /**
         * Decodes a GetWalletTokensResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetWalletTokensResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.GetWalletTokensResponse;

        /**
         * Verifies a GetWalletTokensResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetWalletTokensResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetWalletTokensResponse
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.GetWalletTokensResponse;

        /**
         * Creates a plain object from a GetWalletTokensResponse message. Also converts values to other types if specified.
         * @param message GetWalletTokensResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.GetWalletTokensResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetWalletTokensResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for GetWalletTokensResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a BackupToSafeRequest. */
    interface IBackupToSafeRequest {

        /** BackupToSafeRequest tokenIds */
        tokenIds?: (string[]|null);

        /** BackupToSafeRequest location */
        location?: (string|null);
    }

    /** Represents a BackupToSafeRequest. */
    class BackupToSafeRequest implements IBackupToSafeRequest {

        /**
         * Constructs a new BackupToSafeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.IBackupToSafeRequest);

        /** BackupToSafeRequest tokenIds. */
        public tokenIds: string[];

        /** BackupToSafeRequest location. */
        public location: string;

        /**
         * Creates a new BackupToSafeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BackupToSafeRequest instance
         */
        public static create(properties?: tokenengine.IBackupToSafeRequest): tokenengine.BackupToSafeRequest;

        /**
         * Encodes the specified BackupToSafeRequest message. Does not implicitly {@link tokenengine.BackupToSafeRequest.verify|verify} messages.
         * @param message BackupToSafeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.IBackupToSafeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BackupToSafeRequest message, length delimited. Does not implicitly {@link tokenengine.BackupToSafeRequest.verify|verify} messages.
         * @param message BackupToSafeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.IBackupToSafeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BackupToSafeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BackupToSafeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.BackupToSafeRequest;

        /**
         * Decodes a BackupToSafeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BackupToSafeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.BackupToSafeRequest;

        /**
         * Verifies a BackupToSafeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BackupToSafeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BackupToSafeRequest
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.BackupToSafeRequest;

        /**
         * Creates a plain object from a BackupToSafeRequest message. Also converts values to other types if specified.
         * @param message BackupToSafeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.BackupToSafeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BackupToSafeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for BackupToSafeRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a RestoreFromSafeRequest. */
    interface IRestoreFromSafeRequest {

        /** RestoreFromSafeRequest tokenIds */
        tokenIds?: (string[]|null);

        /** RestoreFromSafeRequest location */
        location?: (string|null);
    }

    /** Represents a RestoreFromSafeRequest. */
    class RestoreFromSafeRequest implements IRestoreFromSafeRequest {

        /**
         * Constructs a new RestoreFromSafeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.IRestoreFromSafeRequest);

        /** RestoreFromSafeRequest tokenIds. */
        public tokenIds: string[];

        /** RestoreFromSafeRequest location. */
        public location: string;

        /**
         * Creates a new RestoreFromSafeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RestoreFromSafeRequest instance
         */
        public static create(properties?: tokenengine.IRestoreFromSafeRequest): tokenengine.RestoreFromSafeRequest;

        /**
         * Encodes the specified RestoreFromSafeRequest message. Does not implicitly {@link tokenengine.RestoreFromSafeRequest.verify|verify} messages.
         * @param message RestoreFromSafeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.IRestoreFromSafeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RestoreFromSafeRequest message, length delimited. Does not implicitly {@link tokenengine.RestoreFromSafeRequest.verify|verify} messages.
         * @param message RestoreFromSafeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.IRestoreFromSafeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RestoreFromSafeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RestoreFromSafeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.RestoreFromSafeRequest;

        /**
         * Decodes a RestoreFromSafeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RestoreFromSafeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.RestoreFromSafeRequest;

        /**
         * Verifies a RestoreFromSafeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RestoreFromSafeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RestoreFromSafeRequest
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.RestoreFromSafeRequest;

        /**
         * Creates a plain object from a RestoreFromSafeRequest message. Also converts values to other types if specified.
         * @param message RestoreFromSafeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.RestoreFromSafeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RestoreFromSafeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for RestoreFromSafeRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a GetSafeTokensRequest. */
    interface IGetSafeTokensRequest {

        /** GetSafeTokensRequest location */
        location?: (string|null);
    }

    /** Represents a GetSafeTokensRequest. */
    class GetSafeTokensRequest implements IGetSafeTokensRequest {

        /**
         * Constructs a new GetSafeTokensRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.IGetSafeTokensRequest);

        /** GetSafeTokensRequest location. */
        public location: string;

        /**
         * Creates a new GetSafeTokensRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSafeTokensRequest instance
         */
        public static create(properties?: tokenengine.IGetSafeTokensRequest): tokenengine.GetSafeTokensRequest;

        /**
         * Encodes the specified GetSafeTokensRequest message. Does not implicitly {@link tokenengine.GetSafeTokensRequest.verify|verify} messages.
         * @param message GetSafeTokensRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.IGetSafeTokensRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSafeTokensRequest message, length delimited. Does not implicitly {@link tokenengine.GetSafeTokensRequest.verify|verify} messages.
         * @param message GetSafeTokensRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.IGetSafeTokensRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSafeTokensRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSafeTokensRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.GetSafeTokensRequest;

        /**
         * Decodes a GetSafeTokensRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSafeTokensRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.GetSafeTokensRequest;

        /**
         * Verifies a GetSafeTokensRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSafeTokensRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSafeTokensRequest
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.GetSafeTokensRequest;

        /**
         * Creates a plain object from a GetSafeTokensRequest message. Also converts values to other types if specified.
         * @param message GetSafeTokensRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.GetSafeTokensRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSafeTokensRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for GetSafeTokensRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a GetSafeTokensResponse. */
    interface IGetSafeTokensResponse {

        /** GetSafeTokensResponse tokens */
        tokens?: (tokenengine.ISafeToken[]|null);
    }

    /** Represents a GetSafeTokensResponse. */
    class GetSafeTokensResponse implements IGetSafeTokensResponse {

        /**
         * Constructs a new GetSafeTokensResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.IGetSafeTokensResponse);

        /** GetSafeTokensResponse tokens. */
        public tokens: tokenengine.ISafeToken[];

        /**
         * Creates a new GetSafeTokensResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GetSafeTokensResponse instance
         */
        public static create(properties?: tokenengine.IGetSafeTokensResponse): tokenengine.GetSafeTokensResponse;

        /**
         * Encodes the specified GetSafeTokensResponse message. Does not implicitly {@link tokenengine.GetSafeTokensResponse.verify|verify} messages.
         * @param message GetSafeTokensResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.IGetSafeTokensResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GetSafeTokensResponse message, length delimited. Does not implicitly {@link tokenengine.GetSafeTokensResponse.verify|verify} messages.
         * @param message GetSafeTokensResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.IGetSafeTokensResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GetSafeTokensResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GetSafeTokensResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.GetSafeTokensResponse;

        /**
         * Decodes a GetSafeTokensResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GetSafeTokensResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.GetSafeTokensResponse;

        /**
         * Verifies a GetSafeTokensResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GetSafeTokensResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GetSafeTokensResponse
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.GetSafeTokensResponse;

        /**
         * Creates a plain object from a GetSafeTokensResponse message. Also converts values to other types if specified.
         * @param message GetSafeTokensResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.GetSafeTokensResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GetSafeTokensResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for GetSafeTokensResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SyncRequest. */
    interface ISyncRequest {

        /** SyncRequest lastSyncTimestamp */
        lastSyncTimestamp?: (string|null);
    }

    /** Represents a SyncRequest. */
    class SyncRequest implements ISyncRequest {

        /**
         * Constructs a new SyncRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.ISyncRequest);

        /** SyncRequest lastSyncTimestamp. */
        public lastSyncTimestamp: string;

        /**
         * Creates a new SyncRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SyncRequest instance
         */
        public static create(properties?: tokenengine.ISyncRequest): tokenengine.SyncRequest;

        /**
         * Encodes the specified SyncRequest message. Does not implicitly {@link tokenengine.SyncRequest.verify|verify} messages.
         * @param message SyncRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.ISyncRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SyncRequest message, length delimited. Does not implicitly {@link tokenengine.SyncRequest.verify|verify} messages.
         * @param message SyncRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.ISyncRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SyncRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SyncRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.SyncRequest;

        /**
         * Decodes a SyncRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SyncRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.SyncRequest;

        /**
         * Verifies a SyncRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SyncRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SyncRequest
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.SyncRequest;

        /**
         * Creates a plain object from a SyncRequest message. Also converts values to other types if specified.
         * @param message SyncRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.SyncRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SyncRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SyncRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SyncResponse. */
    interface ISyncResponse {

        /** SyncResponse updatedTokens */
        updatedTokens?: (tokenengine.IWalletToken[]|null);

        /** SyncResponse removedTokenIds */
        removedTokenIds?: (string[]|null);

        /** SyncResponse syncTimestamp */
        syncTimestamp?: (string|null);
    }

    /** Represents a SyncResponse. */
    class SyncResponse implements ISyncResponse {

        /**
         * Constructs a new SyncResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.ISyncResponse);

        /** SyncResponse updatedTokens. */
        public updatedTokens: tokenengine.IWalletToken[];

        /** SyncResponse removedTokenIds. */
        public removedTokenIds: string[];

        /** SyncResponse syncTimestamp. */
        public syncTimestamp: string;

        /**
         * Creates a new SyncResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SyncResponse instance
         */
        public static create(properties?: tokenengine.ISyncResponse): tokenengine.SyncResponse;

        /**
         * Encodes the specified SyncResponse message. Does not implicitly {@link tokenengine.SyncResponse.verify|verify} messages.
         * @param message SyncResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.ISyncResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SyncResponse message, length delimited. Does not implicitly {@link tokenengine.SyncResponse.verify|verify} messages.
         * @param message SyncResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.ISyncResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SyncResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SyncResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.SyncResponse;

        /**
         * Decodes a SyncResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SyncResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.SyncResponse;

        /**
         * Verifies a SyncResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SyncResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SyncResponse
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.SyncResponse;

        /**
         * Creates a plain object from a SyncResponse message. Also converts values to other types if specified.
         * @param message SyncResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.SyncResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SyncResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SyncResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a StorageResponse. */
    interface IStorageResponse {

        /** StorageResponse success */
        success?: (boolean|null);

        /** StorageResponse errorMessage */
        errorMessage?: (string|null);

        /** StorageResponse timestamp */
        timestamp?: (number|Long|null);
    }

    /** Represents a StorageResponse. */
    class StorageResponse implements IStorageResponse {

        /**
         * Constructs a new StorageResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: tokenengine.IStorageResponse);

        /** StorageResponse success. */
        public success: boolean;

        /** StorageResponse errorMessage. */
        public errorMessage: string;

        /** StorageResponse timestamp. */
        public timestamp: (number|Long);

        /**
         * Creates a new StorageResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StorageResponse instance
         */
        public static create(properties?: tokenengine.IStorageResponse): tokenengine.StorageResponse;

        /**
         * Encodes the specified StorageResponse message. Does not implicitly {@link tokenengine.StorageResponse.verify|verify} messages.
         * @param message StorageResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: tokenengine.IStorageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StorageResponse message, length delimited. Does not implicitly {@link tokenengine.StorageResponse.verify|verify} messages.
         * @param message StorageResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: tokenengine.IStorageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StorageResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StorageResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): tokenengine.StorageResponse;

        /**
         * Decodes a StorageResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StorageResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): tokenengine.StorageResponse;

        /**
         * Verifies a StorageResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StorageResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StorageResponse
         */
        public static fromObject(object: { [k: string]: any }): tokenengine.StorageResponse;

        /**
         * Creates a plain object from a StorageResponse message. Also converts values to other types if specified.
         * @param message StorageResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: tokenengine.StorageResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StorageResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for StorageResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }
}

/** Namespace juicetokens. */
export namespace juicetokens {

    /** Namespace token. */
    namespace token {

        /** Namespace denomination. */
        namespace denomination {

            /** Properties of a DenominationDistribution. */
            interface IDenominationDistribution {

                /** DenominationDistribution denominationCounts */
                denominationCounts?: ({ [k: string]: number }|null);

                /** DenominationDistribution totalValue */
                totalValue?: (number|Long|null);

                /** DenominationDistribution totalTokens */
                totalTokens?: (number|null);

                /** DenominationDistribution ownerId */
                ownerId?: (string|null);

                /** DenominationDistribution lastUpdatedMs */
                lastUpdatedMs?: (number|Long|null);
            }

            /** Represents a DenominationDistribution. */
            class DenominationDistribution implements IDenominationDistribution {

                /**
                 * Constructs a new DenominationDistribution.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.denomination.IDenominationDistribution);

                /** DenominationDistribution denominationCounts. */
                public denominationCounts: { [k: string]: number };

                /** DenominationDistribution totalValue. */
                public totalValue: (number|Long);

                /** DenominationDistribution totalTokens. */
                public totalTokens: number;

                /** DenominationDistribution ownerId. */
                public ownerId: string;

                /** DenominationDistribution lastUpdatedMs. */
                public lastUpdatedMs: (number|Long);

                /**
                 * Creates a new DenominationDistribution instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DenominationDistribution instance
                 */
                public static create(properties?: juicetokens.token.denomination.IDenominationDistribution): juicetokens.token.denomination.DenominationDistribution;

                /**
                 * Encodes the specified DenominationDistribution message. Does not implicitly {@link juicetokens.token.denomination.DenominationDistribution.verify|verify} messages.
                 * @param message DenominationDistribution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.denomination.IDenominationDistribution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenominationDistribution message, length delimited. Does not implicitly {@link juicetokens.token.denomination.DenominationDistribution.verify|verify} messages.
                 * @param message DenominationDistribution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.denomination.IDenominationDistribution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenominationDistribution message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenominationDistribution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.denomination.DenominationDistribution;

                /**
                 * Decodes a DenominationDistribution message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenominationDistribution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.denomination.DenominationDistribution;

                /**
                 * Verifies a DenominationDistribution message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenominationDistribution message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenominationDistribution
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.denomination.DenominationDistribution;

                /**
                 * Creates a plain object from a DenominationDistribution message. Also converts values to other types if specified.
                 * @param message DenominationDistribution
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.denomination.DenominationDistribution, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenominationDistribution to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DenominationDistribution
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DenominationStatus. */
            interface IDenominationStatus {

                /** DenominationStatus denomination */
                denomination?: (number|null);

                /** DenominationStatus count */
                count?: (number|null);

                /** DenominationStatus idealCount */
                idealCount?: (number|null);

                /** DenominationStatus statusCode */
                statusCode?: (number|null);

                /** DenominationStatus delta */
                delta?: (number|null);
            }

            /** Represents a DenominationStatus. */
            class DenominationStatus implements IDenominationStatus {

                /**
                 * Constructs a new DenominationStatus.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.denomination.IDenominationStatus);

                /** DenominationStatus denomination. */
                public denomination: number;

                /** DenominationStatus count. */
                public count: number;

                /** DenominationStatus idealCount. */
                public idealCount: number;

                /** DenominationStatus statusCode. */
                public statusCode: number;

                /** DenominationStatus delta. */
                public delta: number;

                /**
                 * Creates a new DenominationStatus instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DenominationStatus instance
                 */
                public static create(properties?: juicetokens.token.denomination.IDenominationStatus): juicetokens.token.denomination.DenominationStatus;

                /**
                 * Encodes the specified DenominationStatus message. Does not implicitly {@link juicetokens.token.denomination.DenominationStatus.verify|verify} messages.
                 * @param message DenominationStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.denomination.IDenominationStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenominationStatus message, length delimited. Does not implicitly {@link juicetokens.token.denomination.DenominationStatus.verify|verify} messages.
                 * @param message DenominationStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.denomination.IDenominationStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenominationStatus message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenominationStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.denomination.DenominationStatus;

                /**
                 * Decodes a DenominationStatus message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenominationStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.denomination.DenominationStatus;

                /**
                 * Verifies a DenominationStatus message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenominationStatus message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenominationStatus
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.denomination.DenominationStatus;

                /**
                 * Creates a plain object from a DenominationStatus message. Also converts values to other types if specified.
                 * @param message DenominationStatus
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.denomination.DenominationStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenominationStatus to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DenominationStatus
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DenominationOptimization. */
            interface IDenominationOptimization {

                /** DenominationOptimization type */
                type?: (juicetokens.token.denomination.DenominationOptimization.OptimizationType|null);

                /** DenominationOptimization denominationWeights */
                denominationWeights?: ({ [k: string]: number }|null);

                /** DenominationOptimization constraints */
                constraints?: (juicetokens.token.denomination.ITokenSelectionConstraint|null);

                /** DenominationOptimization targetDistribution */
                targetDistribution?: (juicetokens.token.denomination.IDenominationDistribution|null);
            }

            /** Represents a DenominationOptimization. */
            class DenominationOptimization implements IDenominationOptimization {

                /**
                 * Constructs a new DenominationOptimization.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.denomination.IDenominationOptimization);

                /** DenominationOptimization type. */
                public type: juicetokens.token.denomination.DenominationOptimization.OptimizationType;

                /** DenominationOptimization denominationWeights. */
                public denominationWeights: { [k: string]: number };

                /** DenominationOptimization constraints. */
                public constraints?: (juicetokens.token.denomination.ITokenSelectionConstraint|null);

                /** DenominationOptimization targetDistribution. */
                public targetDistribution?: (juicetokens.token.denomination.IDenominationDistribution|null);

                /**
                 * Creates a new DenominationOptimization instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DenominationOptimization instance
                 */
                public static create(properties?: juicetokens.token.denomination.IDenominationOptimization): juicetokens.token.denomination.DenominationOptimization;

                /**
                 * Encodes the specified DenominationOptimization message. Does not implicitly {@link juicetokens.token.denomination.DenominationOptimization.verify|verify} messages.
                 * @param message DenominationOptimization message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.denomination.IDenominationOptimization, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenominationOptimization message, length delimited. Does not implicitly {@link juicetokens.token.denomination.DenominationOptimization.verify|verify} messages.
                 * @param message DenominationOptimization message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.denomination.IDenominationOptimization, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenominationOptimization message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenominationOptimization
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.denomination.DenominationOptimization;

                /**
                 * Decodes a DenominationOptimization message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenominationOptimization
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.denomination.DenominationOptimization;

                /**
                 * Verifies a DenominationOptimization message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenominationOptimization message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenominationOptimization
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.denomination.DenominationOptimization;

                /**
                 * Creates a plain object from a DenominationOptimization message. Also converts values to other types if specified.
                 * @param message DenominationOptimization
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.denomination.DenominationOptimization, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenominationOptimization to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DenominationOptimization
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace DenominationOptimization {

                /** OptimizationType enum. */
                enum OptimizationType {
                    MINIMIZE_TOKENS = 0,
                    BALANCE_DISTRIBUTION = 1,
                    EXACT_MATCH = 2,
                    FAVOR_EXPIRING = 3
                }
            }

            /** Properties of a TokenSelectionConstraint. */
            interface ITokenSelectionConstraint {

                /** TokenSelectionConstraint enforceMinAccountBalance */
                enforceMinAccountBalance?: (boolean|null);

                /** TokenSelectionConstraint minTokensRequired */
                minTokensRequired?: (number|null);

                /** TokenSelectionConstraint protectLastIssuanceTokens */
                protectLastIssuanceTokens?: (boolean|null);

                /** TokenSelectionConstraint issuanceId */
                issuanceId?: (string|null);

                /** TokenSelectionConstraint issuanceMinTokens */
                issuanceMinTokens?: (number|null);
            }

            /** Represents a TokenSelectionConstraint. */
            class TokenSelectionConstraint implements ITokenSelectionConstraint {

                /**
                 * Constructs a new TokenSelectionConstraint.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.denomination.ITokenSelectionConstraint);

                /** TokenSelectionConstraint enforceMinAccountBalance. */
                public enforceMinAccountBalance: boolean;

                /** TokenSelectionConstraint minTokensRequired. */
                public minTokensRequired: number;

                /** TokenSelectionConstraint protectLastIssuanceTokens. */
                public protectLastIssuanceTokens: boolean;

                /** TokenSelectionConstraint issuanceId. */
                public issuanceId: string;

                /** TokenSelectionConstraint issuanceMinTokens. */
                public issuanceMinTokens: number;

                /**
                 * Creates a new TokenSelectionConstraint instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TokenSelectionConstraint instance
                 */
                public static create(properties?: juicetokens.token.denomination.ITokenSelectionConstraint): juicetokens.token.denomination.TokenSelectionConstraint;

                /**
                 * Encodes the specified TokenSelectionConstraint message. Does not implicitly {@link juicetokens.token.denomination.TokenSelectionConstraint.verify|verify} messages.
                 * @param message TokenSelectionConstraint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.denomination.ITokenSelectionConstraint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TokenSelectionConstraint message, length delimited. Does not implicitly {@link juicetokens.token.denomination.TokenSelectionConstraint.verify|verify} messages.
                 * @param message TokenSelectionConstraint message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.denomination.ITokenSelectionConstraint, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TokenSelectionConstraint message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TokenSelectionConstraint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.denomination.TokenSelectionConstraint;

                /**
                 * Decodes a TokenSelectionConstraint message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TokenSelectionConstraint
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.denomination.TokenSelectionConstraint;

                /**
                 * Verifies a TokenSelectionConstraint message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TokenSelectionConstraint message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TokenSelectionConstraint
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.denomination.TokenSelectionConstraint;

                /**
                 * Creates a plain object from a TokenSelectionConstraint message. Also converts values to other types if specified.
                 * @param message TokenSelectionConstraint
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.denomination.TokenSelectionConstraint, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TokenSelectionConstraint to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TokenSelectionConstraint
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DenominationVectorClock. */
            interface IDenominationVectorClock {

                /** DenominationVectorClock denominationStatus */
                denominationStatus?: ({ [k: string]: number }|null);

                /** DenominationVectorClock userId */
                userId?: (string|null);

                /** DenominationVectorClock timestampMs */
                timestampMs?: (number|Long|null);
            }

            /** Represents a DenominationVectorClock. */
            class DenominationVectorClock implements IDenominationVectorClock {

                /**
                 * Constructs a new DenominationVectorClock.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.denomination.IDenominationVectorClock);

                /** DenominationVectorClock denominationStatus. */
                public denominationStatus: { [k: string]: number };

                /** DenominationVectorClock userId. */
                public userId: string;

                /** DenominationVectorClock timestampMs. */
                public timestampMs: (number|Long);

                /**
                 * Creates a new DenominationVectorClock instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DenominationVectorClock instance
                 */
                public static create(properties?: juicetokens.token.denomination.IDenominationVectorClock): juicetokens.token.denomination.DenominationVectorClock;

                /**
                 * Encodes the specified DenominationVectorClock message. Does not implicitly {@link juicetokens.token.denomination.DenominationVectorClock.verify|verify} messages.
                 * @param message DenominationVectorClock message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.denomination.IDenominationVectorClock, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenominationVectorClock message, length delimited. Does not implicitly {@link juicetokens.token.denomination.DenominationVectorClock.verify|verify} messages.
                 * @param message DenominationVectorClock message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.denomination.IDenominationVectorClock, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenominationVectorClock message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenominationVectorClock
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.denomination.DenominationVectorClock;

                /**
                 * Decodes a DenominationVectorClock message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenominationVectorClock
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.denomination.DenominationVectorClock;

                /**
                 * Verifies a DenominationVectorClock message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenominationVectorClock message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenominationVectorClock
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.denomination.DenominationVectorClock;

                /**
                 * Creates a plain object from a DenominationVectorClock message. Also converts values to other types if specified.
                 * @param message DenominationVectorClock
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.denomination.DenominationVectorClock, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenominationVectorClock to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DenominationVectorClock
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DenominationTransformation. */
            interface IDenominationTransformation {

                /** DenominationTransformation initial */
                initial?: (juicetokens.token.denomination.IDenominationDistribution|null);

                /** DenominationTransformation final */
                final?: (juicetokens.token.denomination.IDenominationDistribution|null);

                /** DenominationTransformation type */
                type?: (juicetokens.token.denomination.DenominationTransformation.TransformationType|null);

                /** DenominationTransformation transactionId */
                transactionId?: (string|null);

                /** DenominationTransformation timestampMs */
                timestampMs?: (number|Long|null);
            }

            /** Represents a DenominationTransformation. */
            class DenominationTransformation implements IDenominationTransformation {

                /**
                 * Constructs a new DenominationTransformation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.denomination.IDenominationTransformation);

                /** DenominationTransformation initial. */
                public initial?: (juicetokens.token.denomination.IDenominationDistribution|null);

                /** DenominationTransformation final. */
                public final?: (juicetokens.token.denomination.IDenominationDistribution|null);

                /** DenominationTransformation type. */
                public type: juicetokens.token.denomination.DenominationTransformation.TransformationType;

                /** DenominationTransformation transactionId. */
                public transactionId: string;

                /** DenominationTransformation timestampMs. */
                public timestampMs: (number|Long);

                /**
                 * Creates a new DenominationTransformation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DenominationTransformation instance
                 */
                public static create(properties?: juicetokens.token.denomination.IDenominationTransformation): juicetokens.token.denomination.DenominationTransformation;

                /**
                 * Encodes the specified DenominationTransformation message. Does not implicitly {@link juicetokens.token.denomination.DenominationTransformation.verify|verify} messages.
                 * @param message DenominationTransformation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.denomination.IDenominationTransformation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenominationTransformation message, length delimited. Does not implicitly {@link juicetokens.token.denomination.DenominationTransformation.verify|verify} messages.
                 * @param message DenominationTransformation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.denomination.IDenominationTransformation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenominationTransformation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenominationTransformation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.denomination.DenominationTransformation;

                /**
                 * Decodes a DenominationTransformation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenominationTransformation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.denomination.DenominationTransformation;

                /**
                 * Verifies a DenominationTransformation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenominationTransformation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenominationTransformation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.denomination.DenominationTransformation;

                /**
                 * Creates a plain object from a DenominationTransformation message. Also converts values to other types if specified.
                 * @param message DenominationTransformation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.denomination.DenominationTransformation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenominationTransformation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DenominationTransformation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace DenominationTransformation {

                /** TransformationType enum. */
                enum TransformationType {
                    MERGE = 0,
                    SPLIT = 1,
                    EXCHANGE = 2,
                    PAYMENT = 3,
                    CHANGE = 4
                }
            }

            /** Properties of a DenominationMix. */
            interface IDenominationMix {

                /** DenominationMix value */
                value?: (number|Long|null);

                /** DenominationMix counts */
                counts?: ({ [k: string]: number }|null);

                /** DenominationMix totalTokens */
                totalTokens?: (number|null);

                /** DenominationMix isOptimal */
                isOptimal?: (boolean|null);

                /** DenominationMix alternatives */
                alternatives?: (juicetokens.token.denomination.IDenominationMix[]|null);
            }

            /** Represents a DenominationMix. */
            class DenominationMix implements IDenominationMix {

                /**
                 * Constructs a new DenominationMix.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.denomination.IDenominationMix);

                /** DenominationMix value. */
                public value: (number|Long);

                /** DenominationMix counts. */
                public counts: { [k: string]: number };

                /** DenominationMix totalTokens. */
                public totalTokens: number;

                /** DenominationMix isOptimal. */
                public isOptimal: boolean;

                /** DenominationMix alternatives. */
                public alternatives: juicetokens.token.denomination.IDenominationMix[];

                /**
                 * Creates a new DenominationMix instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DenominationMix instance
                 */
                public static create(properties?: juicetokens.token.denomination.IDenominationMix): juicetokens.token.denomination.DenominationMix;

                /**
                 * Encodes the specified DenominationMix message. Does not implicitly {@link juicetokens.token.denomination.DenominationMix.verify|verify} messages.
                 * @param message DenominationMix message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.denomination.IDenominationMix, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenominationMix message, length delimited. Does not implicitly {@link juicetokens.token.denomination.DenominationMix.verify|verify} messages.
                 * @param message DenominationMix message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.denomination.IDenominationMix, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenominationMix message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenominationMix
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.denomination.DenominationMix;

                /**
                 * Decodes a DenominationMix message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenominationMix
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.denomination.DenominationMix;

                /**
                 * Verifies a DenominationMix message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenominationMix message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenominationMix
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.denomination.DenominationMix;

                /**
                 * Creates a plain object from a DenominationMix message. Also converts values to other types if specified.
                 * @param message DenominationMix
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.denomination.DenominationMix, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenominationMix to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DenominationMix
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ChangeCalculation. */
            interface IChangeCalculation {

                /** ChangeCalculation totalAmount */
                totalAmount?: (number|Long|null);

                /** ChangeCalculation paymentAmount */
                paymentAmount?: (number|Long|null);

                /** ChangeCalculation changeAmount */
                changeAmount?: (number|Long|null);

                /** ChangeCalculation bufferAmount */
                bufferAmount?: (number|null);

                /** ChangeCalculation paymentDenominations */
                paymentDenominations?: ({ [k: string]: number }|null);

                /** ChangeCalculation changeDenominations */
                changeDenominations?: ({ [k: string]: number }|null);

                /** ChangeCalculation transactionId */
                transactionId?: (string|null);

                /** ChangeCalculation timestampMs */
                timestampMs?: (number|Long|null);
            }

            /** Represents a ChangeCalculation. */
            class ChangeCalculation implements IChangeCalculation {

                /**
                 * Constructs a new ChangeCalculation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.denomination.IChangeCalculation);

                /** ChangeCalculation totalAmount. */
                public totalAmount: (number|Long);

                /** ChangeCalculation paymentAmount. */
                public paymentAmount: (number|Long);

                /** ChangeCalculation changeAmount. */
                public changeAmount: (number|Long);

                /** ChangeCalculation bufferAmount. */
                public bufferAmount: number;

                /** ChangeCalculation paymentDenominations. */
                public paymentDenominations: { [k: string]: number };

                /** ChangeCalculation changeDenominations. */
                public changeDenominations: { [k: string]: number };

                /** ChangeCalculation transactionId. */
                public transactionId: string;

                /** ChangeCalculation timestampMs. */
                public timestampMs: (number|Long);

                /**
                 * Creates a new ChangeCalculation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChangeCalculation instance
                 */
                public static create(properties?: juicetokens.token.denomination.IChangeCalculation): juicetokens.token.denomination.ChangeCalculation;

                /**
                 * Encodes the specified ChangeCalculation message. Does not implicitly {@link juicetokens.token.denomination.ChangeCalculation.verify|verify} messages.
                 * @param message ChangeCalculation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.denomination.IChangeCalculation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChangeCalculation message, length delimited. Does not implicitly {@link juicetokens.token.denomination.ChangeCalculation.verify|verify} messages.
                 * @param message ChangeCalculation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.denomination.IChangeCalculation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChangeCalculation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChangeCalculation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.denomination.ChangeCalculation;

                /**
                 * Decodes a ChangeCalculation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChangeCalculation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.denomination.ChangeCalculation;

                /**
                 * Verifies a ChangeCalculation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChangeCalculation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChangeCalculation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.denomination.ChangeCalculation;

                /**
                 * Creates a plain object from a ChangeCalculation message. Also converts values to other types if specified.
                 * @param message ChangeCalculation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.denomination.ChangeCalculation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChangeCalculation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ChangeCalculation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Namespace model. */
        namespace model {

            /** DenominationValue enum. */
            enum DenominationValue {
                DENOMINATION_UNSPECIFIED = 0,
                DENOMINATION_1 = 1,
                DENOMINATION_2 = 2,
                DENOMINATION_5 = 5,
                DENOMINATION_10 = 10,
                DENOMINATION_20 = 20,
                DENOMINATION_50 = 50,
                DENOMINATION_100 = 100,
                DENOMINATION_200 = 200,
                DENOMINATION_500 = 500
            }

            /** Properties of a Token. */
            interface IToken {

                /** Token id */
                id?: (string|null);

                /** Token denomination */
                denomination?: (juicetokens.token.model.DenominationValue|null);

                /** Token value */
                value?: (number|Long|null);

                /** Token metadata */
                metadata?: (juicetokens.token.model.ITokenMetadata|null);

                /** Token createdAtMs */
                createdAtMs?: (number|Long|null);

                /** Token updatedAtMs */
                updatedAtMs?: (number|Long|null);

                /** Token telomeer */
                telomeer?: (juicetokens.token.model.ITelomeer|null);

                /** Token state */
                state?: (juicetokens.token.model.TokenState|null);

                /** Token version */
                version?: (number|null);

                /** Token type */
                type?: (juicetokens.token.model.TokenType|null);
            }

            /** Represents a Token. */
            class Token implements IToken {

                /**
                 * Constructs a new Token.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IToken);

                /** Token id. */
                public id: string;

                /** Token denomination. */
                public denomination: juicetokens.token.model.DenominationValue;

                /** Token value. */
                public value: (number|Long);

                /** Token metadata. */
                public metadata?: (juicetokens.token.model.ITokenMetadata|null);

                /** Token createdAtMs. */
                public createdAtMs: (number|Long);

                /** Token updatedAtMs. */
                public updatedAtMs: (number|Long);

                /** Token telomeer. */
                public telomeer?: (juicetokens.token.model.ITelomeer|null);

                /** Token state. */
                public state: juicetokens.token.model.TokenState;

                /** Token version. */
                public version: number;

                /** Token type. */
                public type: juicetokens.token.model.TokenType;

                /**
                 * Creates a new Token instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Token instance
                 */
                public static create(properties?: juicetokens.token.model.IToken): juicetokens.token.model.Token;

                /**
                 * Encodes the specified Token message. Does not implicitly {@link juicetokens.token.model.Token.verify|verify} messages.
                 * @param message Token message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Token message, length delimited. Does not implicitly {@link juicetokens.token.model.Token.verify|verify} messages.
                 * @param message Token message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Token message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Token
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.Token;

                /**
                 * Decodes a Token message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Token
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.Token;

                /**
                 * Verifies a Token message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Token message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Token
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.Token;

                /**
                 * Creates a plain object from a Token message. Also converts values to other types if specified.
                 * @param message Token
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.Token, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Token to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Token
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** TokenType enum. */
            enum TokenType {
                REGULAR = 0,
                WISSEL = 1,
                AFRONDING = 2
            }

            /** Properties of a TokenMetadata. */
            interface ITokenMetadata {

                /** TokenMetadata location */
                location?: (juicetokens.token.model.ILocation|null);

                /** TokenMetadata reference */
                reference?: (juicetokens.token.model.IReference|null);

                /** TokenMetadata attributes */
                attributes?: ({ [k: string]: string }|null);

                /** TokenMetadata creationContext */
                creationContext?: (juicetokens.token.model.ICreationContext|null);
            }

            /** Represents a TokenMetadata. */
            class TokenMetadata implements ITokenMetadata {

                /**
                 * Constructs a new TokenMetadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.ITokenMetadata);

                /** TokenMetadata location. */
                public location?: (juicetokens.token.model.ILocation|null);

                /** TokenMetadata reference. */
                public reference?: (juicetokens.token.model.IReference|null);

                /** TokenMetadata attributes. */
                public attributes: { [k: string]: string };

                /** TokenMetadata creationContext. */
                public creationContext?: (juicetokens.token.model.ICreationContext|null);

                /**
                 * Creates a new TokenMetadata instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TokenMetadata instance
                 */
                public static create(properties?: juicetokens.token.model.ITokenMetadata): juicetokens.token.model.TokenMetadata;

                /**
                 * Encodes the specified TokenMetadata message. Does not implicitly {@link juicetokens.token.model.TokenMetadata.verify|verify} messages.
                 * @param message TokenMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.ITokenMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TokenMetadata message, length delimited. Does not implicitly {@link juicetokens.token.model.TokenMetadata.verify|verify} messages.
                 * @param message TokenMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.ITokenMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TokenMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TokenMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.TokenMetadata;

                /**
                 * Decodes a TokenMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TokenMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.TokenMetadata;

                /**
                 * Verifies a TokenMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TokenMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TokenMetadata
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.TokenMetadata;

                /**
                 * Creates a plain object from a TokenMetadata message. Also converts values to other types if specified.
                 * @param message TokenMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.TokenMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TokenMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TokenMetadata
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CreationContext. */
            interface ICreationContext {

                /** CreationContext creatorPublicKey */
                creatorPublicKey?: (Uint8Array|null);

                /** CreationContext creationMethod */
                creationMethod?: (string|null);

                /** CreationContext parentTokenIds */
                parentTokenIds?: (string[]|null);

                /** CreationContext purpose */
                purpose?: (string|null);
            }

            /** Represents a CreationContext. */
            class CreationContext implements ICreationContext {

                /**
                 * Constructs a new CreationContext.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.ICreationContext);

                /** CreationContext creatorPublicKey. */
                public creatorPublicKey: Uint8Array;

                /** CreationContext creationMethod. */
                public creationMethod: string;

                /** CreationContext parentTokenIds. */
                public parentTokenIds: string[];

                /** CreationContext purpose. */
                public purpose: string;

                /**
                 * Creates a new CreationContext instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CreationContext instance
                 */
                public static create(properties?: juicetokens.token.model.ICreationContext): juicetokens.token.model.CreationContext;

                /**
                 * Encodes the specified CreationContext message. Does not implicitly {@link juicetokens.token.model.CreationContext.verify|verify} messages.
                 * @param message CreationContext message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.ICreationContext, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CreationContext message, length delimited. Does not implicitly {@link juicetokens.token.model.CreationContext.verify|verify} messages.
                 * @param message CreationContext message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.ICreationContext, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CreationContext message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CreationContext
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.CreationContext;

                /**
                 * Decodes a CreationContext message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CreationContext
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.CreationContext;

                /**
                 * Verifies a CreationContext message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CreationContext message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CreationContext
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.CreationContext;

                /**
                 * Creates a plain object from a CreationContext message. Also converts values to other types if specified.
                 * @param message CreationContext
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.CreationContext, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CreationContext to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CreationContext
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a Location. */
            interface ILocation {

                /** Location latitude */
                latitude?: (number|null);

                /** Location longitude */
                longitude?: (number|null);

                /** Location accuracy */
                accuracy?: (number|null);

                /** Location timestampMs */
                timestampMs?: (number|Long|null);

                /** Location s2CellId */
                s2CellId?: (string|null);
            }

            /** Represents a Location. */
            class Location implements ILocation {

                /**
                 * Constructs a new Location.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.ILocation);

                /** Location latitude. */
                public latitude: number;

                /** Location longitude. */
                public longitude: number;

                /** Location accuracy. */
                public accuracy: number;

                /** Location timestampMs. */
                public timestampMs: (number|Long);

                /** Location s2CellId. */
                public s2CellId: string;

                /**
                 * Creates a new Location instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Location instance
                 */
                public static create(properties?: juicetokens.token.model.ILocation): juicetokens.token.model.Location;

                /**
                 * Encodes the specified Location message. Does not implicitly {@link juicetokens.token.model.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Location message, length delimited. Does not implicitly {@link juicetokens.token.model.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Location message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.Location;

                /**
                 * Decodes a Location message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.Location;

                /**
                 * Verifies a Location message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Location message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Location
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.Location;

                /**
                 * Creates a plain object from a Location message. Also converts values to other types if specified.
                 * @param message Location
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.Location, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Location to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Location
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a Reference. */
            interface IReference {

                /** Reference type */
                type?: (string|null);

                /** Reference id */
                id?: (string|null);

                /** Reference metadata */
                metadata?: ({ [k: string]: string }|null);

                /** Reference verificationStatus */
                verificationStatus?: (juicetokens.token.model.ReferenceVerificationStatus|null);
            }

            /** Represents a Reference. */
            class Reference implements IReference {

                /**
                 * Constructs a new Reference.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IReference);

                /** Reference type. */
                public type: string;

                /** Reference id. */
                public id: string;

                /** Reference metadata. */
                public metadata: { [k: string]: string };

                /** Reference verificationStatus. */
                public verificationStatus: juicetokens.token.model.ReferenceVerificationStatus;

                /**
                 * Creates a new Reference instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Reference instance
                 */
                public static create(properties?: juicetokens.token.model.IReference): juicetokens.token.model.Reference;

                /**
                 * Encodes the specified Reference message. Does not implicitly {@link juicetokens.token.model.Reference.verify|verify} messages.
                 * @param message Reference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IReference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Reference message, length delimited. Does not implicitly {@link juicetokens.token.model.Reference.verify|verify} messages.
                 * @param message Reference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IReference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Reference message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Reference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.Reference;

                /**
                 * Decodes a Reference message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Reference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.Reference;

                /**
                 * Verifies a Reference message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Reference message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Reference
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.Reference;

                /**
                 * Creates a plain object from a Reference message. Also converts values to other types if specified.
                 * @param message Reference
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.Reference, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Reference to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Reference
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** ReferenceVerificationStatus enum. */
            enum ReferenceVerificationStatus {
                UNVERIFIED = 0,
                VERIFIED = 1,
                VERIFICATION_FAILED = 2,
                VERIFICATION_PENDING = 3
            }

            /** Properties of a Telomeer. */
            interface ITelomeer {

                /** Telomeer ownerPublicKey */
                ownerPublicKey?: (Uint8Array|null);

                /** Telomeer ownershipProof */
                ownershipProof?: (Uint8Array|null);

                /** Telomeer previousOwnerPublicKey */
                previousOwnerPublicKey?: (Uint8Array|null);

                /** Telomeer transferTimestampMs */
                transferTimestampMs?: (number|Long|null);

                /** Telomeer ownershipHistory */
                ownershipHistory?: (juicetokens.token.model.IOwnershipRecord[]|null);

                /** Telomeer ownershipHistoryRoot */
                ownershipHistoryRoot?: (Uint8Array|null);

                /** Telomeer transferCount */
                transferCount?: (number|null);

                /** Telomeer chainOfCustodyStatus */
                chainOfCustodyStatus?: (juicetokens.token.model.ChainOfCustodyStatus|null);
            }

            /** Represents a Telomeer. */
            class Telomeer implements ITelomeer {

                /**
                 * Constructs a new Telomeer.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.ITelomeer);

                /** Telomeer ownerPublicKey. */
                public ownerPublicKey: Uint8Array;

                /** Telomeer ownershipProof. */
                public ownershipProof: Uint8Array;

                /** Telomeer previousOwnerPublicKey. */
                public previousOwnerPublicKey: Uint8Array;

                /** Telomeer transferTimestampMs. */
                public transferTimestampMs: (number|Long);

                /** Telomeer ownershipHistory. */
                public ownershipHistory: juicetokens.token.model.IOwnershipRecord[];

                /** Telomeer ownershipHistoryRoot. */
                public ownershipHistoryRoot: Uint8Array;

                /** Telomeer transferCount. */
                public transferCount: number;

                /** Telomeer chainOfCustodyStatus. */
                public chainOfCustodyStatus: juicetokens.token.model.ChainOfCustodyStatus;

                /**
                 * Creates a new Telomeer instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Telomeer instance
                 */
                public static create(properties?: juicetokens.token.model.ITelomeer): juicetokens.token.model.Telomeer;

                /**
                 * Encodes the specified Telomeer message. Does not implicitly {@link juicetokens.token.model.Telomeer.verify|verify} messages.
                 * @param message Telomeer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.ITelomeer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Telomeer message, length delimited. Does not implicitly {@link juicetokens.token.model.Telomeer.verify|verify} messages.
                 * @param message Telomeer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.ITelomeer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Telomeer message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Telomeer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.Telomeer;

                /**
                 * Decodes a Telomeer message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Telomeer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.Telomeer;

                /**
                 * Verifies a Telomeer message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Telomeer message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Telomeer
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.Telomeer;

                /**
                 * Creates a plain object from a Telomeer message. Also converts values to other types if specified.
                 * @param message Telomeer
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.Telomeer, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Telomeer to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Telomeer
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** ChainOfCustodyStatus enum. */
            enum ChainOfCustodyStatus {
                UNVERIFIED = 0,
                VERIFIED = 1,
                VERIFICATION_FAILED = 2,
                VERIFICATION_PENDING = 3
            }

            /** Properties of an OwnershipRecord. */
            interface IOwnershipRecord {

                /** OwnershipRecord ownerPublicKey */
                ownerPublicKey?: (Uint8Array|null);

                /** OwnershipRecord startTimestampMs */
                startTimestampMs?: (number|Long|null);

                /** OwnershipRecord endTimestampMs */
                endTimestampMs?: (number|Long|null);

                /** OwnershipRecord ownershipProof */
                ownershipProof?: (Uint8Array|null);

                /** OwnershipRecord merkleProof */
                merkleProof?: (Uint8Array|null);

                /** OwnershipRecord transferMethod */
                transferMethod?: (string|null);

                /** OwnershipRecord transferContext */
                transferContext?: ({ [k: string]: string }|null);
            }

            /** Represents an OwnershipRecord. */
            class OwnershipRecord implements IOwnershipRecord {

                /**
                 * Constructs a new OwnershipRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IOwnershipRecord);

                /** OwnershipRecord ownerPublicKey. */
                public ownerPublicKey: Uint8Array;

                /** OwnershipRecord startTimestampMs. */
                public startTimestampMs: (number|Long);

                /** OwnershipRecord endTimestampMs. */
                public endTimestampMs: (number|Long);

                /** OwnershipRecord ownershipProof. */
                public ownershipProof: Uint8Array;

                /** OwnershipRecord merkleProof. */
                public merkleProof: Uint8Array;

                /** OwnershipRecord transferMethod. */
                public transferMethod: string;

                /** OwnershipRecord transferContext. */
                public transferContext: { [k: string]: string };

                /**
                 * Creates a new OwnershipRecord instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OwnershipRecord instance
                 */
                public static create(properties?: juicetokens.token.model.IOwnershipRecord): juicetokens.token.model.OwnershipRecord;

                /**
                 * Encodes the specified OwnershipRecord message. Does not implicitly {@link juicetokens.token.model.OwnershipRecord.verify|verify} messages.
                 * @param message OwnershipRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IOwnershipRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OwnershipRecord message, length delimited. Does not implicitly {@link juicetokens.token.model.OwnershipRecord.verify|verify} messages.
                 * @param message OwnershipRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IOwnershipRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OwnershipRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OwnershipRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.OwnershipRecord;

                /**
                 * Decodes an OwnershipRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OwnershipRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.OwnershipRecord;

                /**
                 * Verifies an OwnershipRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OwnershipRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OwnershipRecord
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.OwnershipRecord;

                /**
                 * Creates a plain object from an OwnershipRecord message. Also converts values to other types if specified.
                 * @param message OwnershipRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.OwnershipRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OwnershipRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for OwnershipRecord
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** TokenState enum. */
            enum TokenState {
                ACTIVE = 0,
                FROZEN = 1,
                EXPIRED = 2,
                REVOKED = 3,
                PENDING = 4,
                SPLIT = 5,
                MERGED = 6
            }

            /** Properties of a TokenId. */
            interface ITokenId {

                /** TokenId id */
                id?: (string|null);

                /** TokenId version */
                version?: (number|null);
            }

            /** Represents a TokenId. */
            class TokenId implements ITokenId {

                /**
                 * Constructs a new TokenId.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.ITokenId);

                /** TokenId id. */
                public id: string;

                /** TokenId version. */
                public version: number;

                /**
                 * Creates a new TokenId instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TokenId instance
                 */
                public static create(properties?: juicetokens.token.model.ITokenId): juicetokens.token.model.TokenId;

                /**
                 * Encodes the specified TokenId message. Does not implicitly {@link juicetokens.token.model.TokenId.verify|verify} messages.
                 * @param message TokenId message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.ITokenId, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TokenId message, length delimited. Does not implicitly {@link juicetokens.token.model.TokenId.verify|verify} messages.
                 * @param message TokenId message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.ITokenId, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TokenId message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TokenId
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.TokenId;

                /**
                 * Decodes a TokenId message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TokenId
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.TokenId;

                /**
                 * Verifies a TokenId message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TokenId message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TokenId
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.TokenId;

                /**
                 * Creates a plain object from a TokenId message. Also converts values to other types if specified.
                 * @param message TokenId
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.TokenId, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TokenId to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TokenId
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TokenUpdate. */
            interface ITokenUpdate {

                /** TokenUpdate tokenId */
                tokenId?: (string|null);

                /** TokenUpdate newValue */
                newValue?: (number|Long|null);

                /** TokenUpdate newOwnerPublicKey */
                newOwnerPublicKey?: (Uint8Array|null);

                /** TokenUpdate timestampMs */
                timestampMs?: (number|Long|null);

                /** TokenUpdate updateProof */
                updateProof?: (Uint8Array|null);
            }

            /** Represents a TokenUpdate. */
            class TokenUpdate implements ITokenUpdate {

                /**
                 * Constructs a new TokenUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.ITokenUpdate);

                /** TokenUpdate tokenId. */
                public tokenId: string;

                /** TokenUpdate newValue. */
                public newValue: (number|Long);

                /** TokenUpdate newOwnerPublicKey. */
                public newOwnerPublicKey: Uint8Array;

                /** TokenUpdate timestampMs. */
                public timestampMs: (number|Long);

                /** TokenUpdate updateProof. */
                public updateProof: Uint8Array;

                /**
                 * Creates a new TokenUpdate instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TokenUpdate instance
                 */
                public static create(properties?: juicetokens.token.model.ITokenUpdate): juicetokens.token.model.TokenUpdate;

                /**
                 * Encodes the specified TokenUpdate message. Does not implicitly {@link juicetokens.token.model.TokenUpdate.verify|verify} messages.
                 * @param message TokenUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.ITokenUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TokenUpdate message, length delimited. Does not implicitly {@link juicetokens.token.model.TokenUpdate.verify|verify} messages.
                 * @param message TokenUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.ITokenUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TokenUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TokenUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.TokenUpdate;

                /**
                 * Decodes a TokenUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TokenUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.TokenUpdate;

                /**
                 * Verifies a TokenUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TokenUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TokenUpdate
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.TokenUpdate;

                /**
                 * Creates a plain object from a TokenUpdate message. Also converts values to other types if specified.
                 * @param message TokenUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.TokenUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TokenUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TokenUpdate
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a WisselToken. */
            interface IWisselToken {

                /** WisselToken id */
                id?: (string|null);

                /** WisselToken ownerPublicKey */
                ownerPublicKey?: (Uint8Array|null);

                /** WisselToken createdAtMs */
                createdAtMs?: (number|Long|null);

                /** WisselToken lastUsedMs */
                lastUsedMs?: (number|Long|null);

                /** WisselToken usageCount */
                usageCount?: (number|null);

                /** WisselToken state */
                state?: (juicetokens.token.model.WisselTokenState|null);

                /** WisselToken exchangeHistory */
                exchangeHistory?: (juicetokens.token.model.IExchangeRecord[]|null);

                /** WisselToken afrondingsbuffer */
                afrondingsbuffer?: (number|null);
            }

            /** Represents a WisselToken. */
            class WisselToken implements IWisselToken {

                /**
                 * Constructs a new WisselToken.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IWisselToken);

                /** WisselToken id. */
                public id: string;

                /** WisselToken ownerPublicKey. */
                public ownerPublicKey: Uint8Array;

                /** WisselToken createdAtMs. */
                public createdAtMs: (number|Long);

                /** WisselToken lastUsedMs. */
                public lastUsedMs: (number|Long);

                /** WisselToken usageCount. */
                public usageCount: number;

                /** WisselToken state. */
                public state: juicetokens.token.model.WisselTokenState;

                /** WisselToken exchangeHistory. */
                public exchangeHistory: juicetokens.token.model.IExchangeRecord[];

                /** WisselToken afrondingsbuffer. */
                public afrondingsbuffer: number;

                /**
                 * Creates a new WisselToken instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns WisselToken instance
                 */
                public static create(properties?: juicetokens.token.model.IWisselToken): juicetokens.token.model.WisselToken;

                /**
                 * Encodes the specified WisselToken message. Does not implicitly {@link juicetokens.token.model.WisselToken.verify|verify} messages.
                 * @param message WisselToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IWisselToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified WisselToken message, length delimited. Does not implicitly {@link juicetokens.token.model.WisselToken.verify|verify} messages.
                 * @param message WisselToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IWisselToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a WisselToken message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns WisselToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.WisselToken;

                /**
                 * Decodes a WisselToken message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns WisselToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.WisselToken;

                /**
                 * Verifies a WisselToken message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a WisselToken message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns WisselToken
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.WisselToken;

                /**
                 * Creates a plain object from a WisselToken message. Also converts values to other types if specified.
                 * @param message WisselToken
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.WisselToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this WisselToken to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for WisselToken
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** WisselTokenState enum. */
            enum WisselTokenState {
                WISSEL_ACTIVE = 0,
                WISSEL_LOCKED = 1,
                WISSEL_EXPIRED = 2,
                WISSEL_REVOKED = 3
            }

            /** Properties of an ExchangeRecord. */
            interface IExchangeRecord {

                /** ExchangeRecord timestampMs */
                timestampMs?: (number|Long|null);

                /** ExchangeRecord counterpartyPublicKey */
                counterpartyPublicKey?: (Uint8Array|null);

                /** ExchangeRecord exchangeType */
                exchangeType?: (string|null);

                /** ExchangeRecord amount */
                amount?: (number|Long|null);

                /** ExchangeRecord exchangeProof */
                exchangeProof?: (Uint8Array|null);
            }

            /** Represents an ExchangeRecord. */
            class ExchangeRecord implements IExchangeRecord {

                /**
                 * Constructs a new ExchangeRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IExchangeRecord);

                /** ExchangeRecord timestampMs. */
                public timestampMs: (number|Long);

                /** ExchangeRecord counterpartyPublicKey. */
                public counterpartyPublicKey: Uint8Array;

                /** ExchangeRecord exchangeType. */
                public exchangeType: string;

                /** ExchangeRecord amount. */
                public amount: (number|Long);

                /** ExchangeRecord exchangeProof. */
                public exchangeProof: Uint8Array;

                /**
                 * Creates a new ExchangeRecord instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExchangeRecord instance
                 */
                public static create(properties?: juicetokens.token.model.IExchangeRecord): juicetokens.token.model.ExchangeRecord;

                /**
                 * Encodes the specified ExchangeRecord message. Does not implicitly {@link juicetokens.token.model.ExchangeRecord.verify|verify} messages.
                 * @param message ExchangeRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IExchangeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExchangeRecord message, length delimited. Does not implicitly {@link juicetokens.token.model.ExchangeRecord.verify|verify} messages.
                 * @param message ExchangeRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IExchangeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExchangeRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExchangeRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.ExchangeRecord;

                /**
                 * Decodes an ExchangeRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExchangeRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.ExchangeRecord;

                /**
                 * Verifies an ExchangeRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExchangeRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExchangeRecord
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.ExchangeRecord;

                /**
                 * Creates a plain object from an ExchangeRecord message. Also converts values to other types if specified.
                 * @param message ExchangeRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.ExchangeRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExchangeRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ExchangeRecord
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AfrondingBuffer. */
            interface IAfrondingBuffer {

                /** AfrondingBuffer id */
                id?: (string|null);

                /** AfrondingBuffer ownerPublicKey */
                ownerPublicKey?: (Uint8Array|null);

                /** AfrondingBuffer value */
                value?: (number|Long|null);

                /** AfrondingBuffer createdAtMs */
                createdAtMs?: (number|Long|null);

                /** AfrondingBuffer updatedAtMs */
                updatedAtMs?: (number|Long|null);

                /** AfrondingBuffer state */
                state?: (juicetokens.token.model.AfrondingBufferState|null);

                /** AfrondingBuffer bufferHistory */
                bufferHistory?: (juicetokens.token.model.IBufferRecord[]|null);
            }

            /** Represents an AfrondingBuffer. */
            class AfrondingBuffer implements IAfrondingBuffer {

                /**
                 * Constructs a new AfrondingBuffer.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IAfrondingBuffer);

                /** AfrondingBuffer id. */
                public id: string;

                /** AfrondingBuffer ownerPublicKey. */
                public ownerPublicKey: Uint8Array;

                /** AfrondingBuffer value. */
                public value: (number|Long);

                /** AfrondingBuffer createdAtMs. */
                public createdAtMs: (number|Long);

                /** AfrondingBuffer updatedAtMs. */
                public updatedAtMs: (number|Long);

                /** AfrondingBuffer state. */
                public state: juicetokens.token.model.AfrondingBufferState;

                /** AfrondingBuffer bufferHistory. */
                public bufferHistory: juicetokens.token.model.IBufferRecord[];

                /**
                 * Creates a new AfrondingBuffer instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AfrondingBuffer instance
                 */
                public static create(properties?: juicetokens.token.model.IAfrondingBuffer): juicetokens.token.model.AfrondingBuffer;

                /**
                 * Encodes the specified AfrondingBuffer message. Does not implicitly {@link juicetokens.token.model.AfrondingBuffer.verify|verify} messages.
                 * @param message AfrondingBuffer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IAfrondingBuffer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AfrondingBuffer message, length delimited. Does not implicitly {@link juicetokens.token.model.AfrondingBuffer.verify|verify} messages.
                 * @param message AfrondingBuffer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IAfrondingBuffer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AfrondingBuffer message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AfrondingBuffer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.AfrondingBuffer;

                /**
                 * Decodes an AfrondingBuffer message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AfrondingBuffer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.AfrondingBuffer;

                /**
                 * Verifies an AfrondingBuffer message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AfrondingBuffer message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AfrondingBuffer
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.AfrondingBuffer;

                /**
                 * Creates a plain object from an AfrondingBuffer message. Also converts values to other types if specified.
                 * @param message AfrondingBuffer
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.AfrondingBuffer, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AfrondingBuffer to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AfrondingBuffer
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** AfrondingBufferState enum. */
            enum AfrondingBufferState {
                BUFFER_ACTIVE = 0,
                BUFFER_FROZEN = 1,
                BUFFER_EXPIRED = 2,
                BUFFER_REVOKED = 3
            }

            /** Properties of a BufferRecord. */
            interface IBufferRecord {

                /** BufferRecord timestampMs */
                timestampMs?: (number|Long|null);

                /** BufferRecord operationType */
                operationType?: (string|null);

                /** BufferRecord amount */
                amount?: (number|Long|null);

                /** BufferRecord previousValue */
                previousValue?: (number|Long|null);

                /** BufferRecord newValue */
                newValue?: (number|Long|null);

                /** BufferRecord operationProof */
                operationProof?: (Uint8Array|null);
            }

            /** Represents a BufferRecord. */
            class BufferRecord implements IBufferRecord {

                /**
                 * Constructs a new BufferRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IBufferRecord);

                /** BufferRecord timestampMs. */
                public timestampMs: (number|Long);

                /** BufferRecord operationType. */
                public operationType: string;

                /** BufferRecord amount. */
                public amount: (number|Long);

                /** BufferRecord previousValue. */
                public previousValue: (number|Long);

                /** BufferRecord newValue. */
                public newValue: (number|Long);

                /** BufferRecord operationProof. */
                public operationProof: Uint8Array;

                /**
                 * Creates a new BufferRecord instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns BufferRecord instance
                 */
                public static create(properties?: juicetokens.token.model.IBufferRecord): juicetokens.token.model.BufferRecord;

                /**
                 * Encodes the specified BufferRecord message. Does not implicitly {@link juicetokens.token.model.BufferRecord.verify|verify} messages.
                 * @param message BufferRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IBufferRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BufferRecord message, length delimited. Does not implicitly {@link juicetokens.token.model.BufferRecord.verify|verify} messages.
                 * @param message BufferRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IBufferRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BufferRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BufferRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.BufferRecord;

                /**
                 * Decodes a BufferRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BufferRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.BufferRecord;

                /**
                 * Verifies a BufferRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BufferRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BufferRecord
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.BufferRecord;

                /**
                 * Creates a plain object from a BufferRecord message. Also converts values to other types if specified.
                 * @param message BufferRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.BufferRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BufferRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for BufferRecord
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Represents a TokenService */
            class TokenService extends $protobuf.rpc.Service {

                /**
                 * Constructs a new TokenService service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Creates new TokenService service using the specified rpc implementation.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 * @returns RPC service. Useful where requests and/or responses are streamed.
                 */
                public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): TokenService;

                /**
                 * Calls GetToken.
                 * @param request GetTokenRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and GetTokenResponse
                 */
                public getToken(request: juicetokens.token.model.IGetTokenRequest, callback: juicetokens.token.model.TokenService.GetTokenCallback): void;

                /**
                 * Calls GetToken.
                 * @param request GetTokenRequest message or plain object
                 * @returns Promise
                 */
                public getToken(request: juicetokens.token.model.IGetTokenRequest): Promise<juicetokens.token.model.GetTokenResponse>;

                /**
                 * Calls ListTokens.
                 * @param request ListTokensRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and ListTokensResponse
                 */
                public listTokens(request: juicetokens.token.model.IListTokensRequest, callback: juicetokens.token.model.TokenService.ListTokensCallback): void;

                /**
                 * Calls ListTokens.
                 * @param request ListTokensRequest message or plain object
                 * @returns Promise
                 */
                public listTokens(request: juicetokens.token.model.IListTokensRequest): Promise<juicetokens.token.model.ListTokensResponse>;

                /**
                 * Calls CreateToken.
                 * @param request CreateTokenRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and CreateTokenResponse
                 */
                public createToken(request: juicetokens.token.model.ICreateTokenRequest, callback: juicetokens.token.model.TokenService.CreateTokenCallback): void;

                /**
                 * Calls CreateToken.
                 * @param request CreateTokenRequest message or plain object
                 * @returns Promise
                 */
                public createToken(request: juicetokens.token.model.ICreateTokenRequest): Promise<juicetokens.token.model.CreateTokenResponse>;

                /**
                 * Calls UpdateToken.
                 * @param request UpdateTokenRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and UpdateTokenResponse
                 */
                public updateToken(request: juicetokens.token.model.IUpdateTokenRequest, callback: juicetokens.token.model.TokenService.UpdateTokenCallback): void;

                /**
                 * Calls UpdateToken.
                 * @param request UpdateTokenRequest message or plain object
                 * @returns Promise
                 */
                public updateToken(request: juicetokens.token.model.IUpdateTokenRequest): Promise<juicetokens.token.model.UpdateTokenResponse>;

                /**
                 * Calls StreamTokenUpdates.
                 * @param request StreamTokenUpdatesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and TokenUpdate
                 */
                public streamTokenUpdates(request: juicetokens.token.model.IStreamTokenUpdatesRequest, callback: juicetokens.token.model.TokenService.StreamTokenUpdatesCallback): void;

                /**
                 * Calls StreamTokenUpdates.
                 * @param request StreamTokenUpdatesRequest message or plain object
                 * @returns Promise
                 */
                public streamTokenUpdates(request: juicetokens.token.model.IStreamTokenUpdatesRequest): Promise<juicetokens.token.model.TokenUpdate>;
            }

            namespace TokenService {

                /**
                 * Callback as used by {@link juicetokens.token.model.TokenService#getToken}.
                 * @param error Error, if any
                 * @param [response] GetTokenResponse
                 */
                type GetTokenCallback = (error: (Error|null), response?: juicetokens.token.model.GetTokenResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.model.TokenService#listTokens}.
                 * @param error Error, if any
                 * @param [response] ListTokensResponse
                 */
                type ListTokensCallback = (error: (Error|null), response?: juicetokens.token.model.ListTokensResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.model.TokenService#createToken}.
                 * @param error Error, if any
                 * @param [response] CreateTokenResponse
                 */
                type CreateTokenCallback = (error: (Error|null), response?: juicetokens.token.model.CreateTokenResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.model.TokenService#updateToken}.
                 * @param error Error, if any
                 * @param [response] UpdateTokenResponse
                 */
                type UpdateTokenCallback = (error: (Error|null), response?: juicetokens.token.model.UpdateTokenResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.model.TokenService#streamTokenUpdates}.
                 * @param error Error, if any
                 * @param [response] TokenUpdate
                 */
                type StreamTokenUpdatesCallback = (error: (Error|null), response?: juicetokens.token.model.TokenUpdate) => void;
            }

            /** Properties of a GetTokenRequest. */
            interface IGetTokenRequest {

                /** GetTokenRequest tokenId */
                tokenId?: (string|null);
            }

            /** Represents a GetTokenRequest. */
            class GetTokenRequest implements IGetTokenRequest {

                /**
                 * Constructs a new GetTokenRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IGetTokenRequest);

                /** GetTokenRequest tokenId. */
                public tokenId: string;

                /**
                 * Creates a new GetTokenRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetTokenRequest instance
                 */
                public static create(properties?: juicetokens.token.model.IGetTokenRequest): juicetokens.token.model.GetTokenRequest;

                /**
                 * Encodes the specified GetTokenRequest message. Does not implicitly {@link juicetokens.token.model.GetTokenRequest.verify|verify} messages.
                 * @param message GetTokenRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IGetTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetTokenRequest message, length delimited. Does not implicitly {@link juicetokens.token.model.GetTokenRequest.verify|verify} messages.
                 * @param message GetTokenRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IGetTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTokenRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetTokenRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.GetTokenRequest;

                /**
                 * Decodes a GetTokenRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetTokenRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.GetTokenRequest;

                /**
                 * Verifies a GetTokenRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetTokenRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetTokenRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.GetTokenRequest;

                /**
                 * Creates a plain object from a GetTokenRequest message. Also converts values to other types if specified.
                 * @param message GetTokenRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.GetTokenRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetTokenRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetTokenRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetTokenResponse. */
            interface IGetTokenResponse {

                /** GetTokenResponse token */
                token?: (juicetokens.token.model.IToken|null);
            }

            /** Represents a GetTokenResponse. */
            class GetTokenResponse implements IGetTokenResponse {

                /**
                 * Constructs a new GetTokenResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IGetTokenResponse);

                /** GetTokenResponse token. */
                public token?: (juicetokens.token.model.IToken|null);

                /**
                 * Creates a new GetTokenResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetTokenResponse instance
                 */
                public static create(properties?: juicetokens.token.model.IGetTokenResponse): juicetokens.token.model.GetTokenResponse;

                /**
                 * Encodes the specified GetTokenResponse message. Does not implicitly {@link juicetokens.token.model.GetTokenResponse.verify|verify} messages.
                 * @param message GetTokenResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IGetTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetTokenResponse message, length delimited. Does not implicitly {@link juicetokens.token.model.GetTokenResponse.verify|verify} messages.
                 * @param message GetTokenResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IGetTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTokenResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetTokenResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.GetTokenResponse;

                /**
                 * Decodes a GetTokenResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetTokenResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.GetTokenResponse;

                /**
                 * Verifies a GetTokenResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetTokenResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetTokenResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.GetTokenResponse;

                /**
                 * Creates a plain object from a GetTokenResponse message. Also converts values to other types if specified.
                 * @param message GetTokenResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.GetTokenResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetTokenResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetTokenResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ListTokensRequest. */
            interface IListTokensRequest {

                /** ListTokensRequest denomination */
                denomination?: (string|null);

                /** ListTokensRequest minValue */
                minValue?: (number|Long|null);

                /** ListTokensRequest maxValue */
                maxValue?: (number|Long|null);

                /** ListTokensRequest state */
                state?: (juicetokens.token.model.TokenState|null);

                /** ListTokensRequest limit */
                limit?: (number|null);

                /** ListTokensRequest pageToken */
                pageToken?: (string|null);
            }

            /** Represents a ListTokensRequest. */
            class ListTokensRequest implements IListTokensRequest {

                /**
                 * Constructs a new ListTokensRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IListTokensRequest);

                /** ListTokensRequest denomination. */
                public denomination: string;

                /** ListTokensRequest minValue. */
                public minValue: (number|Long);

                /** ListTokensRequest maxValue. */
                public maxValue: (number|Long);

                /** ListTokensRequest state. */
                public state: juicetokens.token.model.TokenState;

                /** ListTokensRequest limit. */
                public limit: number;

                /** ListTokensRequest pageToken. */
                public pageToken: string;

                /**
                 * Creates a new ListTokensRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ListTokensRequest instance
                 */
                public static create(properties?: juicetokens.token.model.IListTokensRequest): juicetokens.token.model.ListTokensRequest;

                /**
                 * Encodes the specified ListTokensRequest message. Does not implicitly {@link juicetokens.token.model.ListTokensRequest.verify|verify} messages.
                 * @param message ListTokensRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IListTokensRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ListTokensRequest message, length delimited. Does not implicitly {@link juicetokens.token.model.ListTokensRequest.verify|verify} messages.
                 * @param message ListTokensRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IListTokensRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ListTokensRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ListTokensRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.ListTokensRequest;

                /**
                 * Decodes a ListTokensRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ListTokensRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.ListTokensRequest;

                /**
                 * Verifies a ListTokensRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ListTokensRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ListTokensRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.ListTokensRequest;

                /**
                 * Creates a plain object from a ListTokensRequest message. Also converts values to other types if specified.
                 * @param message ListTokensRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.ListTokensRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ListTokensRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ListTokensRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ListTokensResponse. */
            interface IListTokensResponse {

                /** ListTokensResponse tokens */
                tokens?: (juicetokens.token.model.IToken[]|null);

                /** ListTokensResponse nextPageToken */
                nextPageToken?: (string|null);
            }

            /** Represents a ListTokensResponse. */
            class ListTokensResponse implements IListTokensResponse {

                /**
                 * Constructs a new ListTokensResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IListTokensResponse);

                /** ListTokensResponse tokens. */
                public tokens: juicetokens.token.model.IToken[];

                /** ListTokensResponse nextPageToken. */
                public nextPageToken: string;

                /**
                 * Creates a new ListTokensResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ListTokensResponse instance
                 */
                public static create(properties?: juicetokens.token.model.IListTokensResponse): juicetokens.token.model.ListTokensResponse;

                /**
                 * Encodes the specified ListTokensResponse message. Does not implicitly {@link juicetokens.token.model.ListTokensResponse.verify|verify} messages.
                 * @param message ListTokensResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IListTokensResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ListTokensResponse message, length delimited. Does not implicitly {@link juicetokens.token.model.ListTokensResponse.verify|verify} messages.
                 * @param message ListTokensResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IListTokensResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ListTokensResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ListTokensResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.ListTokensResponse;

                /**
                 * Decodes a ListTokensResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ListTokensResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.ListTokensResponse;

                /**
                 * Verifies a ListTokensResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ListTokensResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ListTokensResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.ListTokensResponse;

                /**
                 * Creates a plain object from a ListTokensResponse message. Also converts values to other types if specified.
                 * @param message ListTokensResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.ListTokensResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ListTokensResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ListTokensResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CreateTokenRequest. */
            interface ICreateTokenRequest {

                /** CreateTokenRequest denomination */
                denomination?: (string|null);

                /** CreateTokenRequest value */
                value?: (number|Long|null);

                /** CreateTokenRequest metadata */
                metadata?: (juicetokens.token.model.ITokenMetadata|null);

                /** CreateTokenRequest ownerPublicKey */
                ownerPublicKey?: (Uint8Array|null);
            }

            /** Represents a CreateTokenRequest. */
            class CreateTokenRequest implements ICreateTokenRequest {

                /**
                 * Constructs a new CreateTokenRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.ICreateTokenRequest);

                /** CreateTokenRequest denomination. */
                public denomination: string;

                /** CreateTokenRequest value. */
                public value: (number|Long);

                /** CreateTokenRequest metadata. */
                public metadata?: (juicetokens.token.model.ITokenMetadata|null);

                /** CreateTokenRequest ownerPublicKey. */
                public ownerPublicKey: Uint8Array;

                /**
                 * Creates a new CreateTokenRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CreateTokenRequest instance
                 */
                public static create(properties?: juicetokens.token.model.ICreateTokenRequest): juicetokens.token.model.CreateTokenRequest;

                /**
                 * Encodes the specified CreateTokenRequest message. Does not implicitly {@link juicetokens.token.model.CreateTokenRequest.verify|verify} messages.
                 * @param message CreateTokenRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.ICreateTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CreateTokenRequest message, length delimited. Does not implicitly {@link juicetokens.token.model.CreateTokenRequest.verify|verify} messages.
                 * @param message CreateTokenRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.ICreateTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CreateTokenRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CreateTokenRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.CreateTokenRequest;

                /**
                 * Decodes a CreateTokenRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CreateTokenRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.CreateTokenRequest;

                /**
                 * Verifies a CreateTokenRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CreateTokenRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CreateTokenRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.CreateTokenRequest;

                /**
                 * Creates a plain object from a CreateTokenRequest message. Also converts values to other types if specified.
                 * @param message CreateTokenRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.CreateTokenRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CreateTokenRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CreateTokenRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CreateTokenResponse. */
            interface ICreateTokenResponse {

                /** CreateTokenResponse token */
                token?: (juicetokens.token.model.IToken|null);
            }

            /** Represents a CreateTokenResponse. */
            class CreateTokenResponse implements ICreateTokenResponse {

                /**
                 * Constructs a new CreateTokenResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.ICreateTokenResponse);

                /** CreateTokenResponse token. */
                public token?: (juicetokens.token.model.IToken|null);

                /**
                 * Creates a new CreateTokenResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CreateTokenResponse instance
                 */
                public static create(properties?: juicetokens.token.model.ICreateTokenResponse): juicetokens.token.model.CreateTokenResponse;

                /**
                 * Encodes the specified CreateTokenResponse message. Does not implicitly {@link juicetokens.token.model.CreateTokenResponse.verify|verify} messages.
                 * @param message CreateTokenResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.ICreateTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CreateTokenResponse message, length delimited. Does not implicitly {@link juicetokens.token.model.CreateTokenResponse.verify|verify} messages.
                 * @param message CreateTokenResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.ICreateTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CreateTokenResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CreateTokenResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.CreateTokenResponse;

                /**
                 * Decodes a CreateTokenResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CreateTokenResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.CreateTokenResponse;

                /**
                 * Verifies a CreateTokenResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CreateTokenResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CreateTokenResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.CreateTokenResponse;

                /**
                 * Creates a plain object from a CreateTokenResponse message. Also converts values to other types if specified.
                 * @param message CreateTokenResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.CreateTokenResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CreateTokenResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CreateTokenResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an UpdateTokenRequest. */
            interface IUpdateTokenRequest {

                /** UpdateTokenRequest tokenId */
                tokenId?: (string|null);

                /** UpdateTokenRequest newValue */
                newValue?: (number|Long|null);

                /** UpdateTokenRequest newOwnerPublicKey */
                newOwnerPublicKey?: (Uint8Array|null);

                /** UpdateTokenRequest newState */
                newState?: (juicetokens.token.model.TokenState|null);
            }

            /** Represents an UpdateTokenRequest. */
            class UpdateTokenRequest implements IUpdateTokenRequest {

                /**
                 * Constructs a new UpdateTokenRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IUpdateTokenRequest);

                /** UpdateTokenRequest tokenId. */
                public tokenId: string;

                /** UpdateTokenRequest newValue. */
                public newValue: (number|Long);

                /** UpdateTokenRequest newOwnerPublicKey. */
                public newOwnerPublicKey: Uint8Array;

                /** UpdateTokenRequest newState. */
                public newState: juicetokens.token.model.TokenState;

                /**
                 * Creates a new UpdateTokenRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UpdateTokenRequest instance
                 */
                public static create(properties?: juicetokens.token.model.IUpdateTokenRequest): juicetokens.token.model.UpdateTokenRequest;

                /**
                 * Encodes the specified UpdateTokenRequest message. Does not implicitly {@link juicetokens.token.model.UpdateTokenRequest.verify|verify} messages.
                 * @param message UpdateTokenRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IUpdateTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateTokenRequest message, length delimited. Does not implicitly {@link juicetokens.token.model.UpdateTokenRequest.verify|verify} messages.
                 * @param message UpdateTokenRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IUpdateTokenRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateTokenRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateTokenRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.UpdateTokenRequest;

                /**
                 * Decodes an UpdateTokenRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateTokenRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.UpdateTokenRequest;

                /**
                 * Verifies an UpdateTokenRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateTokenRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateTokenRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.UpdateTokenRequest;

                /**
                 * Creates a plain object from an UpdateTokenRequest message. Also converts values to other types if specified.
                 * @param message UpdateTokenRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.UpdateTokenRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateTokenRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for UpdateTokenRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an UpdateTokenResponse. */
            interface IUpdateTokenResponse {

                /** UpdateTokenResponse token */
                token?: (juicetokens.token.model.IToken|null);
            }

            /** Represents an UpdateTokenResponse. */
            class UpdateTokenResponse implements IUpdateTokenResponse {

                /**
                 * Constructs a new UpdateTokenResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IUpdateTokenResponse);

                /** UpdateTokenResponse token. */
                public token?: (juicetokens.token.model.IToken|null);

                /**
                 * Creates a new UpdateTokenResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UpdateTokenResponse instance
                 */
                public static create(properties?: juicetokens.token.model.IUpdateTokenResponse): juicetokens.token.model.UpdateTokenResponse;

                /**
                 * Encodes the specified UpdateTokenResponse message. Does not implicitly {@link juicetokens.token.model.UpdateTokenResponse.verify|verify} messages.
                 * @param message UpdateTokenResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IUpdateTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateTokenResponse message, length delimited. Does not implicitly {@link juicetokens.token.model.UpdateTokenResponse.verify|verify} messages.
                 * @param message UpdateTokenResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IUpdateTokenResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateTokenResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateTokenResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.UpdateTokenResponse;

                /**
                 * Decodes an UpdateTokenResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateTokenResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.UpdateTokenResponse;

                /**
                 * Verifies an UpdateTokenResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateTokenResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateTokenResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.UpdateTokenResponse;

                /**
                 * Creates a plain object from an UpdateTokenResponse message. Also converts values to other types if specified.
                 * @param message UpdateTokenResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.UpdateTokenResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateTokenResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for UpdateTokenResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StreamTokenUpdatesRequest. */
            interface IStreamTokenUpdatesRequest {

                /** StreamTokenUpdatesRequest tokenId */
                tokenId?: (string|null);
            }

            /** Represents a StreamTokenUpdatesRequest. */
            class StreamTokenUpdatesRequest implements IStreamTokenUpdatesRequest {

                /**
                 * Constructs a new StreamTokenUpdatesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.model.IStreamTokenUpdatesRequest);

                /** StreamTokenUpdatesRequest tokenId. */
                public tokenId: string;

                /**
                 * Creates a new StreamTokenUpdatesRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StreamTokenUpdatesRequest instance
                 */
                public static create(properties?: juicetokens.token.model.IStreamTokenUpdatesRequest): juicetokens.token.model.StreamTokenUpdatesRequest;

                /**
                 * Encodes the specified StreamTokenUpdatesRequest message. Does not implicitly {@link juicetokens.token.model.StreamTokenUpdatesRequest.verify|verify} messages.
                 * @param message StreamTokenUpdatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.model.IStreamTokenUpdatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StreamTokenUpdatesRequest message, length delimited. Does not implicitly {@link juicetokens.token.model.StreamTokenUpdatesRequest.verify|verify} messages.
                 * @param message StreamTokenUpdatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.model.IStreamTokenUpdatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StreamTokenUpdatesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StreamTokenUpdatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.model.StreamTokenUpdatesRequest;

                /**
                 * Decodes a StreamTokenUpdatesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StreamTokenUpdatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.model.StreamTokenUpdatesRequest;

                /**
                 * Verifies a StreamTokenUpdatesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StreamTokenUpdatesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StreamTokenUpdatesRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.model.StreamTokenUpdatesRequest;

                /**
                 * Creates a plain object from a StreamTokenUpdatesRequest message. Also converts values to other types if specified.
                 * @param message StreamTokenUpdatesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.model.StreamTokenUpdatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StreamTokenUpdatesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StreamTokenUpdatesRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Namespace telomeer. */
        namespace telomeer {

            /** Properties of an OwnershipProof. */
            interface IOwnershipProof {

                /** OwnershipProof proofType */
                proofType?: (string|null);

                /** OwnershipProof proofData */
                proofData?: (Uint8Array|null);

                /** OwnershipProof timestampMs */
                timestampMs?: (number|Long|null);

                /** OwnershipProof metadata */
                metadata?: ({ [k: string]: string }|null);
            }

            /** Represents an OwnershipProof. */
            class OwnershipProof implements IOwnershipProof {

                /**
                 * Constructs a new OwnershipProof.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.telomeer.IOwnershipProof);

                /** OwnershipProof proofType. */
                public proofType: string;

                /** OwnershipProof proofData. */
                public proofData: Uint8Array;

                /** OwnershipProof timestampMs. */
                public timestampMs: (number|Long);

                /** OwnershipProof metadata. */
                public metadata: { [k: string]: string };

                /**
                 * Creates a new OwnershipProof instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OwnershipProof instance
                 */
                public static create(properties?: juicetokens.token.telomeer.IOwnershipProof): juicetokens.token.telomeer.OwnershipProof;

                /**
                 * Encodes the specified OwnershipProof message. Does not implicitly {@link juicetokens.token.telomeer.OwnershipProof.verify|verify} messages.
                 * @param message OwnershipProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.telomeer.IOwnershipProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OwnershipProof message, length delimited. Does not implicitly {@link juicetokens.token.telomeer.OwnershipProof.verify|verify} messages.
                 * @param message OwnershipProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.telomeer.IOwnershipProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OwnershipProof message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OwnershipProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.telomeer.OwnershipProof;

                /**
                 * Decodes an OwnershipProof message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OwnershipProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.telomeer.OwnershipProof;

                /**
                 * Verifies an OwnershipProof message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OwnershipProof message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OwnershipProof
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.telomeer.OwnershipProof;

                /**
                 * Creates a plain object from an OwnershipProof message. Also converts values to other types if specified.
                 * @param message OwnershipProof
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.telomeer.OwnershipProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OwnershipProof to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for OwnershipProof
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an OwnershipTransfer. */
            interface IOwnershipTransfer {

                /** OwnershipTransfer tokenId */
                tokenId?: (string|null);

                /** OwnershipTransfer previousOwnerPublicKey */
                previousOwnerPublicKey?: (Uint8Array|null);

                /** OwnershipTransfer newOwnerPublicKey */
                newOwnerPublicKey?: (Uint8Array|null);

                /** OwnershipTransfer timestampMs */
                timestampMs?: (number|Long|null);

                /** OwnershipTransfer proof */
                proof?: (juicetokens.token.telomeer.IOwnershipProof|null);

                /** OwnershipTransfer metadata */
                metadata?: ({ [k: string]: string }|null);
            }

            /** Represents an OwnershipTransfer. */
            class OwnershipTransfer implements IOwnershipTransfer {

                /**
                 * Constructs a new OwnershipTransfer.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.telomeer.IOwnershipTransfer);

                /** OwnershipTransfer tokenId. */
                public tokenId: string;

                /** OwnershipTransfer previousOwnerPublicKey. */
                public previousOwnerPublicKey: Uint8Array;

                /** OwnershipTransfer newOwnerPublicKey. */
                public newOwnerPublicKey: Uint8Array;

                /** OwnershipTransfer timestampMs. */
                public timestampMs: (number|Long);

                /** OwnershipTransfer proof. */
                public proof?: (juicetokens.token.telomeer.IOwnershipProof|null);

                /** OwnershipTransfer metadata. */
                public metadata: { [k: string]: string };

                /**
                 * Creates a new OwnershipTransfer instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OwnershipTransfer instance
                 */
                public static create(properties?: juicetokens.token.telomeer.IOwnershipTransfer): juicetokens.token.telomeer.OwnershipTransfer;

                /**
                 * Encodes the specified OwnershipTransfer message. Does not implicitly {@link juicetokens.token.telomeer.OwnershipTransfer.verify|verify} messages.
                 * @param message OwnershipTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.telomeer.IOwnershipTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OwnershipTransfer message, length delimited. Does not implicitly {@link juicetokens.token.telomeer.OwnershipTransfer.verify|verify} messages.
                 * @param message OwnershipTransfer message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.telomeer.IOwnershipTransfer, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OwnershipTransfer message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OwnershipTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.telomeer.OwnershipTransfer;

                /**
                 * Decodes an OwnershipTransfer message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OwnershipTransfer
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.telomeer.OwnershipTransfer;

                /**
                 * Verifies an OwnershipTransfer message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OwnershipTransfer message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OwnershipTransfer
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.telomeer.OwnershipTransfer;

                /**
                 * Creates a plain object from an OwnershipTransfer message. Also converts values to other types if specified.
                 * @param message OwnershipTransfer
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.telomeer.OwnershipTransfer, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OwnershipTransfer to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for OwnershipTransfer
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an OwnershipVerificationRequest. */
            interface IOwnershipVerificationRequest {

                /** OwnershipVerificationRequest tokenId */
                tokenId?: (string|null);

                /** OwnershipVerificationRequest ownerPublicKey */
                ownerPublicKey?: (Uint8Array|null);

                /** OwnershipVerificationRequest proof */
                proof?: (juicetokens.token.telomeer.IOwnershipProof|null);
            }

            /** Represents an OwnershipVerificationRequest. */
            class OwnershipVerificationRequest implements IOwnershipVerificationRequest {

                /**
                 * Constructs a new OwnershipVerificationRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.telomeer.IOwnershipVerificationRequest);

                /** OwnershipVerificationRequest tokenId. */
                public tokenId: string;

                /** OwnershipVerificationRequest ownerPublicKey. */
                public ownerPublicKey: Uint8Array;

                /** OwnershipVerificationRequest proof. */
                public proof?: (juicetokens.token.telomeer.IOwnershipProof|null);

                /**
                 * Creates a new OwnershipVerificationRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OwnershipVerificationRequest instance
                 */
                public static create(properties?: juicetokens.token.telomeer.IOwnershipVerificationRequest): juicetokens.token.telomeer.OwnershipVerificationRequest;

                /**
                 * Encodes the specified OwnershipVerificationRequest message. Does not implicitly {@link juicetokens.token.telomeer.OwnershipVerificationRequest.verify|verify} messages.
                 * @param message OwnershipVerificationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.telomeer.IOwnershipVerificationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OwnershipVerificationRequest message, length delimited. Does not implicitly {@link juicetokens.token.telomeer.OwnershipVerificationRequest.verify|verify} messages.
                 * @param message OwnershipVerificationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.telomeer.IOwnershipVerificationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OwnershipVerificationRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OwnershipVerificationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.telomeer.OwnershipVerificationRequest;

                /**
                 * Decodes an OwnershipVerificationRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OwnershipVerificationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.telomeer.OwnershipVerificationRequest;

                /**
                 * Verifies an OwnershipVerificationRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OwnershipVerificationRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OwnershipVerificationRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.telomeer.OwnershipVerificationRequest;

                /**
                 * Creates a plain object from an OwnershipVerificationRequest message. Also converts values to other types if specified.
                 * @param message OwnershipVerificationRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.telomeer.OwnershipVerificationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OwnershipVerificationRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for OwnershipVerificationRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an OwnershipVerificationResponse. */
            interface IOwnershipVerificationResponse {

                /** OwnershipVerificationResponse isVerified */
                isVerified?: (boolean|null);

                /** OwnershipVerificationResponse timestampMs */
                timestampMs?: (number|Long|null);

                /** OwnershipVerificationResponse details */
                details?: ({ [k: string]: string }|null);
            }

            /** Represents an OwnershipVerificationResponse. */
            class OwnershipVerificationResponse implements IOwnershipVerificationResponse {

                /**
                 * Constructs a new OwnershipVerificationResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.telomeer.IOwnershipVerificationResponse);

                /** OwnershipVerificationResponse isVerified. */
                public isVerified: boolean;

                /** OwnershipVerificationResponse timestampMs. */
                public timestampMs: (number|Long);

                /** OwnershipVerificationResponse details. */
                public details: { [k: string]: string };

                /**
                 * Creates a new OwnershipVerificationResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OwnershipVerificationResponse instance
                 */
                public static create(properties?: juicetokens.token.telomeer.IOwnershipVerificationResponse): juicetokens.token.telomeer.OwnershipVerificationResponse;

                /**
                 * Encodes the specified OwnershipVerificationResponse message. Does not implicitly {@link juicetokens.token.telomeer.OwnershipVerificationResponse.verify|verify} messages.
                 * @param message OwnershipVerificationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.telomeer.IOwnershipVerificationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OwnershipVerificationResponse message, length delimited. Does not implicitly {@link juicetokens.token.telomeer.OwnershipVerificationResponse.verify|verify} messages.
                 * @param message OwnershipVerificationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.telomeer.IOwnershipVerificationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OwnershipVerificationResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OwnershipVerificationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.telomeer.OwnershipVerificationResponse;

                /**
                 * Decodes an OwnershipVerificationResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OwnershipVerificationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.telomeer.OwnershipVerificationResponse;

                /**
                 * Verifies an OwnershipVerificationResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OwnershipVerificationResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OwnershipVerificationResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.telomeer.OwnershipVerificationResponse;

                /**
                 * Creates a plain object from an OwnershipVerificationResponse message. Also converts values to other types if specified.
                 * @param message OwnershipVerificationResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.telomeer.OwnershipVerificationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OwnershipVerificationResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for OwnershipVerificationResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an OwnershipHistory. */
            interface IOwnershipHistory {

                /** OwnershipHistory tokenId */
                tokenId?: (string|null);

                /** OwnershipHistory records */
                records?: (juicetokens.token.telomeer.IOwnershipRecord[]|null);

                /** OwnershipHistory metadata */
                metadata?: ({ [k: string]: string }|null);
            }

            /** Represents an OwnershipHistory. */
            class OwnershipHistory implements IOwnershipHistory {

                /**
                 * Constructs a new OwnershipHistory.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.telomeer.IOwnershipHistory);

                /** OwnershipHistory tokenId. */
                public tokenId: string;

                /** OwnershipHistory records. */
                public records: juicetokens.token.telomeer.IOwnershipRecord[];

                /** OwnershipHistory metadata. */
                public metadata: { [k: string]: string };

                /**
                 * Creates a new OwnershipHistory instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OwnershipHistory instance
                 */
                public static create(properties?: juicetokens.token.telomeer.IOwnershipHistory): juicetokens.token.telomeer.OwnershipHistory;

                /**
                 * Encodes the specified OwnershipHistory message. Does not implicitly {@link juicetokens.token.telomeer.OwnershipHistory.verify|verify} messages.
                 * @param message OwnershipHistory message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.telomeer.IOwnershipHistory, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OwnershipHistory message, length delimited. Does not implicitly {@link juicetokens.token.telomeer.OwnershipHistory.verify|verify} messages.
                 * @param message OwnershipHistory message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.telomeer.IOwnershipHistory, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OwnershipHistory message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OwnershipHistory
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.telomeer.OwnershipHistory;

                /**
                 * Decodes an OwnershipHistory message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OwnershipHistory
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.telomeer.OwnershipHistory;

                /**
                 * Verifies an OwnershipHistory message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OwnershipHistory message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OwnershipHistory
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.telomeer.OwnershipHistory;

                /**
                 * Creates a plain object from an OwnershipHistory message. Also converts values to other types if specified.
                 * @param message OwnershipHistory
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.telomeer.OwnershipHistory, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OwnershipHistory to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for OwnershipHistory
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an OwnershipRecord. */
            interface IOwnershipRecord {

                /** OwnershipRecord ownerPublicKey */
                ownerPublicKey?: (Uint8Array|null);

                /** OwnershipRecord startTimestampMs */
                startTimestampMs?: (number|Long|null);

                /** OwnershipRecord endTimestampMs */
                endTimestampMs?: (number|Long|null);

                /** OwnershipRecord proof */
                proof?: (juicetokens.token.telomeer.IOwnershipProof|null);

                /** OwnershipRecord metadata */
                metadata?: ({ [k: string]: string }|null);
            }

            /** Represents an OwnershipRecord. */
            class OwnershipRecord implements IOwnershipRecord {

                /**
                 * Constructs a new OwnershipRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.telomeer.IOwnershipRecord);

                /** OwnershipRecord ownerPublicKey. */
                public ownerPublicKey: Uint8Array;

                /** OwnershipRecord startTimestampMs. */
                public startTimestampMs: (number|Long);

                /** OwnershipRecord endTimestampMs. */
                public endTimestampMs: (number|Long);

                /** OwnershipRecord proof. */
                public proof?: (juicetokens.token.telomeer.IOwnershipProof|null);

                /** OwnershipRecord metadata. */
                public metadata: { [k: string]: string };

                /**
                 * Creates a new OwnershipRecord instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns OwnershipRecord instance
                 */
                public static create(properties?: juicetokens.token.telomeer.IOwnershipRecord): juicetokens.token.telomeer.OwnershipRecord;

                /**
                 * Encodes the specified OwnershipRecord message. Does not implicitly {@link juicetokens.token.telomeer.OwnershipRecord.verify|verify} messages.
                 * @param message OwnershipRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.telomeer.IOwnershipRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified OwnershipRecord message, length delimited. Does not implicitly {@link juicetokens.token.telomeer.OwnershipRecord.verify|verify} messages.
                 * @param message OwnershipRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.telomeer.IOwnershipRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an OwnershipRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns OwnershipRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.telomeer.OwnershipRecord;

                /**
                 * Decodes an OwnershipRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns OwnershipRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.telomeer.OwnershipRecord;

                /**
                 * Verifies an OwnershipRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an OwnershipRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns OwnershipRecord
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.telomeer.OwnershipRecord;

                /**
                 * Creates a plain object from an OwnershipRecord message. Also converts values to other types if specified.
                 * @param message OwnershipRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.telomeer.OwnershipRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this OwnershipRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for OwnershipRecord
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Represents a TelomeerService */
            class TelomeerService extends $protobuf.rpc.Service {

                /**
                 * Constructs a new TelomeerService service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Creates new TelomeerService service using the specified rpc implementation.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 * @returns RPC service. Useful where requests and/or responses are streamed.
                 */
                public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): TelomeerService;

                /**
                 * Calls VerifyOwnership.
                 * @param request OwnershipVerificationRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and OwnershipVerificationResponse
                 */
                public verifyOwnership(request: juicetokens.token.telomeer.IOwnershipVerificationRequest, callback: juicetokens.token.telomeer.TelomeerService.VerifyOwnershipCallback): void;

                /**
                 * Calls VerifyOwnership.
                 * @param request OwnershipVerificationRequest message or plain object
                 * @returns Promise
                 */
                public verifyOwnership(request: juicetokens.token.telomeer.IOwnershipVerificationRequest): Promise<juicetokens.token.telomeer.OwnershipVerificationResponse>;

                /**
                 * Calls TransferOwnership.
                 * @param request TransferOwnershipRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and TransferOwnershipResponse
                 */
                public transferOwnership(request: juicetokens.token.telomeer.ITransferOwnershipRequest, callback: juicetokens.token.telomeer.TelomeerService.TransferOwnershipCallback): void;

                /**
                 * Calls TransferOwnership.
                 * @param request TransferOwnershipRequest message or plain object
                 * @returns Promise
                 */
                public transferOwnership(request: juicetokens.token.telomeer.ITransferOwnershipRequest): Promise<juicetokens.token.telomeer.TransferOwnershipResponse>;

                /**
                 * Calls GetOwnershipHistory.
                 * @param request GetOwnershipHistoryRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and GetOwnershipHistoryResponse
                 */
                public getOwnershipHistory(request: juicetokens.token.telomeer.IGetOwnershipHistoryRequest, callback: juicetokens.token.telomeer.TelomeerService.GetOwnershipHistoryCallback): void;

                /**
                 * Calls GetOwnershipHistory.
                 * @param request GetOwnershipHistoryRequest message or plain object
                 * @returns Promise
                 */
                public getOwnershipHistory(request: juicetokens.token.telomeer.IGetOwnershipHistoryRequest): Promise<juicetokens.token.telomeer.GetOwnershipHistoryResponse>;

                /**
                 * Calls StreamOwnershipUpdates.
                 * @param request StreamOwnershipUpdatesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and OwnershipTransfer
                 */
                public streamOwnershipUpdates(request: juicetokens.token.telomeer.IStreamOwnershipUpdatesRequest, callback: juicetokens.token.telomeer.TelomeerService.StreamOwnershipUpdatesCallback): void;

                /**
                 * Calls StreamOwnershipUpdates.
                 * @param request StreamOwnershipUpdatesRequest message or plain object
                 * @returns Promise
                 */
                public streamOwnershipUpdates(request: juicetokens.token.telomeer.IStreamOwnershipUpdatesRequest): Promise<juicetokens.token.telomeer.OwnershipTransfer>;
            }

            namespace TelomeerService {

                /**
                 * Callback as used by {@link juicetokens.token.telomeer.TelomeerService#verifyOwnership}.
                 * @param error Error, if any
                 * @param [response] OwnershipVerificationResponse
                 */
                type VerifyOwnershipCallback = (error: (Error|null), response?: juicetokens.token.telomeer.OwnershipVerificationResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.telomeer.TelomeerService#transferOwnership}.
                 * @param error Error, if any
                 * @param [response] TransferOwnershipResponse
                 */
                type TransferOwnershipCallback = (error: (Error|null), response?: juicetokens.token.telomeer.TransferOwnershipResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.telomeer.TelomeerService#getOwnershipHistory}.
                 * @param error Error, if any
                 * @param [response] GetOwnershipHistoryResponse
                 */
                type GetOwnershipHistoryCallback = (error: (Error|null), response?: juicetokens.token.telomeer.GetOwnershipHistoryResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.telomeer.TelomeerService#streamOwnershipUpdates}.
                 * @param error Error, if any
                 * @param [response] OwnershipTransfer
                 */
                type StreamOwnershipUpdatesCallback = (error: (Error|null), response?: juicetokens.token.telomeer.OwnershipTransfer) => void;
            }

            /** Properties of a TransferOwnershipRequest. */
            interface ITransferOwnershipRequest {

                /** TransferOwnershipRequest tokenId */
                tokenId?: (string|null);

                /** TransferOwnershipRequest newOwnerPublicKey */
                newOwnerPublicKey?: (Uint8Array|null);

                /** TransferOwnershipRequest proof */
                proof?: (juicetokens.token.telomeer.IOwnershipProof|null);
            }

            /** Represents a TransferOwnershipRequest. */
            class TransferOwnershipRequest implements ITransferOwnershipRequest {

                /**
                 * Constructs a new TransferOwnershipRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.telomeer.ITransferOwnershipRequest);

                /** TransferOwnershipRequest tokenId. */
                public tokenId: string;

                /** TransferOwnershipRequest newOwnerPublicKey. */
                public newOwnerPublicKey: Uint8Array;

                /** TransferOwnershipRequest proof. */
                public proof?: (juicetokens.token.telomeer.IOwnershipProof|null);

                /**
                 * Creates a new TransferOwnershipRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TransferOwnershipRequest instance
                 */
                public static create(properties?: juicetokens.token.telomeer.ITransferOwnershipRequest): juicetokens.token.telomeer.TransferOwnershipRequest;

                /**
                 * Encodes the specified TransferOwnershipRequest message. Does not implicitly {@link juicetokens.token.telomeer.TransferOwnershipRequest.verify|verify} messages.
                 * @param message TransferOwnershipRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.telomeer.ITransferOwnershipRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TransferOwnershipRequest message, length delimited. Does not implicitly {@link juicetokens.token.telomeer.TransferOwnershipRequest.verify|verify} messages.
                 * @param message TransferOwnershipRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.telomeer.ITransferOwnershipRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TransferOwnershipRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TransferOwnershipRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.telomeer.TransferOwnershipRequest;

                /**
                 * Decodes a TransferOwnershipRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TransferOwnershipRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.telomeer.TransferOwnershipRequest;

                /**
                 * Verifies a TransferOwnershipRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TransferOwnershipRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TransferOwnershipRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.telomeer.TransferOwnershipRequest;

                /**
                 * Creates a plain object from a TransferOwnershipRequest message. Also converts values to other types if specified.
                 * @param message TransferOwnershipRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.telomeer.TransferOwnershipRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TransferOwnershipRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TransferOwnershipRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TransferOwnershipResponse. */
            interface ITransferOwnershipResponse {

                /** TransferOwnershipResponse success */
                success?: (boolean|null);

                /** TransferOwnershipResponse transfer */
                transfer?: (juicetokens.token.telomeer.IOwnershipTransfer|null);

                /** TransferOwnershipResponse errorMessage */
                errorMessage?: (string|null);
            }

            /** Represents a TransferOwnershipResponse. */
            class TransferOwnershipResponse implements ITransferOwnershipResponse {

                /**
                 * Constructs a new TransferOwnershipResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.telomeer.ITransferOwnershipResponse);

                /** TransferOwnershipResponse success. */
                public success: boolean;

                /** TransferOwnershipResponse transfer. */
                public transfer?: (juicetokens.token.telomeer.IOwnershipTransfer|null);

                /** TransferOwnershipResponse errorMessage. */
                public errorMessage: string;

                /**
                 * Creates a new TransferOwnershipResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TransferOwnershipResponse instance
                 */
                public static create(properties?: juicetokens.token.telomeer.ITransferOwnershipResponse): juicetokens.token.telomeer.TransferOwnershipResponse;

                /**
                 * Encodes the specified TransferOwnershipResponse message. Does not implicitly {@link juicetokens.token.telomeer.TransferOwnershipResponse.verify|verify} messages.
                 * @param message TransferOwnershipResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.telomeer.ITransferOwnershipResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TransferOwnershipResponse message, length delimited. Does not implicitly {@link juicetokens.token.telomeer.TransferOwnershipResponse.verify|verify} messages.
                 * @param message TransferOwnershipResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.telomeer.ITransferOwnershipResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TransferOwnershipResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TransferOwnershipResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.telomeer.TransferOwnershipResponse;

                /**
                 * Decodes a TransferOwnershipResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TransferOwnershipResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.telomeer.TransferOwnershipResponse;

                /**
                 * Verifies a TransferOwnershipResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TransferOwnershipResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TransferOwnershipResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.telomeer.TransferOwnershipResponse;

                /**
                 * Creates a plain object from a TransferOwnershipResponse message. Also converts values to other types if specified.
                 * @param message TransferOwnershipResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.telomeer.TransferOwnershipResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TransferOwnershipResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TransferOwnershipResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetOwnershipHistoryRequest. */
            interface IGetOwnershipHistoryRequest {

                /** GetOwnershipHistoryRequest tokenId */
                tokenId?: (string|null);

                /** GetOwnershipHistoryRequest limit */
                limit?: (number|null);

                /** GetOwnershipHistoryRequest pageToken */
                pageToken?: (string|null);
            }

            /** Represents a GetOwnershipHistoryRequest. */
            class GetOwnershipHistoryRequest implements IGetOwnershipHistoryRequest {

                /**
                 * Constructs a new GetOwnershipHistoryRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.telomeer.IGetOwnershipHistoryRequest);

                /** GetOwnershipHistoryRequest tokenId. */
                public tokenId: string;

                /** GetOwnershipHistoryRequest limit. */
                public limit: number;

                /** GetOwnershipHistoryRequest pageToken. */
                public pageToken: string;

                /**
                 * Creates a new GetOwnershipHistoryRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetOwnershipHistoryRequest instance
                 */
                public static create(properties?: juicetokens.token.telomeer.IGetOwnershipHistoryRequest): juicetokens.token.telomeer.GetOwnershipHistoryRequest;

                /**
                 * Encodes the specified GetOwnershipHistoryRequest message. Does not implicitly {@link juicetokens.token.telomeer.GetOwnershipHistoryRequest.verify|verify} messages.
                 * @param message GetOwnershipHistoryRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.telomeer.IGetOwnershipHistoryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetOwnershipHistoryRequest message, length delimited. Does not implicitly {@link juicetokens.token.telomeer.GetOwnershipHistoryRequest.verify|verify} messages.
                 * @param message GetOwnershipHistoryRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.telomeer.IGetOwnershipHistoryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetOwnershipHistoryRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetOwnershipHistoryRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.telomeer.GetOwnershipHistoryRequest;

                /**
                 * Decodes a GetOwnershipHistoryRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetOwnershipHistoryRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.telomeer.GetOwnershipHistoryRequest;

                /**
                 * Verifies a GetOwnershipHistoryRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetOwnershipHistoryRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetOwnershipHistoryRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.telomeer.GetOwnershipHistoryRequest;

                /**
                 * Creates a plain object from a GetOwnershipHistoryRequest message. Also converts values to other types if specified.
                 * @param message GetOwnershipHistoryRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.telomeer.GetOwnershipHistoryRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetOwnershipHistoryRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetOwnershipHistoryRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetOwnershipHistoryResponse. */
            interface IGetOwnershipHistoryResponse {

                /** GetOwnershipHistoryResponse history */
                history?: (juicetokens.token.telomeer.IOwnershipHistory|null);

                /** GetOwnershipHistoryResponse nextPageToken */
                nextPageToken?: (string|null);
            }

            /** Represents a GetOwnershipHistoryResponse. */
            class GetOwnershipHistoryResponse implements IGetOwnershipHistoryResponse {

                /**
                 * Constructs a new GetOwnershipHistoryResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.telomeer.IGetOwnershipHistoryResponse);

                /** GetOwnershipHistoryResponse history. */
                public history?: (juicetokens.token.telomeer.IOwnershipHistory|null);

                /** GetOwnershipHistoryResponse nextPageToken. */
                public nextPageToken: string;

                /**
                 * Creates a new GetOwnershipHistoryResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetOwnershipHistoryResponse instance
                 */
                public static create(properties?: juicetokens.token.telomeer.IGetOwnershipHistoryResponse): juicetokens.token.telomeer.GetOwnershipHistoryResponse;

                /**
                 * Encodes the specified GetOwnershipHistoryResponse message. Does not implicitly {@link juicetokens.token.telomeer.GetOwnershipHistoryResponse.verify|verify} messages.
                 * @param message GetOwnershipHistoryResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.telomeer.IGetOwnershipHistoryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetOwnershipHistoryResponse message, length delimited. Does not implicitly {@link juicetokens.token.telomeer.GetOwnershipHistoryResponse.verify|verify} messages.
                 * @param message GetOwnershipHistoryResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.telomeer.IGetOwnershipHistoryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetOwnershipHistoryResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetOwnershipHistoryResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.telomeer.GetOwnershipHistoryResponse;

                /**
                 * Decodes a GetOwnershipHistoryResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetOwnershipHistoryResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.telomeer.GetOwnershipHistoryResponse;

                /**
                 * Verifies a GetOwnershipHistoryResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetOwnershipHistoryResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetOwnershipHistoryResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.telomeer.GetOwnershipHistoryResponse;

                /**
                 * Creates a plain object from a GetOwnershipHistoryResponse message. Also converts values to other types if specified.
                 * @param message GetOwnershipHistoryResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.telomeer.GetOwnershipHistoryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetOwnershipHistoryResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetOwnershipHistoryResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StreamOwnershipUpdatesRequest. */
            interface IStreamOwnershipUpdatesRequest {

                /** StreamOwnershipUpdatesRequest tokenId */
                tokenId?: (string|null);
            }

            /** Represents a StreamOwnershipUpdatesRequest. */
            class StreamOwnershipUpdatesRequest implements IStreamOwnershipUpdatesRequest {

                /**
                 * Constructs a new StreamOwnershipUpdatesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.telomeer.IStreamOwnershipUpdatesRequest);

                /** StreamOwnershipUpdatesRequest tokenId. */
                public tokenId: string;

                /**
                 * Creates a new StreamOwnershipUpdatesRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StreamOwnershipUpdatesRequest instance
                 */
                public static create(properties?: juicetokens.token.telomeer.IStreamOwnershipUpdatesRequest): juicetokens.token.telomeer.StreamOwnershipUpdatesRequest;

                /**
                 * Encodes the specified StreamOwnershipUpdatesRequest message. Does not implicitly {@link juicetokens.token.telomeer.StreamOwnershipUpdatesRequest.verify|verify} messages.
                 * @param message StreamOwnershipUpdatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.telomeer.IStreamOwnershipUpdatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StreamOwnershipUpdatesRequest message, length delimited. Does not implicitly {@link juicetokens.token.telomeer.StreamOwnershipUpdatesRequest.verify|verify} messages.
                 * @param message StreamOwnershipUpdatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.telomeer.IStreamOwnershipUpdatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StreamOwnershipUpdatesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StreamOwnershipUpdatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.telomeer.StreamOwnershipUpdatesRequest;

                /**
                 * Decodes a StreamOwnershipUpdatesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StreamOwnershipUpdatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.telomeer.StreamOwnershipUpdatesRequest;

                /**
                 * Verifies a StreamOwnershipUpdatesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StreamOwnershipUpdatesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StreamOwnershipUpdatesRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.telomeer.StreamOwnershipUpdatesRequest;

                /**
                 * Creates a plain object from a StreamOwnershipUpdatesRequest message. Also converts values to other types if specified.
                 * @param message StreamOwnershipUpdatesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.telomeer.StreamOwnershipUpdatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StreamOwnershipUpdatesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StreamOwnershipUpdatesRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Namespace transaction. */
        namespace transaction {

            /** TransactionState enum. */
            enum TransactionState {
                TRANSACTION_UNSPECIFIED = 0,
                INITIATED = 1,
                PREPARING = 2,
                PREPARED = 3,
                COMMITTING = 4,
                COMMITTED = 5,
                ABORTING = 6,
                ABORTED = 7,
                FAILED = 8
            }

            /** Properties of a Transaction. */
            interface ITransaction {

                /** Transaction id */
                id?: (string|null);

                /** Transaction state */
                state?: (juicetokens.token.transaction.TransactionState|null);

                /** Transaction context */
                context?: (juicetokens.token.transaction.ITransactionContext|null);

                /** Transaction senderExoPak */
                senderExoPak?: (juicetokens.token.transaction.IExoPak|null);

                /** Transaction receiverExoPak */
                receiverExoPak?: (juicetokens.token.transaction.IExoPak|null);

                /** Transaction senderRetroPak */
                senderRetroPak?: (juicetokens.token.transaction.IRetroPak|null);

                /** Transaction receiverRetroPak */
                receiverRetroPak?: (juicetokens.token.transaction.IRetroPak|null);

                /** Transaction timestamps */
                timestamps?: (juicetokens.token.transaction.ITransactionTimestamps|null);

                /** Transaction proofs */
                proofs?: (juicetokens.token.transaction.ITransactionProofs|null);

                /** Transaction metadata */
                metadata?: ({ [k: string]: string }|null);
            }

            /** Represents a Transaction. */
            class Transaction implements ITransaction {

                /**
                 * Constructs a new Transaction.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.ITransaction);

                /** Transaction id. */
                public id: string;

                /** Transaction state. */
                public state: juicetokens.token.transaction.TransactionState;

                /** Transaction context. */
                public context?: (juicetokens.token.transaction.ITransactionContext|null);

                /** Transaction senderExoPak. */
                public senderExoPak?: (juicetokens.token.transaction.IExoPak|null);

                /** Transaction receiverExoPak. */
                public receiverExoPak?: (juicetokens.token.transaction.IExoPak|null);

                /** Transaction senderRetroPak. */
                public senderRetroPak?: (juicetokens.token.transaction.IRetroPak|null);

                /** Transaction receiverRetroPak. */
                public receiverRetroPak?: (juicetokens.token.transaction.IRetroPak|null);

                /** Transaction timestamps. */
                public timestamps?: (juicetokens.token.transaction.ITransactionTimestamps|null);

                /** Transaction proofs. */
                public proofs?: (juicetokens.token.transaction.ITransactionProofs|null);

                /** Transaction metadata. */
                public metadata: { [k: string]: string };

                /**
                 * Creates a new Transaction instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Transaction instance
                 */
                public static create(properties?: juicetokens.token.transaction.ITransaction): juicetokens.token.transaction.Transaction;

                /**
                 * Encodes the specified Transaction message. Does not implicitly {@link juicetokens.token.transaction.Transaction.verify|verify} messages.
                 * @param message Transaction message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.ITransaction, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Transaction message, length delimited. Does not implicitly {@link juicetokens.token.transaction.Transaction.verify|verify} messages.
                 * @param message Transaction message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.ITransaction, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Transaction message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Transaction
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.Transaction;

                /**
                 * Decodes a Transaction message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Transaction
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.Transaction;

                /**
                 * Verifies a Transaction message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Transaction message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Transaction
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.Transaction;

                /**
                 * Creates a plain object from a Transaction message. Also converts values to other types if specified.
                 * @param message Transaction
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.Transaction, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Transaction to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Transaction
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TransactionContext. */
            interface ITransactionContext {

                /** TransactionContext senderPublicKey */
                senderPublicKey?: (Uint8Array|null);

                /** TransactionContext receiverPublicKey */
                receiverPublicKey?: (Uint8Array|null);

                /** TransactionContext transactionType */
                transactionType?: (string|null);

                /** TransactionContext purpose */
                purpose?: (string|null);

                /** TransactionContext amount */
                amount?: (number|Long|null);

                /** TransactionContext location */
                location?: (juicetokens.token.model.ILocation|null);

                /** TransactionContext reference */
                reference?: (juicetokens.token.model.IReference|null);

                /** TransactionContext constraints */
                constraints?: (juicetokens.token.transaction.ITransactionConstraints|null);
            }

            /** Represents a TransactionContext. */
            class TransactionContext implements ITransactionContext {

                /**
                 * Constructs a new TransactionContext.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.ITransactionContext);

                /** TransactionContext senderPublicKey. */
                public senderPublicKey: Uint8Array;

                /** TransactionContext receiverPublicKey. */
                public receiverPublicKey: Uint8Array;

                /** TransactionContext transactionType. */
                public transactionType: string;

                /** TransactionContext purpose. */
                public purpose: string;

                /** TransactionContext amount. */
                public amount: (number|Long);

                /** TransactionContext location. */
                public location?: (juicetokens.token.model.ILocation|null);

                /** TransactionContext reference. */
                public reference?: (juicetokens.token.model.IReference|null);

                /** TransactionContext constraints. */
                public constraints?: (juicetokens.token.transaction.ITransactionConstraints|null);

                /**
                 * Creates a new TransactionContext instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TransactionContext instance
                 */
                public static create(properties?: juicetokens.token.transaction.ITransactionContext): juicetokens.token.transaction.TransactionContext;

                /**
                 * Encodes the specified TransactionContext message. Does not implicitly {@link juicetokens.token.transaction.TransactionContext.verify|verify} messages.
                 * @param message TransactionContext message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.ITransactionContext, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TransactionContext message, length delimited. Does not implicitly {@link juicetokens.token.transaction.TransactionContext.verify|verify} messages.
                 * @param message TransactionContext message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.ITransactionContext, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TransactionContext message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TransactionContext
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.TransactionContext;

                /**
                 * Decodes a TransactionContext message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TransactionContext
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.TransactionContext;

                /**
                 * Verifies a TransactionContext message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TransactionContext message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TransactionContext
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.TransactionContext;

                /**
                 * Creates a plain object from a TransactionContext message. Also converts values to other types if specified.
                 * @param message TransactionContext
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.TransactionContext, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TransactionContext to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TransactionContext
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TransactionConstraints. */
            interface ITransactionConstraints {

                /** TransactionConstraints maxDurationMs */
                maxDurationMs?: (number|Long|null);

                /** TransactionConstraints minBalanceAfter */
                minBalanceAfter?: (number|Long|null);

                /** TransactionConstraints allowedDenominations */
                allowedDenominations?: (juicetokens.token.model.DenominationValue[]|null);

                /** TransactionConstraints requiredAttestationLevel */
                requiredAttestationLevel?: (number|null);

                /** TransactionConstraints useWisselToken */
                useWisselToken?: (boolean|null);

                /** TransactionConstraints useAfrondingBuffer */
                useAfrondingBuffer?: (boolean|null);
            }

            /** Represents a TransactionConstraints. */
            class TransactionConstraints implements ITransactionConstraints {

                /**
                 * Constructs a new TransactionConstraints.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.ITransactionConstraints);

                /** TransactionConstraints maxDurationMs. */
                public maxDurationMs: (number|Long);

                /** TransactionConstraints minBalanceAfter. */
                public minBalanceAfter: (number|Long);

                /** TransactionConstraints allowedDenominations. */
                public allowedDenominations: juicetokens.token.model.DenominationValue[];

                /** TransactionConstraints requiredAttestationLevel. */
                public requiredAttestationLevel: number;

                /** TransactionConstraints useWisselToken. */
                public useWisselToken: boolean;

                /** TransactionConstraints useAfrondingBuffer. */
                public useAfrondingBuffer: boolean;

                /**
                 * Creates a new TransactionConstraints instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TransactionConstraints instance
                 */
                public static create(properties?: juicetokens.token.transaction.ITransactionConstraints): juicetokens.token.transaction.TransactionConstraints;

                /**
                 * Encodes the specified TransactionConstraints message. Does not implicitly {@link juicetokens.token.transaction.TransactionConstraints.verify|verify} messages.
                 * @param message TransactionConstraints message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.ITransactionConstraints, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TransactionConstraints message, length delimited. Does not implicitly {@link juicetokens.token.transaction.TransactionConstraints.verify|verify} messages.
                 * @param message TransactionConstraints message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.ITransactionConstraints, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TransactionConstraints message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TransactionConstraints
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.TransactionConstraints;

                /**
                 * Decodes a TransactionConstraints message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TransactionConstraints
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.TransactionConstraints;

                /**
                 * Verifies a TransactionConstraints message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TransactionConstraints message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TransactionConstraints
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.TransactionConstraints;

                /**
                 * Creates a plain object from a TransactionConstraints message. Also converts values to other types if specified.
                 * @param message TransactionConstraints
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.TransactionConstraints, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TransactionConstraints to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TransactionConstraints
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an ExoPak. */
            interface IExoPak {

                /** ExoPak id */
                id?: (string|null);

                /** ExoPak status */
                status?: (juicetokens.token.transaction.PakStatus|null);

                /** ExoPak tokens */
                tokens?: (juicetokens.token.model.IToken[]|null);

                /** ExoPak proof */
                proof?: (Uint8Array|null);

                /** ExoPak metadata */
                metadata?: ({ [k: string]: string }|null);
            }

            /** Represents an ExoPak. */
            class ExoPak implements IExoPak {

                /**
                 * Constructs a new ExoPak.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IExoPak);

                /** ExoPak id. */
                public id: string;

                /** ExoPak status. */
                public status: juicetokens.token.transaction.PakStatus;

                /** ExoPak tokens. */
                public tokens: juicetokens.token.model.IToken[];

                /** ExoPak proof. */
                public proof: Uint8Array;

                /** ExoPak metadata. */
                public metadata: { [k: string]: string };

                /**
                 * Creates a new ExoPak instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExoPak instance
                 */
                public static create(properties?: juicetokens.token.transaction.IExoPak): juicetokens.token.transaction.ExoPak;

                /**
                 * Encodes the specified ExoPak message. Does not implicitly {@link juicetokens.token.transaction.ExoPak.verify|verify} messages.
                 * @param message ExoPak message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IExoPak, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExoPak message, length delimited. Does not implicitly {@link juicetokens.token.transaction.ExoPak.verify|verify} messages.
                 * @param message ExoPak message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IExoPak, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExoPak message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExoPak
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.ExoPak;

                /**
                 * Decodes an ExoPak message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExoPak
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.ExoPak;

                /**
                 * Verifies an ExoPak message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExoPak message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExoPak
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.ExoPak;

                /**
                 * Creates a plain object from an ExoPak message. Also converts values to other types if specified.
                 * @param message ExoPak
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.ExoPak, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExoPak to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ExoPak
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RetroPak. */
            interface IRetroPak {

                /** RetroPak id */
                id?: (string|null);

                /** RetroPak status */
                status?: (juicetokens.token.transaction.PakStatus|null);

                /** RetroPak tokens */
                tokens?: (juicetokens.token.model.IToken[]|null);

                /** RetroPak rollbackInstructions */
                rollbackInstructions?: (juicetokens.token.transaction.IRollbackInstructions|null);

                /** RetroPak proof */
                proof?: (Uint8Array|null);

                /** RetroPak metadata */
                metadata?: ({ [k: string]: string }|null);
            }

            /** Represents a RetroPak. */
            class RetroPak implements IRetroPak {

                /**
                 * Constructs a new RetroPak.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IRetroPak);

                /** RetroPak id. */
                public id: string;

                /** RetroPak status. */
                public status: juicetokens.token.transaction.PakStatus;

                /** RetroPak tokens. */
                public tokens: juicetokens.token.model.IToken[];

                /** RetroPak rollbackInstructions. */
                public rollbackInstructions?: (juicetokens.token.transaction.IRollbackInstructions|null);

                /** RetroPak proof. */
                public proof: Uint8Array;

                /** RetroPak metadata. */
                public metadata: { [k: string]: string };

                /**
                 * Creates a new RetroPak instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RetroPak instance
                 */
                public static create(properties?: juicetokens.token.transaction.IRetroPak): juicetokens.token.transaction.RetroPak;

                /**
                 * Encodes the specified RetroPak message. Does not implicitly {@link juicetokens.token.transaction.RetroPak.verify|verify} messages.
                 * @param message RetroPak message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IRetroPak, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RetroPak message, length delimited. Does not implicitly {@link juicetokens.token.transaction.RetroPak.verify|verify} messages.
                 * @param message RetroPak message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IRetroPak, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RetroPak message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RetroPak
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.RetroPak;

                /**
                 * Decodes a RetroPak message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RetroPak
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.RetroPak;

                /**
                 * Verifies a RetroPak message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RetroPak message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RetroPak
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.RetroPak;

                /**
                 * Creates a plain object from a RetroPak message. Also converts values to other types if specified.
                 * @param message RetroPak
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.RetroPak, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RetroPak to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RetroPak
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** PakStatus enum. */
            enum PakStatus {
                PAK_UNSPECIFIED = 0,
                CREATED = 1,
                SENT = 2,
                RECEIVED = 3,
                VERIFIED = 4,
                COMMITTED = 5,
                ROLLED_BACK = 6,
                FAILED = 7
            }

            /** Properties of a RollbackInstructions. */
            interface IRollbackInstructions {

                /** RollbackInstructions steps */
                steps?: (juicetokens.token.transaction.IRollbackStep[]|null);

                /** RollbackInstructions timeoutMs */
                timeoutMs?: (number|Long|null);

                /** RollbackInstructions proof */
                proof?: (Uint8Array|null);
            }

            /** Represents a RollbackInstructions. */
            class RollbackInstructions implements IRollbackInstructions {

                /**
                 * Constructs a new RollbackInstructions.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IRollbackInstructions);

                /** RollbackInstructions steps. */
                public steps: juicetokens.token.transaction.IRollbackStep[];

                /** RollbackInstructions timeoutMs. */
                public timeoutMs: (number|Long);

                /** RollbackInstructions proof. */
                public proof: Uint8Array;

                /**
                 * Creates a new RollbackInstructions instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RollbackInstructions instance
                 */
                public static create(properties?: juicetokens.token.transaction.IRollbackInstructions): juicetokens.token.transaction.RollbackInstructions;

                /**
                 * Encodes the specified RollbackInstructions message. Does not implicitly {@link juicetokens.token.transaction.RollbackInstructions.verify|verify} messages.
                 * @param message RollbackInstructions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IRollbackInstructions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RollbackInstructions message, length delimited. Does not implicitly {@link juicetokens.token.transaction.RollbackInstructions.verify|verify} messages.
                 * @param message RollbackInstructions message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IRollbackInstructions, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RollbackInstructions message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RollbackInstructions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.RollbackInstructions;

                /**
                 * Decodes a RollbackInstructions message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RollbackInstructions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.RollbackInstructions;

                /**
                 * Verifies a RollbackInstructions message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RollbackInstructions message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RollbackInstructions
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.RollbackInstructions;

                /**
                 * Creates a plain object from a RollbackInstructions message. Also converts values to other types if specified.
                 * @param message RollbackInstructions
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.RollbackInstructions, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RollbackInstructions to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RollbackInstructions
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RollbackStep. */
            interface IRollbackStep {

                /** RollbackStep stepNumber */
                stepNumber?: (number|null);

                /** RollbackStep stepType */
                stepType?: (string|null);

                /** RollbackStep stepData */
                stepData?: (Uint8Array|null);

                /** RollbackStep stepProof */
                stepProof?: (Uint8Array|null);
            }

            /** Represents a RollbackStep. */
            class RollbackStep implements IRollbackStep {

                /**
                 * Constructs a new RollbackStep.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IRollbackStep);

                /** RollbackStep stepNumber. */
                public stepNumber: number;

                /** RollbackStep stepType. */
                public stepType: string;

                /** RollbackStep stepData. */
                public stepData: Uint8Array;

                /** RollbackStep stepProof. */
                public stepProof: Uint8Array;

                /**
                 * Creates a new RollbackStep instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RollbackStep instance
                 */
                public static create(properties?: juicetokens.token.transaction.IRollbackStep): juicetokens.token.transaction.RollbackStep;

                /**
                 * Encodes the specified RollbackStep message. Does not implicitly {@link juicetokens.token.transaction.RollbackStep.verify|verify} messages.
                 * @param message RollbackStep message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IRollbackStep, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RollbackStep message, length delimited. Does not implicitly {@link juicetokens.token.transaction.RollbackStep.verify|verify} messages.
                 * @param message RollbackStep message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IRollbackStep, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RollbackStep message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RollbackStep
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.RollbackStep;

                /**
                 * Decodes a RollbackStep message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RollbackStep
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.RollbackStep;

                /**
                 * Verifies a RollbackStep message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RollbackStep message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RollbackStep
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.RollbackStep;

                /**
                 * Creates a plain object from a RollbackStep message. Also converts values to other types if specified.
                 * @param message RollbackStep
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.RollbackStep, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RollbackStep to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RollbackStep
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TransactionTimestamps. */
            interface ITransactionTimestamps {

                /** TransactionTimestamps createdAtMs */
                createdAtMs?: (number|Long|null);

                /** TransactionTimestamps initiatedAtMs */
                initiatedAtMs?: (number|Long|null);

                /** TransactionTimestamps preparedAtMs */
                preparedAtMs?: (number|Long|null);

                /** TransactionTimestamps committedAtMs */
                committedAtMs?: (number|Long|null);

                /** TransactionTimestamps completedAtMs */
                completedAtMs?: (number|Long|null);

                /** TransactionTimestamps timeoutAtMs */
                timeoutAtMs?: (number|Long|null);
            }

            /** Represents a TransactionTimestamps. */
            class TransactionTimestamps implements ITransactionTimestamps {

                /**
                 * Constructs a new TransactionTimestamps.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.ITransactionTimestamps);

                /** TransactionTimestamps createdAtMs. */
                public createdAtMs: (number|Long);

                /** TransactionTimestamps initiatedAtMs. */
                public initiatedAtMs: (number|Long);

                /** TransactionTimestamps preparedAtMs. */
                public preparedAtMs: (number|Long);

                /** TransactionTimestamps committedAtMs. */
                public committedAtMs: (number|Long);

                /** TransactionTimestamps completedAtMs. */
                public completedAtMs: (number|Long);

                /** TransactionTimestamps timeoutAtMs. */
                public timeoutAtMs: (number|Long);

                /**
                 * Creates a new TransactionTimestamps instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TransactionTimestamps instance
                 */
                public static create(properties?: juicetokens.token.transaction.ITransactionTimestamps): juicetokens.token.transaction.TransactionTimestamps;

                /**
                 * Encodes the specified TransactionTimestamps message. Does not implicitly {@link juicetokens.token.transaction.TransactionTimestamps.verify|verify} messages.
                 * @param message TransactionTimestamps message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.ITransactionTimestamps, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TransactionTimestamps message, length delimited. Does not implicitly {@link juicetokens.token.transaction.TransactionTimestamps.verify|verify} messages.
                 * @param message TransactionTimestamps message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.ITransactionTimestamps, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TransactionTimestamps message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TransactionTimestamps
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.TransactionTimestamps;

                /**
                 * Decodes a TransactionTimestamps message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TransactionTimestamps
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.TransactionTimestamps;

                /**
                 * Verifies a TransactionTimestamps message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TransactionTimestamps message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TransactionTimestamps
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.TransactionTimestamps;

                /**
                 * Creates a plain object from a TransactionTimestamps message. Also converts values to other types if specified.
                 * @param message TransactionTimestamps
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.TransactionTimestamps, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TransactionTimestamps to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TransactionTimestamps
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TransactionProofs. */
            interface ITransactionProofs {

                /** TransactionProofs transactionSignature */
                transactionSignature?: (Uint8Array|null);

                /** TransactionProofs senderCommitmentProof */
                senderCommitmentProof?: (Uint8Array|null);

                /** TransactionProofs receiverCommitmentProof */
                receiverCommitmentProof?: (Uint8Array|null);

                /** TransactionProofs atomicCommitmentProof */
                atomicCommitmentProof?: (Uint8Array|null);

                /** TransactionProofs zeroKnowledgeProofs */
                zeroKnowledgeProofs?: (Uint8Array[]|null);
            }

            /** Represents a TransactionProofs. */
            class TransactionProofs implements ITransactionProofs {

                /**
                 * Constructs a new TransactionProofs.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.ITransactionProofs);

                /** TransactionProofs transactionSignature. */
                public transactionSignature: Uint8Array;

                /** TransactionProofs senderCommitmentProof. */
                public senderCommitmentProof: Uint8Array;

                /** TransactionProofs receiverCommitmentProof. */
                public receiverCommitmentProof: Uint8Array;

                /** TransactionProofs atomicCommitmentProof. */
                public atomicCommitmentProof: Uint8Array;

                /** TransactionProofs zeroKnowledgeProofs. */
                public zeroKnowledgeProofs: Uint8Array[];

                /**
                 * Creates a new TransactionProofs instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TransactionProofs instance
                 */
                public static create(properties?: juicetokens.token.transaction.ITransactionProofs): juicetokens.token.transaction.TransactionProofs;

                /**
                 * Encodes the specified TransactionProofs message. Does not implicitly {@link juicetokens.token.transaction.TransactionProofs.verify|verify} messages.
                 * @param message TransactionProofs message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.ITransactionProofs, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TransactionProofs message, length delimited. Does not implicitly {@link juicetokens.token.transaction.TransactionProofs.verify|verify} messages.
                 * @param message TransactionProofs message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.ITransactionProofs, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TransactionProofs message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TransactionProofs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.TransactionProofs;

                /**
                 * Decodes a TransactionProofs message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TransactionProofs
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.TransactionProofs;

                /**
                 * Verifies a TransactionProofs message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TransactionProofs message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TransactionProofs
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.TransactionProofs;

                /**
                 * Creates a plain object from a TransactionProofs message. Also converts values to other types if specified.
                 * @param message TransactionProofs
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.TransactionProofs, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TransactionProofs to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TransactionProofs
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Represents a TransactionService */
            class TransactionService extends $protobuf.rpc.Service {

                /**
                 * Constructs a new TransactionService service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Creates new TransactionService service using the specified rpc implementation.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 * @returns RPC service. Useful where requests and/or responses are streamed.
                 */
                public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): TransactionService;

                /**
                 * Calls InitiateTransaction.
                 * @param request InitiateTransactionRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and InitiateTransactionResponse
                 */
                public initiateTransaction(request: juicetokens.token.transaction.IInitiateTransactionRequest, callback: juicetokens.token.transaction.TransactionService.InitiateTransactionCallback): void;

                /**
                 * Calls InitiateTransaction.
                 * @param request InitiateTransactionRequest message or plain object
                 * @returns Promise
                 */
                public initiateTransaction(request: juicetokens.token.transaction.IInitiateTransactionRequest): Promise<juicetokens.token.transaction.InitiateTransactionResponse>;

                /**
                 * Calls PrepareTransaction.
                 * @param request PrepareTransactionRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and PrepareTransactionResponse
                 */
                public prepareTransaction(request: juicetokens.token.transaction.IPrepareTransactionRequest, callback: juicetokens.token.transaction.TransactionService.PrepareTransactionCallback): void;

                /**
                 * Calls PrepareTransaction.
                 * @param request PrepareTransactionRequest message or plain object
                 * @returns Promise
                 */
                public prepareTransaction(request: juicetokens.token.transaction.IPrepareTransactionRequest): Promise<juicetokens.token.transaction.PrepareTransactionResponse>;

                /**
                 * Calls CommitTransaction.
                 * @param request CommitTransactionRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and CommitTransactionResponse
                 */
                public commitTransaction(request: juicetokens.token.transaction.ICommitTransactionRequest, callback: juicetokens.token.transaction.TransactionService.CommitTransactionCallback): void;

                /**
                 * Calls CommitTransaction.
                 * @param request CommitTransactionRequest message or plain object
                 * @returns Promise
                 */
                public commitTransaction(request: juicetokens.token.transaction.ICommitTransactionRequest): Promise<juicetokens.token.transaction.CommitTransactionResponse>;

                /**
                 * Calls AbortTransaction.
                 * @param request AbortTransactionRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and AbortTransactionResponse
                 */
                public abortTransaction(request: juicetokens.token.transaction.IAbortTransactionRequest, callback: juicetokens.token.transaction.TransactionService.AbortTransactionCallback): void;

                /**
                 * Calls AbortTransaction.
                 * @param request AbortTransactionRequest message or plain object
                 * @returns Promise
                 */
                public abortTransaction(request: juicetokens.token.transaction.IAbortTransactionRequest): Promise<juicetokens.token.transaction.AbortTransactionResponse>;

                /**
                 * Calls GetTransaction.
                 * @param request GetTransactionRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and GetTransactionResponse
                 */
                public getTransaction(request: juicetokens.token.transaction.IGetTransactionRequest, callback: juicetokens.token.transaction.TransactionService.GetTransactionCallback): void;

                /**
                 * Calls GetTransaction.
                 * @param request GetTransactionRequest message or plain object
                 * @returns Promise
                 */
                public getTransaction(request: juicetokens.token.transaction.IGetTransactionRequest): Promise<juicetokens.token.transaction.GetTransactionResponse>;

                /**
                 * Calls StreamTransactionUpdates.
                 * @param request StreamTransactionUpdatesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and Transaction
                 */
                public streamTransactionUpdates(request: juicetokens.token.transaction.IStreamTransactionUpdatesRequest, callback: juicetokens.token.transaction.TransactionService.StreamTransactionUpdatesCallback): void;

                /**
                 * Calls StreamTransactionUpdates.
                 * @param request StreamTransactionUpdatesRequest message or plain object
                 * @returns Promise
                 */
                public streamTransactionUpdates(request: juicetokens.token.transaction.IStreamTransactionUpdatesRequest): Promise<juicetokens.token.transaction.Transaction>;
            }

            namespace TransactionService {

                /**
                 * Callback as used by {@link juicetokens.token.transaction.TransactionService#initiateTransaction}.
                 * @param error Error, if any
                 * @param [response] InitiateTransactionResponse
                 */
                type InitiateTransactionCallback = (error: (Error|null), response?: juicetokens.token.transaction.InitiateTransactionResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.transaction.TransactionService#prepareTransaction}.
                 * @param error Error, if any
                 * @param [response] PrepareTransactionResponse
                 */
                type PrepareTransactionCallback = (error: (Error|null), response?: juicetokens.token.transaction.PrepareTransactionResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.transaction.TransactionService#commitTransaction}.
                 * @param error Error, if any
                 * @param [response] CommitTransactionResponse
                 */
                type CommitTransactionCallback = (error: (Error|null), response?: juicetokens.token.transaction.CommitTransactionResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.transaction.TransactionService#abortTransaction}.
                 * @param error Error, if any
                 * @param [response] AbortTransactionResponse
                 */
                type AbortTransactionCallback = (error: (Error|null), response?: juicetokens.token.transaction.AbortTransactionResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.transaction.TransactionService#getTransaction}.
                 * @param error Error, if any
                 * @param [response] GetTransactionResponse
                 */
                type GetTransactionCallback = (error: (Error|null), response?: juicetokens.token.transaction.GetTransactionResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.token.transaction.TransactionService#streamTransactionUpdates}.
                 * @param error Error, if any
                 * @param [response] Transaction
                 */
                type StreamTransactionUpdatesCallback = (error: (Error|null), response?: juicetokens.token.transaction.Transaction) => void;
            }

            /** Properties of an InitiateTransactionRequest. */
            interface IInitiateTransactionRequest {

                /** InitiateTransactionRequest context */
                context?: (juicetokens.token.transaction.ITransactionContext|null);

                /** InitiateTransactionRequest senderTokens */
                senderTokens?: (juicetokens.token.model.IToken[]|null);

                /** InitiateTransactionRequest receiverTokens */
                receiverTokens?: (juicetokens.token.model.IToken[]|null);
            }

            /** Represents an InitiateTransactionRequest. */
            class InitiateTransactionRequest implements IInitiateTransactionRequest {

                /**
                 * Constructs a new InitiateTransactionRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IInitiateTransactionRequest);

                /** InitiateTransactionRequest context. */
                public context?: (juicetokens.token.transaction.ITransactionContext|null);

                /** InitiateTransactionRequest senderTokens. */
                public senderTokens: juicetokens.token.model.IToken[];

                /** InitiateTransactionRequest receiverTokens. */
                public receiverTokens: juicetokens.token.model.IToken[];

                /**
                 * Creates a new InitiateTransactionRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns InitiateTransactionRequest instance
                 */
                public static create(properties?: juicetokens.token.transaction.IInitiateTransactionRequest): juicetokens.token.transaction.InitiateTransactionRequest;

                /**
                 * Encodes the specified InitiateTransactionRequest message. Does not implicitly {@link juicetokens.token.transaction.InitiateTransactionRequest.verify|verify} messages.
                 * @param message InitiateTransactionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IInitiateTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified InitiateTransactionRequest message, length delimited. Does not implicitly {@link juicetokens.token.transaction.InitiateTransactionRequest.verify|verify} messages.
                 * @param message InitiateTransactionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IInitiateTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an InitiateTransactionRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns InitiateTransactionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.InitiateTransactionRequest;

                /**
                 * Decodes an InitiateTransactionRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns InitiateTransactionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.InitiateTransactionRequest;

                /**
                 * Verifies an InitiateTransactionRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an InitiateTransactionRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns InitiateTransactionRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.InitiateTransactionRequest;

                /**
                 * Creates a plain object from an InitiateTransactionRequest message. Also converts values to other types if specified.
                 * @param message InitiateTransactionRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.InitiateTransactionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this InitiateTransactionRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for InitiateTransactionRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an InitiateTransactionResponse. */
            interface IInitiateTransactionResponse {

                /** InitiateTransactionResponse transaction */
                transaction?: (juicetokens.token.transaction.ITransaction|null);
            }

            /** Represents an InitiateTransactionResponse. */
            class InitiateTransactionResponse implements IInitiateTransactionResponse {

                /**
                 * Constructs a new InitiateTransactionResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IInitiateTransactionResponse);

                /** InitiateTransactionResponse transaction. */
                public transaction?: (juicetokens.token.transaction.ITransaction|null);

                /**
                 * Creates a new InitiateTransactionResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns InitiateTransactionResponse instance
                 */
                public static create(properties?: juicetokens.token.transaction.IInitiateTransactionResponse): juicetokens.token.transaction.InitiateTransactionResponse;

                /**
                 * Encodes the specified InitiateTransactionResponse message. Does not implicitly {@link juicetokens.token.transaction.InitiateTransactionResponse.verify|verify} messages.
                 * @param message InitiateTransactionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IInitiateTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified InitiateTransactionResponse message, length delimited. Does not implicitly {@link juicetokens.token.transaction.InitiateTransactionResponse.verify|verify} messages.
                 * @param message InitiateTransactionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IInitiateTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an InitiateTransactionResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns InitiateTransactionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.InitiateTransactionResponse;

                /**
                 * Decodes an InitiateTransactionResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns InitiateTransactionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.InitiateTransactionResponse;

                /**
                 * Verifies an InitiateTransactionResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an InitiateTransactionResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns InitiateTransactionResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.InitiateTransactionResponse;

                /**
                 * Creates a plain object from an InitiateTransactionResponse message. Also converts values to other types if specified.
                 * @param message InitiateTransactionResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.InitiateTransactionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this InitiateTransactionResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for InitiateTransactionResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PrepareTransactionRequest. */
            interface IPrepareTransactionRequest {

                /** PrepareTransactionRequest transactionId */
                transactionId?: (string|null);

                /** PrepareTransactionRequest senderCommitmentProof */
                senderCommitmentProof?: (Uint8Array|null);
            }

            /** Represents a PrepareTransactionRequest. */
            class PrepareTransactionRequest implements IPrepareTransactionRequest {

                /**
                 * Constructs a new PrepareTransactionRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IPrepareTransactionRequest);

                /** PrepareTransactionRequest transactionId. */
                public transactionId: string;

                /** PrepareTransactionRequest senderCommitmentProof. */
                public senderCommitmentProof: Uint8Array;

                /**
                 * Creates a new PrepareTransactionRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PrepareTransactionRequest instance
                 */
                public static create(properties?: juicetokens.token.transaction.IPrepareTransactionRequest): juicetokens.token.transaction.PrepareTransactionRequest;

                /**
                 * Encodes the specified PrepareTransactionRequest message. Does not implicitly {@link juicetokens.token.transaction.PrepareTransactionRequest.verify|verify} messages.
                 * @param message PrepareTransactionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IPrepareTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PrepareTransactionRequest message, length delimited. Does not implicitly {@link juicetokens.token.transaction.PrepareTransactionRequest.verify|verify} messages.
                 * @param message PrepareTransactionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IPrepareTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PrepareTransactionRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PrepareTransactionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.PrepareTransactionRequest;

                /**
                 * Decodes a PrepareTransactionRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PrepareTransactionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.PrepareTransactionRequest;

                /**
                 * Verifies a PrepareTransactionRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PrepareTransactionRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PrepareTransactionRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.PrepareTransactionRequest;

                /**
                 * Creates a plain object from a PrepareTransactionRequest message. Also converts values to other types if specified.
                 * @param message PrepareTransactionRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.PrepareTransactionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PrepareTransactionRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PrepareTransactionRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PrepareTransactionResponse. */
            interface IPrepareTransactionResponse {

                /** PrepareTransactionResponse transaction */
                transaction?: (juicetokens.token.transaction.ITransaction|null);
            }

            /** Represents a PrepareTransactionResponse. */
            class PrepareTransactionResponse implements IPrepareTransactionResponse {

                /**
                 * Constructs a new PrepareTransactionResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IPrepareTransactionResponse);

                /** PrepareTransactionResponse transaction. */
                public transaction?: (juicetokens.token.transaction.ITransaction|null);

                /**
                 * Creates a new PrepareTransactionResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PrepareTransactionResponse instance
                 */
                public static create(properties?: juicetokens.token.transaction.IPrepareTransactionResponse): juicetokens.token.transaction.PrepareTransactionResponse;

                /**
                 * Encodes the specified PrepareTransactionResponse message. Does not implicitly {@link juicetokens.token.transaction.PrepareTransactionResponse.verify|verify} messages.
                 * @param message PrepareTransactionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IPrepareTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PrepareTransactionResponse message, length delimited. Does not implicitly {@link juicetokens.token.transaction.PrepareTransactionResponse.verify|verify} messages.
                 * @param message PrepareTransactionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IPrepareTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PrepareTransactionResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PrepareTransactionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.PrepareTransactionResponse;

                /**
                 * Decodes a PrepareTransactionResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PrepareTransactionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.PrepareTransactionResponse;

                /**
                 * Verifies a PrepareTransactionResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PrepareTransactionResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PrepareTransactionResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.PrepareTransactionResponse;

                /**
                 * Creates a plain object from a PrepareTransactionResponse message. Also converts values to other types if specified.
                 * @param message PrepareTransactionResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.PrepareTransactionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PrepareTransactionResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PrepareTransactionResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CommitTransactionRequest. */
            interface ICommitTransactionRequest {

                /** CommitTransactionRequest transactionId */
                transactionId?: (string|null);

                /** CommitTransactionRequest receiverCommitmentProof */
                receiverCommitmentProof?: (Uint8Array|null);
            }

            /** Represents a CommitTransactionRequest. */
            class CommitTransactionRequest implements ICommitTransactionRequest {

                /**
                 * Constructs a new CommitTransactionRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.ICommitTransactionRequest);

                /** CommitTransactionRequest transactionId. */
                public transactionId: string;

                /** CommitTransactionRequest receiverCommitmentProof. */
                public receiverCommitmentProof: Uint8Array;

                /**
                 * Creates a new CommitTransactionRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CommitTransactionRequest instance
                 */
                public static create(properties?: juicetokens.token.transaction.ICommitTransactionRequest): juicetokens.token.transaction.CommitTransactionRequest;

                /**
                 * Encodes the specified CommitTransactionRequest message. Does not implicitly {@link juicetokens.token.transaction.CommitTransactionRequest.verify|verify} messages.
                 * @param message CommitTransactionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.ICommitTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CommitTransactionRequest message, length delimited. Does not implicitly {@link juicetokens.token.transaction.CommitTransactionRequest.verify|verify} messages.
                 * @param message CommitTransactionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.ICommitTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommitTransactionRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CommitTransactionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.CommitTransactionRequest;

                /**
                 * Decodes a CommitTransactionRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CommitTransactionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.CommitTransactionRequest;

                /**
                 * Verifies a CommitTransactionRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CommitTransactionRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CommitTransactionRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.CommitTransactionRequest;

                /**
                 * Creates a plain object from a CommitTransactionRequest message. Also converts values to other types if specified.
                 * @param message CommitTransactionRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.CommitTransactionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CommitTransactionRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CommitTransactionRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CommitTransactionResponse. */
            interface ICommitTransactionResponse {

                /** CommitTransactionResponse transaction */
                transaction?: (juicetokens.token.transaction.ITransaction|null);
            }

            /** Represents a CommitTransactionResponse. */
            class CommitTransactionResponse implements ICommitTransactionResponse {

                /**
                 * Constructs a new CommitTransactionResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.ICommitTransactionResponse);

                /** CommitTransactionResponse transaction. */
                public transaction?: (juicetokens.token.transaction.ITransaction|null);

                /**
                 * Creates a new CommitTransactionResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CommitTransactionResponse instance
                 */
                public static create(properties?: juicetokens.token.transaction.ICommitTransactionResponse): juicetokens.token.transaction.CommitTransactionResponse;

                /**
                 * Encodes the specified CommitTransactionResponse message. Does not implicitly {@link juicetokens.token.transaction.CommitTransactionResponse.verify|verify} messages.
                 * @param message CommitTransactionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.ICommitTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CommitTransactionResponse message, length delimited. Does not implicitly {@link juicetokens.token.transaction.CommitTransactionResponse.verify|verify} messages.
                 * @param message CommitTransactionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.ICommitTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommitTransactionResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CommitTransactionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.CommitTransactionResponse;

                /**
                 * Decodes a CommitTransactionResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CommitTransactionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.CommitTransactionResponse;

                /**
                 * Verifies a CommitTransactionResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CommitTransactionResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CommitTransactionResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.CommitTransactionResponse;

                /**
                 * Creates a plain object from a CommitTransactionResponse message. Also converts values to other types if specified.
                 * @param message CommitTransactionResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.CommitTransactionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CommitTransactionResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CommitTransactionResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AbortTransactionRequest. */
            interface IAbortTransactionRequest {

                /** AbortTransactionRequest transactionId */
                transactionId?: (string|null);

                /** AbortTransactionRequest reason */
                reason?: (string|null);
            }

            /** Represents an AbortTransactionRequest. */
            class AbortTransactionRequest implements IAbortTransactionRequest {

                /**
                 * Constructs a new AbortTransactionRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IAbortTransactionRequest);

                /** AbortTransactionRequest transactionId. */
                public transactionId: string;

                /** AbortTransactionRequest reason. */
                public reason: string;

                /**
                 * Creates a new AbortTransactionRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AbortTransactionRequest instance
                 */
                public static create(properties?: juicetokens.token.transaction.IAbortTransactionRequest): juicetokens.token.transaction.AbortTransactionRequest;

                /**
                 * Encodes the specified AbortTransactionRequest message. Does not implicitly {@link juicetokens.token.transaction.AbortTransactionRequest.verify|verify} messages.
                 * @param message AbortTransactionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IAbortTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AbortTransactionRequest message, length delimited. Does not implicitly {@link juicetokens.token.transaction.AbortTransactionRequest.verify|verify} messages.
                 * @param message AbortTransactionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IAbortTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AbortTransactionRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AbortTransactionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.AbortTransactionRequest;

                /**
                 * Decodes an AbortTransactionRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AbortTransactionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.AbortTransactionRequest;

                /**
                 * Verifies an AbortTransactionRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AbortTransactionRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AbortTransactionRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.AbortTransactionRequest;

                /**
                 * Creates a plain object from an AbortTransactionRequest message. Also converts values to other types if specified.
                 * @param message AbortTransactionRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.AbortTransactionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AbortTransactionRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AbortTransactionRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AbortTransactionResponse. */
            interface IAbortTransactionResponse {

                /** AbortTransactionResponse transaction */
                transaction?: (juicetokens.token.transaction.ITransaction|null);
            }

            /** Represents an AbortTransactionResponse. */
            class AbortTransactionResponse implements IAbortTransactionResponse {

                /**
                 * Constructs a new AbortTransactionResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IAbortTransactionResponse);

                /** AbortTransactionResponse transaction. */
                public transaction?: (juicetokens.token.transaction.ITransaction|null);

                /**
                 * Creates a new AbortTransactionResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AbortTransactionResponse instance
                 */
                public static create(properties?: juicetokens.token.transaction.IAbortTransactionResponse): juicetokens.token.transaction.AbortTransactionResponse;

                /**
                 * Encodes the specified AbortTransactionResponse message. Does not implicitly {@link juicetokens.token.transaction.AbortTransactionResponse.verify|verify} messages.
                 * @param message AbortTransactionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IAbortTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AbortTransactionResponse message, length delimited. Does not implicitly {@link juicetokens.token.transaction.AbortTransactionResponse.verify|verify} messages.
                 * @param message AbortTransactionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IAbortTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AbortTransactionResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AbortTransactionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.AbortTransactionResponse;

                /**
                 * Decodes an AbortTransactionResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AbortTransactionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.AbortTransactionResponse;

                /**
                 * Verifies an AbortTransactionResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AbortTransactionResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AbortTransactionResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.AbortTransactionResponse;

                /**
                 * Creates a plain object from an AbortTransactionResponse message. Also converts values to other types if specified.
                 * @param message AbortTransactionResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.AbortTransactionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AbortTransactionResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AbortTransactionResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetTransactionRequest. */
            interface IGetTransactionRequest {

                /** GetTransactionRequest transactionId */
                transactionId?: (string|null);
            }

            /** Represents a GetTransactionRequest. */
            class GetTransactionRequest implements IGetTransactionRequest {

                /**
                 * Constructs a new GetTransactionRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IGetTransactionRequest);

                /** GetTransactionRequest transactionId. */
                public transactionId: string;

                /**
                 * Creates a new GetTransactionRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetTransactionRequest instance
                 */
                public static create(properties?: juicetokens.token.transaction.IGetTransactionRequest): juicetokens.token.transaction.GetTransactionRequest;

                /**
                 * Encodes the specified GetTransactionRequest message. Does not implicitly {@link juicetokens.token.transaction.GetTransactionRequest.verify|verify} messages.
                 * @param message GetTransactionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IGetTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetTransactionRequest message, length delimited. Does not implicitly {@link juicetokens.token.transaction.GetTransactionRequest.verify|verify} messages.
                 * @param message GetTransactionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IGetTransactionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTransactionRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetTransactionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.GetTransactionRequest;

                /**
                 * Decodes a GetTransactionRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetTransactionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.GetTransactionRequest;

                /**
                 * Verifies a GetTransactionRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetTransactionRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetTransactionRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.GetTransactionRequest;

                /**
                 * Creates a plain object from a GetTransactionRequest message. Also converts values to other types if specified.
                 * @param message GetTransactionRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.GetTransactionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetTransactionRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetTransactionRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetTransactionResponse. */
            interface IGetTransactionResponse {

                /** GetTransactionResponse transaction */
                transaction?: (juicetokens.token.transaction.ITransaction|null);
            }

            /** Represents a GetTransactionResponse. */
            class GetTransactionResponse implements IGetTransactionResponse {

                /**
                 * Constructs a new GetTransactionResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IGetTransactionResponse);

                /** GetTransactionResponse transaction. */
                public transaction?: (juicetokens.token.transaction.ITransaction|null);

                /**
                 * Creates a new GetTransactionResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetTransactionResponse instance
                 */
                public static create(properties?: juicetokens.token.transaction.IGetTransactionResponse): juicetokens.token.transaction.GetTransactionResponse;

                /**
                 * Encodes the specified GetTransactionResponse message. Does not implicitly {@link juicetokens.token.transaction.GetTransactionResponse.verify|verify} messages.
                 * @param message GetTransactionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IGetTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetTransactionResponse message, length delimited. Does not implicitly {@link juicetokens.token.transaction.GetTransactionResponse.verify|verify} messages.
                 * @param message GetTransactionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IGetTransactionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTransactionResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetTransactionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.GetTransactionResponse;

                /**
                 * Decodes a GetTransactionResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetTransactionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.GetTransactionResponse;

                /**
                 * Verifies a GetTransactionResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetTransactionResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetTransactionResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.GetTransactionResponse;

                /**
                 * Creates a plain object from a GetTransactionResponse message. Also converts values to other types if specified.
                 * @param message GetTransactionResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.GetTransactionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetTransactionResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetTransactionResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StreamTransactionUpdatesRequest. */
            interface IStreamTransactionUpdatesRequest {

                /** StreamTransactionUpdatesRequest transactionId */
                transactionId?: (string|null);
            }

            /** Represents a StreamTransactionUpdatesRequest. */
            class StreamTransactionUpdatesRequest implements IStreamTransactionUpdatesRequest {

                /**
                 * Constructs a new StreamTransactionUpdatesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.token.transaction.IStreamTransactionUpdatesRequest);

                /** StreamTransactionUpdatesRequest transactionId. */
                public transactionId: string;

                /**
                 * Creates a new StreamTransactionUpdatesRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StreamTransactionUpdatesRequest instance
                 */
                public static create(properties?: juicetokens.token.transaction.IStreamTransactionUpdatesRequest): juicetokens.token.transaction.StreamTransactionUpdatesRequest;

                /**
                 * Encodes the specified StreamTransactionUpdatesRequest message. Does not implicitly {@link juicetokens.token.transaction.StreamTransactionUpdatesRequest.verify|verify} messages.
                 * @param message StreamTransactionUpdatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.token.transaction.IStreamTransactionUpdatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StreamTransactionUpdatesRequest message, length delimited. Does not implicitly {@link juicetokens.token.transaction.StreamTransactionUpdatesRequest.verify|verify} messages.
                 * @param message StreamTransactionUpdatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.token.transaction.IStreamTransactionUpdatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StreamTransactionUpdatesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StreamTransactionUpdatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.token.transaction.StreamTransactionUpdatesRequest;

                /**
                 * Decodes a StreamTransactionUpdatesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StreamTransactionUpdatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.token.transaction.StreamTransactionUpdatesRequest;

                /**
                 * Verifies a StreamTransactionUpdatesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StreamTransactionUpdatesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StreamTransactionUpdatesRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.token.transaction.StreamTransactionUpdatesRequest;

                /**
                 * Creates a plain object from a StreamTransactionUpdatesRequest message. Also converts values to other types if specified.
                 * @param message StreamTransactionUpdatesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.token.transaction.StreamTransactionUpdatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StreamTransactionUpdatesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StreamTransactionUpdatesRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }
    }

    /** Namespace foundation. */
    namespace foundation {

        /** Namespace hardware. */
        namespace hardware {

            /** Properties of a SecureKeyStorage. */
            interface ISecureKeyStorage {

                /** SecureKeyStorage keyId */
                keyId?: (string|null);

                /** SecureKeyStorage publicKey */
                publicKey?: (Uint8Array|null);

                /** SecureKeyStorage storageLocation */
                storageLocation?: (string|null);

                /** SecureKeyStorage exportable */
                exportable?: (boolean|null);
            }

            /** Represents a SecureKeyStorage. */
            class SecureKeyStorage implements ISecureKeyStorage {

                /**
                 * Constructs a new SecureKeyStorage.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.ISecureKeyStorage);

                /** SecureKeyStorage keyId. */
                public keyId: string;

                /** SecureKeyStorage publicKey. */
                public publicKey: Uint8Array;

                /** SecureKeyStorage storageLocation. */
                public storageLocation: string;

                /** SecureKeyStorage exportable. */
                public exportable: boolean;

                /**
                 * Creates a new SecureKeyStorage instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SecureKeyStorage instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.ISecureKeyStorage): juicetokens.foundation.hardware.SecureKeyStorage;

                /**
                 * Encodes the specified SecureKeyStorage message. Does not implicitly {@link juicetokens.foundation.hardware.SecureKeyStorage.verify|verify} messages.
                 * @param message SecureKeyStorage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.ISecureKeyStorage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SecureKeyStorage message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.SecureKeyStorage.verify|verify} messages.
                 * @param message SecureKeyStorage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.ISecureKeyStorage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SecureKeyStorage message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SecureKeyStorage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.SecureKeyStorage;

                /**
                 * Decodes a SecureKeyStorage message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SecureKeyStorage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.SecureKeyStorage;

                /**
                 * Verifies a SecureKeyStorage message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SecureKeyStorage message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SecureKeyStorage
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.SecureKeyStorage;

                /**
                 * Creates a plain object from a SecureKeyStorage message. Also converts values to other types if specified.
                 * @param message SecureKeyStorage
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.SecureKeyStorage, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SecureKeyStorage to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SecureKeyStorage
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CryptographicOperationRequest. */
            interface ICryptographicOperationRequest {

                /** CryptographicOperationRequest keyId */
                keyId?: (string|null);

                /** CryptographicOperationRequest operationType */
                operationType?: (juicetokens.foundation.hardware.CryptographicOperationRequest.OperationType|null);

                /** CryptographicOperationRequest data */
                data?: (Uint8Array|null);

                /** CryptographicOperationRequest algorithm */
                algorithm?: (string|null);
            }

            /** Represents a CryptographicOperationRequest. */
            class CryptographicOperationRequest implements ICryptographicOperationRequest {

                /**
                 * Constructs a new CryptographicOperationRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.ICryptographicOperationRequest);

                /** CryptographicOperationRequest keyId. */
                public keyId: string;

                /** CryptographicOperationRequest operationType. */
                public operationType: juicetokens.foundation.hardware.CryptographicOperationRequest.OperationType;

                /** CryptographicOperationRequest data. */
                public data: Uint8Array;

                /** CryptographicOperationRequest algorithm. */
                public algorithm: string;

                /**
                 * Creates a new CryptographicOperationRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CryptographicOperationRequest instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.ICryptographicOperationRequest): juicetokens.foundation.hardware.CryptographicOperationRequest;

                /**
                 * Encodes the specified CryptographicOperationRequest message. Does not implicitly {@link juicetokens.foundation.hardware.CryptographicOperationRequest.verify|verify} messages.
                 * @param message CryptographicOperationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.ICryptographicOperationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CryptographicOperationRequest message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.CryptographicOperationRequest.verify|verify} messages.
                 * @param message CryptographicOperationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.ICryptographicOperationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CryptographicOperationRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CryptographicOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.CryptographicOperationRequest;

                /**
                 * Decodes a CryptographicOperationRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CryptographicOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.CryptographicOperationRequest;

                /**
                 * Verifies a CryptographicOperationRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CryptographicOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CryptographicOperationRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.CryptographicOperationRequest;

                /**
                 * Creates a plain object from a CryptographicOperationRequest message. Also converts values to other types if specified.
                 * @param message CryptographicOperationRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.CryptographicOperationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CryptographicOperationRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CryptographicOperationRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace CryptographicOperationRequest {

                /** OperationType enum. */
                enum OperationType {
                    SIGN = 0,
                    VERIFY = 1,
                    ENCRYPT = 2,
                    DECRYPT = 3
                }
            }

            /** Properties of a CryptographicOperationResponse. */
            interface ICryptographicOperationResponse {

                /** CryptographicOperationResponse success */
                success?: (boolean|null);

                /** CryptographicOperationResponse result */
                result?: (Uint8Array|null);

                /** CryptographicOperationResponse errorMessage */
                errorMessage?: (string|null);
            }

            /** Represents a CryptographicOperationResponse. */
            class CryptographicOperationResponse implements ICryptographicOperationResponse {

                /**
                 * Constructs a new CryptographicOperationResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.ICryptographicOperationResponse);

                /** CryptographicOperationResponse success. */
                public success: boolean;

                /** CryptographicOperationResponse result. */
                public result: Uint8Array;

                /** CryptographicOperationResponse errorMessage. */
                public errorMessage: string;

                /**
                 * Creates a new CryptographicOperationResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CryptographicOperationResponse instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.ICryptographicOperationResponse): juicetokens.foundation.hardware.CryptographicOperationResponse;

                /**
                 * Encodes the specified CryptographicOperationResponse message. Does not implicitly {@link juicetokens.foundation.hardware.CryptographicOperationResponse.verify|verify} messages.
                 * @param message CryptographicOperationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.ICryptographicOperationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CryptographicOperationResponse message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.CryptographicOperationResponse.verify|verify} messages.
                 * @param message CryptographicOperationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.ICryptographicOperationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CryptographicOperationResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CryptographicOperationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.CryptographicOperationResponse;

                /**
                 * Decodes a CryptographicOperationResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CryptographicOperationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.CryptographicOperationResponse;

                /**
                 * Verifies a CryptographicOperationResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CryptographicOperationResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CryptographicOperationResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.CryptographicOperationResponse;

                /**
                 * Creates a plain object from a CryptographicOperationResponse message. Also converts values to other types if specified.
                 * @param message CryptographicOperationResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.CryptographicOperationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CryptographicOperationResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CryptographicOperationResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TEEAttestationRequest. */
            interface ITEEAttestationRequest {

                /** TEEAttestationRequest teeType */
                teeType?: (string|null);

                /** TEEAttestationRequest challenge */
                challenge?: (Uint8Array|null);

                /** TEEAttestationRequest requiredSecurityLevels */
                requiredSecurityLevels?: (string[]|null);

                /** TEEAttestationRequest verifyId */
                verifyId?: (boolean|null);
            }

            /** Represents a TEEAttestationRequest. */
            class TEEAttestationRequest implements ITEEAttestationRequest {

                /**
                 * Constructs a new TEEAttestationRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.ITEEAttestationRequest);

                /** TEEAttestationRequest teeType. */
                public teeType: string;

                /** TEEAttestationRequest challenge. */
                public challenge: Uint8Array;

                /** TEEAttestationRequest requiredSecurityLevels. */
                public requiredSecurityLevels: string[];

                /** TEEAttestationRequest verifyId. */
                public verifyId: boolean;

                /**
                 * Creates a new TEEAttestationRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TEEAttestationRequest instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.ITEEAttestationRequest): juicetokens.foundation.hardware.TEEAttestationRequest;

                /**
                 * Encodes the specified TEEAttestationRequest message. Does not implicitly {@link juicetokens.foundation.hardware.TEEAttestationRequest.verify|verify} messages.
                 * @param message TEEAttestationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.ITEEAttestationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TEEAttestationRequest message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.TEEAttestationRequest.verify|verify} messages.
                 * @param message TEEAttestationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.ITEEAttestationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TEEAttestationRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TEEAttestationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.TEEAttestationRequest;

                /**
                 * Decodes a TEEAttestationRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TEEAttestationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.TEEAttestationRequest;

                /**
                 * Verifies a TEEAttestationRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TEEAttestationRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TEEAttestationRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.TEEAttestationRequest;

                /**
                 * Creates a plain object from a TEEAttestationRequest message. Also converts values to other types if specified.
                 * @param message TEEAttestationRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.TEEAttestationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TEEAttestationRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TEEAttestationRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TEEAttestationResponse. */
            interface ITEEAttestationResponse {

                /** TEEAttestationResponse success */
                success?: (boolean|null);

                /** TEEAttestationResponse attestationEvidence */
                attestationEvidence?: (Uint8Array|null);

                /** TEEAttestationResponse errorMessage */
                errorMessage?: (string|null);

                /** TEEAttestationResponse teeIdentity */
                teeIdentity?: (Uint8Array|null);

                /** TEEAttestationResponse securityProperties */
                securityProperties?: ({ [k: string]: string }|null);

                /** TEEAttestationResponse timestampMs */
                timestampMs?: (number|Long|null);
            }

            /** Represents a TEEAttestationResponse. */
            class TEEAttestationResponse implements ITEEAttestationResponse {

                /**
                 * Constructs a new TEEAttestationResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.ITEEAttestationResponse);

                /** TEEAttestationResponse success. */
                public success: boolean;

                /** TEEAttestationResponse attestationEvidence. */
                public attestationEvidence: Uint8Array;

                /** TEEAttestationResponse errorMessage. */
                public errorMessage: string;

                /** TEEAttestationResponse teeIdentity. */
                public teeIdentity: Uint8Array;

                /** TEEAttestationResponse securityProperties. */
                public securityProperties: { [k: string]: string };

                /** TEEAttestationResponse timestampMs. */
                public timestampMs: (number|Long);

                /**
                 * Creates a new TEEAttestationResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TEEAttestationResponse instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.ITEEAttestationResponse): juicetokens.foundation.hardware.TEEAttestationResponse;

                /**
                 * Encodes the specified TEEAttestationResponse message. Does not implicitly {@link juicetokens.foundation.hardware.TEEAttestationResponse.verify|verify} messages.
                 * @param message TEEAttestationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.ITEEAttestationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TEEAttestationResponse message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.TEEAttestationResponse.verify|verify} messages.
                 * @param message TEEAttestationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.ITEEAttestationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TEEAttestationResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TEEAttestationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.TEEAttestationResponse;

                /**
                 * Decodes a TEEAttestationResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TEEAttestationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.TEEAttestationResponse;

                /**
                 * Verifies a TEEAttestationResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TEEAttestationResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TEEAttestationResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.TEEAttestationResponse;

                /**
                 * Creates a plain object from a TEEAttestationResponse message. Also converts values to other types if specified.
                 * @param message TEEAttestationResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.TEEAttestationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TEEAttestationResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TEEAttestationResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DeviceCapabilities. */
            interface IDeviceCapabilities {

                /** DeviceCapabilities availableInterfaces */
                availableInterfaces?: (juicetokens.foundation.hardware.CommunicationInterface[]|null);

                /** DeviceCapabilities storage */
                storage?: (juicetokens.foundation.hardware.IStorageCapability|null);

                /** DeviceCapabilities crypto */
                crypto?: (juicetokens.foundation.hardware.ICryptographicSupport|null);

                /** DeviceCapabilities hasCamera */
                hasCamera?: (boolean|null);

                /** DeviceCapabilities hasTee */
                hasTee?: (boolean|null);

                /** DeviceCapabilities hasSecureElement */
                hasSecureElement?: (boolean|null);

                /** DeviceCapabilities displays */
                displays?: (juicetokens.foundation.hardware.IDisplayCapability[]|null);

                /** DeviceCapabilities power */
                power?: (juicetokens.foundation.hardware.IPowerInformation|null);

                /** DeviceCapabilities processor */
                processor?: (juicetokens.foundation.hardware.IProcessorInformation|null);

                /** DeviceCapabilities connectivity */
                connectivity?: (juicetokens.foundation.hardware.IConnectivityStatus|null);
            }

            /** Represents a DeviceCapabilities. */
            class DeviceCapabilities implements IDeviceCapabilities {

                /**
                 * Constructs a new DeviceCapabilities.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.IDeviceCapabilities);

                /** DeviceCapabilities availableInterfaces. */
                public availableInterfaces: juicetokens.foundation.hardware.CommunicationInterface[];

                /** DeviceCapabilities storage. */
                public storage?: (juicetokens.foundation.hardware.IStorageCapability|null);

                /** DeviceCapabilities crypto. */
                public crypto?: (juicetokens.foundation.hardware.ICryptographicSupport|null);

                /** DeviceCapabilities hasCamera. */
                public hasCamera: boolean;

                /** DeviceCapabilities hasTee. */
                public hasTee: boolean;

                /** DeviceCapabilities hasSecureElement. */
                public hasSecureElement: boolean;

                /** DeviceCapabilities displays. */
                public displays: juicetokens.foundation.hardware.IDisplayCapability[];

                /** DeviceCapabilities power. */
                public power?: (juicetokens.foundation.hardware.IPowerInformation|null);

                /** DeviceCapabilities processor. */
                public processor?: (juicetokens.foundation.hardware.IProcessorInformation|null);

                /** DeviceCapabilities connectivity. */
                public connectivity?: (juicetokens.foundation.hardware.IConnectivityStatus|null);

                /**
                 * Creates a new DeviceCapabilities instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DeviceCapabilities instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.IDeviceCapabilities): juicetokens.foundation.hardware.DeviceCapabilities;

                /**
                 * Encodes the specified DeviceCapabilities message. Does not implicitly {@link juicetokens.foundation.hardware.DeviceCapabilities.verify|verify} messages.
                 * @param message DeviceCapabilities message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.IDeviceCapabilities, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DeviceCapabilities message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.DeviceCapabilities.verify|verify} messages.
                 * @param message DeviceCapabilities message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.IDeviceCapabilities, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DeviceCapabilities message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DeviceCapabilities
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.DeviceCapabilities;

                /**
                 * Decodes a DeviceCapabilities message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DeviceCapabilities
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.DeviceCapabilities;

                /**
                 * Verifies a DeviceCapabilities message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DeviceCapabilities message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DeviceCapabilities
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.DeviceCapabilities;

                /**
                 * Creates a plain object from a DeviceCapabilities message. Also converts values to other types if specified.
                 * @param message DeviceCapabilities
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.DeviceCapabilities, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DeviceCapabilities to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DeviceCapabilities
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** CommunicationInterface enum. */
            enum CommunicationInterface {
                BLE = 0,
                NFC = 1,
                HTTPS = 2,
                WIFI_DIRECT = 3
            }

            /** Properties of a StorageCapability. */
            interface IStorageCapability {

                /** StorageCapability availableBytes */
                availableBytes?: (number|Long|null);

                /** StorageCapability persistentStorageAvailable */
                persistentStorageAvailable?: (boolean|null);

                /** StorageCapability encryptedStorageSupported */
                encryptedStorageSupported?: (boolean|null);

                /** StorageCapability totalBytes */
                totalBytes?: (number|Long|null);

                /** StorageCapability storageType */
                storageType?: (string|null);

                /** StorageCapability ioPerformanceScore */
                ioPerformanceScore?: (number|null);
            }

            /** Represents a StorageCapability. */
            class StorageCapability implements IStorageCapability {

                /**
                 * Constructs a new StorageCapability.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.IStorageCapability);

                /** StorageCapability availableBytes. */
                public availableBytes: (number|Long);

                /** StorageCapability persistentStorageAvailable. */
                public persistentStorageAvailable: boolean;

                /** StorageCapability encryptedStorageSupported. */
                public encryptedStorageSupported: boolean;

                /** StorageCapability totalBytes. */
                public totalBytes: (number|Long);

                /** StorageCapability storageType. */
                public storageType: string;

                /** StorageCapability ioPerformanceScore. */
                public ioPerformanceScore: number;

                /**
                 * Creates a new StorageCapability instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StorageCapability instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.IStorageCapability): juicetokens.foundation.hardware.StorageCapability;

                /**
                 * Encodes the specified StorageCapability message. Does not implicitly {@link juicetokens.foundation.hardware.StorageCapability.verify|verify} messages.
                 * @param message StorageCapability message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.IStorageCapability, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StorageCapability message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.StorageCapability.verify|verify} messages.
                 * @param message StorageCapability message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.IStorageCapability, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StorageCapability message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StorageCapability
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.StorageCapability;

                /**
                 * Decodes a StorageCapability message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StorageCapability
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.StorageCapability;

                /**
                 * Verifies a StorageCapability message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StorageCapability message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StorageCapability
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.StorageCapability;

                /**
                 * Creates a plain object from a StorageCapability message. Also converts values to other types if specified.
                 * @param message StorageCapability
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.StorageCapability, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StorageCapability to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StorageCapability
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CryptographicSupport. */
            interface ICryptographicSupport {

                /** CryptographicSupport hardwareAcceleration */
                hardwareAcceleration?: (boolean|null);

                /** CryptographicSupport supportedAlgorithms */
                supportedAlgorithms?: (string[]|null);

                /** CryptographicSupport secureRandomAvailable */
                secureRandomAvailable?: (boolean|null);

                /** CryptographicSupport keySizeMax */
                keySizeMax?: (number|null);

                /** CryptographicSupport supportedCurves */
                supportedCurves?: (string[]|null);

                /** CryptographicSupport multiPartyComputationSupported */
                multiPartyComputationSupported?: (boolean|null);

                /** CryptographicSupport homomorphicEncryptionSupported */
                homomorphicEncryptionSupported?: (boolean|null);
            }

            /** Represents a CryptographicSupport. */
            class CryptographicSupport implements ICryptographicSupport {

                /**
                 * Constructs a new CryptographicSupport.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.ICryptographicSupport);

                /** CryptographicSupport hardwareAcceleration. */
                public hardwareAcceleration: boolean;

                /** CryptographicSupport supportedAlgorithms. */
                public supportedAlgorithms: string[];

                /** CryptographicSupport secureRandomAvailable. */
                public secureRandomAvailable: boolean;

                /** CryptographicSupport keySizeMax. */
                public keySizeMax: number;

                /** CryptographicSupport supportedCurves. */
                public supportedCurves: string[];

                /** CryptographicSupport multiPartyComputationSupported. */
                public multiPartyComputationSupported: boolean;

                /** CryptographicSupport homomorphicEncryptionSupported. */
                public homomorphicEncryptionSupported: boolean;

                /**
                 * Creates a new CryptographicSupport instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CryptographicSupport instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.ICryptographicSupport): juicetokens.foundation.hardware.CryptographicSupport;

                /**
                 * Encodes the specified CryptographicSupport message. Does not implicitly {@link juicetokens.foundation.hardware.CryptographicSupport.verify|verify} messages.
                 * @param message CryptographicSupport message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.ICryptographicSupport, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CryptographicSupport message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.CryptographicSupport.verify|verify} messages.
                 * @param message CryptographicSupport message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.ICryptographicSupport, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CryptographicSupport message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CryptographicSupport
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.CryptographicSupport;

                /**
                 * Decodes a CryptographicSupport message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CryptographicSupport
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.CryptographicSupport;

                /**
                 * Verifies a CryptographicSupport message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CryptographicSupport message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CryptographicSupport
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.CryptographicSupport;

                /**
                 * Creates a plain object from a CryptographicSupport message. Also converts values to other types if specified.
                 * @param message CryptographicSupport
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.CryptographicSupport, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CryptographicSupport to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CryptographicSupport
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DisplayCapability. */
            interface IDisplayCapability {

                /** DisplayCapability widthPixels */
                widthPixels?: (number|null);

                /** DisplayCapability heightPixels */
                heightPixels?: (number|null);

                /** DisplayCapability refreshRateHz */
                refreshRateHz?: (number|null);

                /** DisplayCapability touchSupported */
                touchSupported?: (boolean|null);

                /** DisplayCapability colorDepthBits */
                colorDepthBits?: (number|null);

                /** DisplayCapability brightnessNits */
                brightnessNits?: (number|null);

                /** DisplayCapability displayType */
                displayType?: (string|null);
            }

            /** Represents a DisplayCapability. */
            class DisplayCapability implements IDisplayCapability {

                /**
                 * Constructs a new DisplayCapability.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.IDisplayCapability);

                /** DisplayCapability widthPixels. */
                public widthPixels: number;

                /** DisplayCapability heightPixels. */
                public heightPixels: number;

                /** DisplayCapability refreshRateHz. */
                public refreshRateHz: number;

                /** DisplayCapability touchSupported. */
                public touchSupported: boolean;

                /** DisplayCapability colorDepthBits. */
                public colorDepthBits: number;

                /** DisplayCapability brightnessNits. */
                public brightnessNits: number;

                /** DisplayCapability displayType. */
                public displayType: string;

                /**
                 * Creates a new DisplayCapability instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DisplayCapability instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.IDisplayCapability): juicetokens.foundation.hardware.DisplayCapability;

                /**
                 * Encodes the specified DisplayCapability message. Does not implicitly {@link juicetokens.foundation.hardware.DisplayCapability.verify|verify} messages.
                 * @param message DisplayCapability message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.IDisplayCapability, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DisplayCapability message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.DisplayCapability.verify|verify} messages.
                 * @param message DisplayCapability message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.IDisplayCapability, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DisplayCapability message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DisplayCapability
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.DisplayCapability;

                /**
                 * Decodes a DisplayCapability message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DisplayCapability
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.DisplayCapability;

                /**
                 * Verifies a DisplayCapability message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DisplayCapability message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DisplayCapability
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.DisplayCapability;

                /**
                 * Creates a plain object from a DisplayCapability message. Also converts values to other types if specified.
                 * @param message DisplayCapability
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.DisplayCapability, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DisplayCapability to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DisplayCapability
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PowerInformation. */
            interface IPowerInformation {

                /** PowerInformation powerSource */
                powerSource?: (juicetokens.foundation.hardware.PowerInformation.PowerSource|null);

                /** PowerInformation batteryPercentage */
                batteryPercentage?: (number|null);

                /** PowerInformation estimatedRemainingTimeMinutes */
                estimatedRemainingTimeMinutes?: (number|null);

                /** PowerInformation powerMode */
                powerMode?: (juicetokens.foundation.hardware.PowerMode|null);

                /** PowerInformation lowPowerModeEnabled */
                lowPowerModeEnabled?: (boolean|null);
            }

            /** Represents a PowerInformation. */
            class PowerInformation implements IPowerInformation {

                /**
                 * Constructs a new PowerInformation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.IPowerInformation);

                /** PowerInformation powerSource. */
                public powerSource: juicetokens.foundation.hardware.PowerInformation.PowerSource;

                /** PowerInformation batteryPercentage. */
                public batteryPercentage: number;

                /** PowerInformation estimatedRemainingTimeMinutes. */
                public estimatedRemainingTimeMinutes: number;

                /** PowerInformation powerMode. */
                public powerMode: juicetokens.foundation.hardware.PowerMode;

                /** PowerInformation lowPowerModeEnabled. */
                public lowPowerModeEnabled: boolean;

                /**
                 * Creates a new PowerInformation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PowerInformation instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.IPowerInformation): juicetokens.foundation.hardware.PowerInformation;

                /**
                 * Encodes the specified PowerInformation message. Does not implicitly {@link juicetokens.foundation.hardware.PowerInformation.verify|verify} messages.
                 * @param message PowerInformation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.IPowerInformation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PowerInformation message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.PowerInformation.verify|verify} messages.
                 * @param message PowerInformation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.IPowerInformation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PowerInformation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PowerInformation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.PowerInformation;

                /**
                 * Decodes a PowerInformation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PowerInformation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.PowerInformation;

                /**
                 * Verifies a PowerInformation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PowerInformation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PowerInformation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.PowerInformation;

                /**
                 * Creates a plain object from a PowerInformation message. Also converts values to other types if specified.
                 * @param message PowerInformation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.PowerInformation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PowerInformation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PowerInformation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace PowerInformation {

                /** PowerSource enum. */
                enum PowerSource {
                    BATTERY = 0,
                    AC = 1,
                    USB = 2,
                    WIRELESS = 3,
                    UNKNOWN = 4
                }
            }

            /** PowerMode enum. */
            enum PowerMode {
                NORMAL = 0,
                LOW_POWER = 1,
                PERFORMANCE = 2,
                BALANCED = 3
            }

            /** Properties of a ProcessorInformation. */
            interface IProcessorInformation {

                /** ProcessorInformation coreCount */
                coreCount?: (number|null);

                /** ProcessorInformation architecture */
                architecture?: (string|null);

                /** ProcessorInformation performanceScore */
                performanceScore?: (number|null);

                /** ProcessorInformation availableMemoryMb */
                availableMemoryMb?: (number|null);

                /** ProcessorInformation totalMemoryMb */
                totalMemoryMb?: (number|null);
            }

            /** Represents a ProcessorInformation. */
            class ProcessorInformation implements IProcessorInformation {

                /**
                 * Constructs a new ProcessorInformation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.IProcessorInformation);

                /** ProcessorInformation coreCount. */
                public coreCount: number;

                /** ProcessorInformation architecture. */
                public architecture: string;

                /** ProcessorInformation performanceScore. */
                public performanceScore: number;

                /** ProcessorInformation availableMemoryMb. */
                public availableMemoryMb: number;

                /** ProcessorInformation totalMemoryMb. */
                public totalMemoryMb: number;

                /**
                 * Creates a new ProcessorInformation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ProcessorInformation instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.IProcessorInformation): juicetokens.foundation.hardware.ProcessorInformation;

                /**
                 * Encodes the specified ProcessorInformation message. Does not implicitly {@link juicetokens.foundation.hardware.ProcessorInformation.verify|verify} messages.
                 * @param message ProcessorInformation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.IProcessorInformation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ProcessorInformation message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.ProcessorInformation.verify|verify} messages.
                 * @param message ProcessorInformation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.IProcessorInformation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ProcessorInformation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ProcessorInformation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.ProcessorInformation;

                /**
                 * Decodes a ProcessorInformation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ProcessorInformation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.ProcessorInformation;

                /**
                 * Verifies a ProcessorInformation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ProcessorInformation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ProcessorInformation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.ProcessorInformation;

                /**
                 * Creates a plain object from a ProcessorInformation message. Also converts values to other types if specified.
                 * @param message ProcessorInformation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.ProcessorInformation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ProcessorInformation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ProcessorInformation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ConnectivityStatus. */
            interface IConnectivityStatus {

                /** ConnectivityStatus primaryConnection */
                primaryConnection?: (juicetokens.foundation.hardware.ConnectivityStatus.ConnectionType|null);

                /** ConnectivityStatus signalStrength */
                signalStrength?: (number|null);

                /** ConnectivityStatus vpnActive */
                vpnActive?: (boolean|null);

                /** ConnectivityStatus bandwidthKbps */
                bandwidthKbps?: (number|null);

                /** ConnectivityStatus latencyMs */
                latencyMs?: (number|null);
            }

            /** Represents a ConnectivityStatus. */
            class ConnectivityStatus implements IConnectivityStatus {

                /**
                 * Constructs a new ConnectivityStatus.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.IConnectivityStatus);

                /** ConnectivityStatus primaryConnection. */
                public primaryConnection: juicetokens.foundation.hardware.ConnectivityStatus.ConnectionType;

                /** ConnectivityStatus signalStrength. */
                public signalStrength: number;

                /** ConnectivityStatus vpnActive. */
                public vpnActive: boolean;

                /** ConnectivityStatus bandwidthKbps. */
                public bandwidthKbps: number;

                /** ConnectivityStatus latencyMs. */
                public latencyMs: number;

                /**
                 * Creates a new ConnectivityStatus instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ConnectivityStatus instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.IConnectivityStatus): juicetokens.foundation.hardware.ConnectivityStatus;

                /**
                 * Encodes the specified ConnectivityStatus message. Does not implicitly {@link juicetokens.foundation.hardware.ConnectivityStatus.verify|verify} messages.
                 * @param message ConnectivityStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.IConnectivityStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ConnectivityStatus message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.ConnectivityStatus.verify|verify} messages.
                 * @param message ConnectivityStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.IConnectivityStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ConnectivityStatus message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ConnectivityStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.ConnectivityStatus;

                /**
                 * Decodes a ConnectivityStatus message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ConnectivityStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.ConnectivityStatus;

                /**
                 * Verifies a ConnectivityStatus message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ConnectivityStatus message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ConnectivityStatus
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.ConnectivityStatus;

                /**
                 * Creates a plain object from a ConnectivityStatus message. Also converts values to other types if specified.
                 * @param message ConnectivityStatus
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.ConnectivityStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ConnectivityStatus to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ConnectivityStatus
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace ConnectivityStatus {

                /** ConnectionType enum. */
                enum ConnectionType {
                    NONE = 0,
                    WIFI = 1,
                    CELLULAR = 2,
                    ETHERNET = 3,
                    BLUETOOTH = 4
                }
            }

            /** Properties of a TimeSource. */
            interface ITimeSource {

                /** TimeSource sourceType */
                sourceType?: (juicetokens.foundation.hardware.TimeSource.SourceType|null);

                /** TimeSource timestampMs */
                timestampMs?: (number|Long|null);

                /** TimeSource confidenceScore */
                confidenceScore?: (number|null);
            }

            /** Represents a TimeSource. */
            class TimeSource implements ITimeSource {

                /**
                 * Constructs a new TimeSource.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.ITimeSource);

                /** TimeSource sourceType. */
                public sourceType: juicetokens.foundation.hardware.TimeSource.SourceType;

                /** TimeSource timestampMs. */
                public timestampMs: (number|Long);

                /** TimeSource confidenceScore. */
                public confidenceScore: number;

                /**
                 * Creates a new TimeSource instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TimeSource instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.ITimeSource): juicetokens.foundation.hardware.TimeSource;

                /**
                 * Encodes the specified TimeSource message. Does not implicitly {@link juicetokens.foundation.hardware.TimeSource.verify|verify} messages.
                 * @param message TimeSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.ITimeSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TimeSource message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.TimeSource.verify|verify} messages.
                 * @param message TimeSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.ITimeSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TimeSource message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TimeSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.TimeSource;

                /**
                 * Decodes a TimeSource message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TimeSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.TimeSource;

                /**
                 * Verifies a TimeSource message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TimeSource message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TimeSource
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.TimeSource;

                /**
                 * Creates a plain object from a TimeSource message. Also converts values to other types if specified.
                 * @param message TimeSource
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.TimeSource, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TimeSource to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TimeSource
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace TimeSource {

                /** SourceType enum. */
                enum SourceType {
                    SYSTEM = 0,
                    NTP = 1,
                    GNSS = 2,
                    RADIO = 3,
                    CONSENSUS = 4
                }
            }

            /** Properties of a TimeConsensus. */
            interface ITimeConsensus {

                /** TimeConsensus sources */
                sources?: (juicetokens.foundation.hardware.ITimeSource[]|null);

                /** TimeConsensus consensusTimestampMs */
                consensusTimestampMs?: (number|Long|null);

                /** TimeConsensus consensusConfidence */
                consensusConfidence?: (number|null);
            }

            /** Represents a TimeConsensus. */
            class TimeConsensus implements ITimeConsensus {

                /**
                 * Constructs a new TimeConsensus.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.ITimeConsensus);

                /** TimeConsensus sources. */
                public sources: juicetokens.foundation.hardware.ITimeSource[];

                /** TimeConsensus consensusTimestampMs. */
                public consensusTimestampMs: (number|Long);

                /** TimeConsensus consensusConfidence. */
                public consensusConfidence: number;

                /**
                 * Creates a new TimeConsensus instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TimeConsensus instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.ITimeConsensus): juicetokens.foundation.hardware.TimeConsensus;

                /**
                 * Encodes the specified TimeConsensus message. Does not implicitly {@link juicetokens.foundation.hardware.TimeConsensus.verify|verify} messages.
                 * @param message TimeConsensus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.ITimeConsensus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TimeConsensus message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.TimeConsensus.verify|verify} messages.
                 * @param message TimeConsensus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.ITimeConsensus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TimeConsensus message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TimeConsensus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.TimeConsensus;

                /**
                 * Decodes a TimeConsensus message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TimeConsensus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.TimeConsensus;

                /**
                 * Verifies a TimeConsensus message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TimeConsensus message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TimeConsensus
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.TimeConsensus;

                /**
                 * Creates a plain object from a TimeConsensus message. Also converts values to other types if specified.
                 * @param message TimeConsensus
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.TimeConsensus, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TimeConsensus to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TimeConsensus
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TimeStatusVerification. */
            interface ITimeStatusVerification {

                /** TimeStatusVerification transactionId */
                transactionId?: (string|null);

                /** TimeStatusVerification timestampMs */
                timestampMs?: (number|Long|null);

                /** TimeStatusVerification confidenceScore */
                confidenceScore?: (number|null);

                /** TimeStatusVerification meetsFinalizationRequirements */
                meetsFinalizationRequirements?: (boolean|null);

                /** TimeStatusVerification verificationFailureReason */
                verificationFailureReason?: (string|null);

                /** TimeStatusVerification timeStatus */
                timeStatus?: (juicetokens.foundation.hardware.TimeStatusVerification.TimeStatus|null);
            }

            /** Represents a TimeStatusVerification. */
            class TimeStatusVerification implements ITimeStatusVerification {

                /**
                 * Constructs a new TimeStatusVerification.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.ITimeStatusVerification);

                /** TimeStatusVerification transactionId. */
                public transactionId: string;

                /** TimeStatusVerification timestampMs. */
                public timestampMs: (number|Long);

                /** TimeStatusVerification confidenceScore. */
                public confidenceScore: number;

                /** TimeStatusVerification meetsFinalizationRequirements. */
                public meetsFinalizationRequirements: boolean;

                /** TimeStatusVerification verificationFailureReason. */
                public verificationFailureReason: string;

                /** TimeStatusVerification timeStatus. */
                public timeStatus: juicetokens.foundation.hardware.TimeStatusVerification.TimeStatus;

                /**
                 * Creates a new TimeStatusVerification instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TimeStatusVerification instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.ITimeStatusVerification): juicetokens.foundation.hardware.TimeStatusVerification;

                /**
                 * Encodes the specified TimeStatusVerification message. Does not implicitly {@link juicetokens.foundation.hardware.TimeStatusVerification.verify|verify} messages.
                 * @param message TimeStatusVerification message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.ITimeStatusVerification, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TimeStatusVerification message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.TimeStatusVerification.verify|verify} messages.
                 * @param message TimeStatusVerification message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.ITimeStatusVerification, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TimeStatusVerification message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TimeStatusVerification
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.TimeStatusVerification;

                /**
                 * Decodes a TimeStatusVerification message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TimeStatusVerification
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.TimeStatusVerification;

                /**
                 * Verifies a TimeStatusVerification message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TimeStatusVerification message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TimeStatusVerification
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.TimeStatusVerification;

                /**
                 * Creates a plain object from a TimeStatusVerification message. Also converts values to other types if specified.
                 * @param message TimeStatusVerification
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.TimeStatusVerification, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TimeStatusVerification to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TimeStatusVerification
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace TimeStatusVerification {

                /** TimeStatus enum. */
                enum TimeStatus {
                    VERIFIED = 0,
                    CONSENSUS = 1,
                    INADEQUATE = 2
                }
            }

            /** Properties of a SpoofingDetectionResult. */
            interface ISpoofingDetectionResult {

                /** SpoofingDetectionResult spoofingDetected */
                spoofingDetected?: (boolean|null);

                /** SpoofingDetectionResult detectionReason */
                detectionReason?: (string|null);

                /** SpoofingDetectionResult expectedTimeRangeMinMs */
                expectedTimeRangeMinMs?: (number|Long|null);

                /** SpoofingDetectionResult expectedTimeRangeMaxMs */
                expectedTimeRangeMaxMs?: (number|Long|null);

                /** SpoofingDetectionResult detectedTimeMs */
                detectedTimeMs?: (number|Long|null);
            }

            /** Represents a SpoofingDetectionResult. */
            class SpoofingDetectionResult implements ISpoofingDetectionResult {

                /**
                 * Constructs a new SpoofingDetectionResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.ISpoofingDetectionResult);

                /** SpoofingDetectionResult spoofingDetected. */
                public spoofingDetected: boolean;

                /** SpoofingDetectionResult detectionReason. */
                public detectionReason: string;

                /** SpoofingDetectionResult expectedTimeRangeMinMs. */
                public expectedTimeRangeMinMs: (number|Long);

                /** SpoofingDetectionResult expectedTimeRangeMaxMs. */
                public expectedTimeRangeMaxMs: (number|Long);

                /** SpoofingDetectionResult detectedTimeMs. */
                public detectedTimeMs: (number|Long);

                /**
                 * Creates a new SpoofingDetectionResult instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SpoofingDetectionResult instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.ISpoofingDetectionResult): juicetokens.foundation.hardware.SpoofingDetectionResult;

                /**
                 * Encodes the specified SpoofingDetectionResult message. Does not implicitly {@link juicetokens.foundation.hardware.SpoofingDetectionResult.verify|verify} messages.
                 * @param message SpoofingDetectionResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.ISpoofingDetectionResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SpoofingDetectionResult message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.SpoofingDetectionResult.verify|verify} messages.
                 * @param message SpoofingDetectionResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.ISpoofingDetectionResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SpoofingDetectionResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpoofingDetectionResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.SpoofingDetectionResult;

                /**
                 * Decodes a SpoofingDetectionResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpoofingDetectionResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.SpoofingDetectionResult;

                /**
                 * Verifies a SpoofingDetectionResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpoofingDetectionResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpoofingDetectionResult
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.SpoofingDetectionResult;

                /**
                 * Creates a plain object from a SpoofingDetectionResult message. Also converts values to other types if specified.
                 * @param message SpoofingDetectionResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.SpoofingDetectionResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpoofingDetectionResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SpoofingDetectionResult
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a KeyAttributes. */
            interface IKeyAttributes {

                /** KeyAttributes keyId */
                keyId?: (string|null);

                /** KeyAttributes keyType */
                keyType?: (string|null);

                /** KeyAttributes keySizeBits */
                keySizeBits?: (number|null);

                /** KeyAttributes algorithm */
                algorithm?: (string|null);

                /** KeyAttributes exportable */
                exportable?: (boolean|null);

                /** KeyAttributes creationTimestampMs */
                creationTimestampMs?: (number|Long|null);

                /** KeyAttributes expiryTimestampMs */
                expiryTimestampMs?: (number|Long|null);

                /** KeyAttributes usages */
                usages?: (juicetokens.foundation.hardware.KeyUsage[]|null);

                /** KeyAttributes keyMaterial */
                keyMaterial?: (Uint8Array|null);

                /** KeyAttributes storageLocation */
                storageLocation?: (string|null);
            }

            /** Represents a KeyAttributes. */
            class KeyAttributes implements IKeyAttributes {

                /**
                 * Constructs a new KeyAttributes.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.IKeyAttributes);

                /** KeyAttributes keyId. */
                public keyId: string;

                /** KeyAttributes keyType. */
                public keyType: string;

                /** KeyAttributes keySizeBits. */
                public keySizeBits: number;

                /** KeyAttributes algorithm. */
                public algorithm: string;

                /** KeyAttributes exportable. */
                public exportable: boolean;

                /** KeyAttributes creationTimestampMs. */
                public creationTimestampMs: (number|Long);

                /** KeyAttributes expiryTimestampMs. */
                public expiryTimestampMs: (number|Long);

                /** KeyAttributes usages. */
                public usages: juicetokens.foundation.hardware.KeyUsage[];

                /** KeyAttributes keyMaterial. */
                public keyMaterial: Uint8Array;

                /** KeyAttributes storageLocation. */
                public storageLocation: string;

                /**
                 * Creates a new KeyAttributes instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns KeyAttributes instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.IKeyAttributes): juicetokens.foundation.hardware.KeyAttributes;

                /**
                 * Encodes the specified KeyAttributes message. Does not implicitly {@link juicetokens.foundation.hardware.KeyAttributes.verify|verify} messages.
                 * @param message KeyAttributes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.IKeyAttributes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified KeyAttributes message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.KeyAttributes.verify|verify} messages.
                 * @param message KeyAttributes message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.IKeyAttributes, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a KeyAttributes message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns KeyAttributes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.KeyAttributes;

                /**
                 * Decodes a KeyAttributes message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns KeyAttributes
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.KeyAttributes;

                /**
                 * Verifies a KeyAttributes message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a KeyAttributes message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns KeyAttributes
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.KeyAttributes;

                /**
                 * Creates a plain object from a KeyAttributes message. Also converts values to other types if specified.
                 * @param message KeyAttributes
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.KeyAttributes, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this KeyAttributes to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for KeyAttributes
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** KeyUsage enum. */
            enum KeyUsage {
                ENCRYPT = 0,
                DECRYPT = 1,
                SIGN = 2,
                VERIFY = 3,
                DERIVE = 4,
                WRAP = 5,
                UNWRAP = 6
            }

            /** Properties of a KeyPairGenerationRequest. */
            interface IKeyPairGenerationRequest {

                /** KeyPairGenerationRequest keyType */
                keyType?: (string|null);

                /** KeyPairGenerationRequest keySizeBits */
                keySizeBits?: (number|null);

                /** KeyPairGenerationRequest algorithm */
                algorithm?: (string|null);

                /** KeyPairGenerationRequest usages */
                usages?: (juicetokens.foundation.hardware.KeyUsage[]|null);

                /** KeyPairGenerationRequest exportable */
                exportable?: (boolean|null);

                /** KeyPairGenerationRequest expiryTimestampMs */
                expiryTimestampMs?: (number|Long|null);

                /** KeyPairGenerationRequest storageLocation */
                storageLocation?: (string|null);
            }

            /** Represents a KeyPairGenerationRequest. */
            class KeyPairGenerationRequest implements IKeyPairGenerationRequest {

                /**
                 * Constructs a new KeyPairGenerationRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.IKeyPairGenerationRequest);

                /** KeyPairGenerationRequest keyType. */
                public keyType: string;

                /** KeyPairGenerationRequest keySizeBits. */
                public keySizeBits: number;

                /** KeyPairGenerationRequest algorithm. */
                public algorithm: string;

                /** KeyPairGenerationRequest usages. */
                public usages: juicetokens.foundation.hardware.KeyUsage[];

                /** KeyPairGenerationRequest exportable. */
                public exportable: boolean;

                /** KeyPairGenerationRequest expiryTimestampMs. */
                public expiryTimestampMs: (number|Long);

                /** KeyPairGenerationRequest storageLocation. */
                public storageLocation: string;

                /**
                 * Creates a new KeyPairGenerationRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns KeyPairGenerationRequest instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.IKeyPairGenerationRequest): juicetokens.foundation.hardware.KeyPairGenerationRequest;

                /**
                 * Encodes the specified KeyPairGenerationRequest message. Does not implicitly {@link juicetokens.foundation.hardware.KeyPairGenerationRequest.verify|verify} messages.
                 * @param message KeyPairGenerationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.IKeyPairGenerationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified KeyPairGenerationRequest message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.KeyPairGenerationRequest.verify|verify} messages.
                 * @param message KeyPairGenerationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.IKeyPairGenerationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a KeyPairGenerationRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns KeyPairGenerationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.KeyPairGenerationRequest;

                /**
                 * Decodes a KeyPairGenerationRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns KeyPairGenerationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.KeyPairGenerationRequest;

                /**
                 * Verifies a KeyPairGenerationRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a KeyPairGenerationRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns KeyPairGenerationRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.KeyPairGenerationRequest;

                /**
                 * Creates a plain object from a KeyPairGenerationRequest message. Also converts values to other types if specified.
                 * @param message KeyPairGenerationRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.KeyPairGenerationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this KeyPairGenerationRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for KeyPairGenerationRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a KeyPairGenerationResponse. */
            interface IKeyPairGenerationResponse {

                /** KeyPairGenerationResponse success */
                success?: (boolean|null);

                /** KeyPairGenerationResponse keyId */
                keyId?: (string|null);

                /** KeyPairGenerationResponse publicKey */
                publicKey?: (Uint8Array|null);

                /** KeyPairGenerationResponse errorMessage */
                errorMessage?: (string|null);
            }

            /** Represents a KeyPairGenerationResponse. */
            class KeyPairGenerationResponse implements IKeyPairGenerationResponse {

                /**
                 * Constructs a new KeyPairGenerationResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.IKeyPairGenerationResponse);

                /** KeyPairGenerationResponse success. */
                public success: boolean;

                /** KeyPairGenerationResponse keyId. */
                public keyId: string;

                /** KeyPairGenerationResponse publicKey. */
                public publicKey: Uint8Array;

                /** KeyPairGenerationResponse errorMessage. */
                public errorMessage: string;

                /**
                 * Creates a new KeyPairGenerationResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns KeyPairGenerationResponse instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.IKeyPairGenerationResponse): juicetokens.foundation.hardware.KeyPairGenerationResponse;

                /**
                 * Encodes the specified KeyPairGenerationResponse message. Does not implicitly {@link juicetokens.foundation.hardware.KeyPairGenerationResponse.verify|verify} messages.
                 * @param message KeyPairGenerationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.IKeyPairGenerationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified KeyPairGenerationResponse message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.KeyPairGenerationResponse.verify|verify} messages.
                 * @param message KeyPairGenerationResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.IKeyPairGenerationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a KeyPairGenerationResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns KeyPairGenerationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.KeyPairGenerationResponse;

                /**
                 * Decodes a KeyPairGenerationResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns KeyPairGenerationResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.KeyPairGenerationResponse;

                /**
                 * Verifies a KeyPairGenerationResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a KeyPairGenerationResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns KeyPairGenerationResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.KeyPairGenerationResponse;

                /**
                 * Creates a plain object from a KeyPairGenerationResponse message. Also converts values to other types if specified.
                 * @param message KeyPairGenerationResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.KeyPairGenerationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this KeyPairGenerationResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for KeyPairGenerationResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a HardwareSecureRandomRequest. */
            interface IHardwareSecureRandomRequest {

                /** HardwareSecureRandomRequest numBytes */
                numBytes?: (number|null);

                /** HardwareSecureRandomRequest source */
                source?: (string|null);
            }

            /** Represents a HardwareSecureRandomRequest. */
            class HardwareSecureRandomRequest implements IHardwareSecureRandomRequest {

                /**
                 * Constructs a new HardwareSecureRandomRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.IHardwareSecureRandomRequest);

                /** HardwareSecureRandomRequest numBytes. */
                public numBytes: number;

                /** HardwareSecureRandomRequest source. */
                public source: string;

                /**
                 * Creates a new HardwareSecureRandomRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns HardwareSecureRandomRequest instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.IHardwareSecureRandomRequest): juicetokens.foundation.hardware.HardwareSecureRandomRequest;

                /**
                 * Encodes the specified HardwareSecureRandomRequest message. Does not implicitly {@link juicetokens.foundation.hardware.HardwareSecureRandomRequest.verify|verify} messages.
                 * @param message HardwareSecureRandomRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.IHardwareSecureRandomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified HardwareSecureRandomRequest message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.HardwareSecureRandomRequest.verify|verify} messages.
                 * @param message HardwareSecureRandomRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.IHardwareSecureRandomRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a HardwareSecureRandomRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns HardwareSecureRandomRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.HardwareSecureRandomRequest;

                /**
                 * Decodes a HardwareSecureRandomRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns HardwareSecureRandomRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.HardwareSecureRandomRequest;

                /**
                 * Verifies a HardwareSecureRandomRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a HardwareSecureRandomRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns HardwareSecureRandomRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.HardwareSecureRandomRequest;

                /**
                 * Creates a plain object from a HardwareSecureRandomRequest message. Also converts values to other types if specified.
                 * @param message HardwareSecureRandomRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.HardwareSecureRandomRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this HardwareSecureRandomRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for HardwareSecureRandomRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a HardwareSecureRandomResponse. */
            interface IHardwareSecureRandomResponse {

                /** HardwareSecureRandomResponse success */
                success?: (boolean|null);

                /** HardwareSecureRandomResponse randomData */
                randomData?: (Uint8Array|null);

                /** HardwareSecureRandomResponse errorMessage */
                errorMessage?: (string|null);

                /** HardwareSecureRandomResponse sourceUsed */
                sourceUsed?: (string|null);
            }

            /** Represents a HardwareSecureRandomResponse. */
            class HardwareSecureRandomResponse implements IHardwareSecureRandomResponse {

                /**
                 * Constructs a new HardwareSecureRandomResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.IHardwareSecureRandomResponse);

                /** HardwareSecureRandomResponse success. */
                public success: boolean;

                /** HardwareSecureRandomResponse randomData. */
                public randomData: Uint8Array;

                /** HardwareSecureRandomResponse errorMessage. */
                public errorMessage: string;

                /** HardwareSecureRandomResponse sourceUsed. */
                public sourceUsed: string;

                /**
                 * Creates a new HardwareSecureRandomResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns HardwareSecureRandomResponse instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.IHardwareSecureRandomResponse): juicetokens.foundation.hardware.HardwareSecureRandomResponse;

                /**
                 * Encodes the specified HardwareSecureRandomResponse message. Does not implicitly {@link juicetokens.foundation.hardware.HardwareSecureRandomResponse.verify|verify} messages.
                 * @param message HardwareSecureRandomResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.IHardwareSecureRandomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified HardwareSecureRandomResponse message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.HardwareSecureRandomResponse.verify|verify} messages.
                 * @param message HardwareSecureRandomResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.IHardwareSecureRandomResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a HardwareSecureRandomResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns HardwareSecureRandomResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.HardwareSecureRandomResponse;

                /**
                 * Decodes a HardwareSecureRandomResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns HardwareSecureRandomResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.HardwareSecureRandomResponse;

                /**
                 * Verifies a HardwareSecureRandomResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a HardwareSecureRandomResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns HardwareSecureRandomResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.HardwareSecureRandomResponse;

                /**
                 * Creates a plain object from a HardwareSecureRandomResponse message. Also converts values to other types if specified.
                 * @param message HardwareSecureRandomResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.HardwareSecureRandomResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this HardwareSecureRandomResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for HardwareSecureRandomResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TimestampProof. */
            interface ITimestampProof {

                /** TimestampProof timestampMs */
                timestampMs?: (number|Long|null);

                /** TimestampProof signature */
                signature?: (Uint8Array|null);

                /** TimestampProof signingAuthority */
                signingAuthority?: (string|null);

                /** TimestampProof additionalProof */
                additionalProof?: (Uint8Array|null);

                /** TimestampProof verificationSources */
                verificationSources?: (string[]|null);

                /** TimestampProof confidenceScore */
                confidenceScore?: (number|null);
            }

            /** Represents a TimestampProof. */
            class TimestampProof implements ITimestampProof {

                /**
                 * Constructs a new TimestampProof.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.hardware.ITimestampProof);

                /** TimestampProof timestampMs. */
                public timestampMs: (number|Long);

                /** TimestampProof signature. */
                public signature: Uint8Array;

                /** TimestampProof signingAuthority. */
                public signingAuthority: string;

                /** TimestampProof additionalProof. */
                public additionalProof: Uint8Array;

                /** TimestampProof verificationSources. */
                public verificationSources: string[];

                /** TimestampProof confidenceScore. */
                public confidenceScore: number;

                /**
                 * Creates a new TimestampProof instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TimestampProof instance
                 */
                public static create(properties?: juicetokens.foundation.hardware.ITimestampProof): juicetokens.foundation.hardware.TimestampProof;

                /**
                 * Encodes the specified TimestampProof message. Does not implicitly {@link juicetokens.foundation.hardware.TimestampProof.verify|verify} messages.
                 * @param message TimestampProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.hardware.ITimestampProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TimestampProof message, length delimited. Does not implicitly {@link juicetokens.foundation.hardware.TimestampProof.verify|verify} messages.
                 * @param message TimestampProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.hardware.ITimestampProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TimestampProof message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TimestampProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.hardware.TimestampProof;

                /**
                 * Decodes a TimestampProof message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TimestampProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.hardware.TimestampProof;

                /**
                 * Verifies a TimestampProof message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TimestampProof message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TimestampProof
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.hardware.TimestampProof;

                /**
                 * Creates a plain object from a TimestampProof message. Also converts values to other types if specified.
                 * @param message TimestampProof
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.hardware.TimestampProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TimestampProof to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TimestampProof
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Namespace persistence. */
        namespace persistence {

            /** Properties of a TokenStore. */
            interface ITokenStore {

                /** TokenStore tokens */
                tokens?: (juicetokens.token.model.IToken[]|null);

                /** TokenStore metadata */
                metadata?: ({ [k: string]: Uint8Array }|null);

                /** TokenStore lastUpdatedMs */
                lastUpdatedMs?: (number|Long|null);
            }

            /** Represents a TokenStore. */
            class TokenStore implements ITokenStore {

                /**
                 * Constructs a new TokenStore.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.ITokenStore);

                /** TokenStore tokens. */
                public tokens: juicetokens.token.model.IToken[];

                /** TokenStore metadata. */
                public metadata: { [k: string]: Uint8Array };

                /** TokenStore lastUpdatedMs. */
                public lastUpdatedMs: (number|Long);

                /**
                 * Creates a new TokenStore instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TokenStore instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.ITokenStore): juicetokens.foundation.persistence.TokenStore;

                /**
                 * Encodes the specified TokenStore message. Does not implicitly {@link juicetokens.foundation.persistence.TokenStore.verify|verify} messages.
                 * @param message TokenStore message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.ITokenStore, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TokenStore message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.TokenStore.verify|verify} messages.
                 * @param message TokenStore message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.ITokenStore, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TokenStore message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TokenStore
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.TokenStore;

                /**
                 * Decodes a TokenStore message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TokenStore
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.TokenStore;

                /**
                 * Verifies a TokenStore message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TokenStore message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TokenStore
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.TokenStore;

                /**
                 * Creates a plain object from a TokenStore message. Also converts values to other types if specified.
                 * @param message TokenStore
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.TokenStore, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TokenStore to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TokenStore
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TokenEntry. */
            interface ITokenEntry {

                /** TokenEntry tokenId */
                tokenId?: (string|null);

                /** TokenEntry tokenData */
                tokenData?: (Uint8Array|null);

                /** TokenEntry lastModified */
                lastModified?: (number|Long|null);

                /** TokenEntry metadata */
                metadata?: ({ [k: string]: string }|null);
            }

            /** Represents a TokenEntry. */
            class TokenEntry implements ITokenEntry {

                /**
                 * Constructs a new TokenEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.ITokenEntry);

                /** TokenEntry tokenId. */
                public tokenId: string;

                /** TokenEntry tokenData. */
                public tokenData: Uint8Array;

                /** TokenEntry lastModified. */
                public lastModified: (number|Long);

                /** TokenEntry metadata. */
                public metadata: { [k: string]: string };

                /**
                 * Creates a new TokenEntry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TokenEntry instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.ITokenEntry): juicetokens.foundation.persistence.TokenEntry;

                /**
                 * Encodes the specified TokenEntry message. Does not implicitly {@link juicetokens.foundation.persistence.TokenEntry.verify|verify} messages.
                 * @param message TokenEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.ITokenEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TokenEntry message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.TokenEntry.verify|verify} messages.
                 * @param message TokenEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.ITokenEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TokenEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TokenEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.TokenEntry;

                /**
                 * Decodes a TokenEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TokenEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.TokenEntry;

                /**
                 * Verifies a TokenEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TokenEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TokenEntry
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.TokenEntry;

                /**
                 * Creates a plain object from a TokenEntry message. Also converts values to other types if specified.
                 * @param message TokenEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.TokenEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TokenEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TokenEntry
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StorageOperation. */
            interface IStorageOperation {

                /** StorageOperation operationType */
                operationType?: (juicetokens.foundation.persistence.StorageOperation.OperationType|null);

                /** StorageOperation tokenIds */
                tokenIds?: (juicetokens.token.model.ITokenId[]|null);

                /** StorageOperation tokens */
                tokens?: (juicetokens.token.model.IToken[]|null);

                /** StorageOperation query */
                query?: (string|null);
            }

            /** Represents a StorageOperation. */
            class StorageOperation implements IStorageOperation {

                /**
                 * Constructs a new StorageOperation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IStorageOperation);

                /** StorageOperation operationType. */
                public operationType: juicetokens.foundation.persistence.StorageOperation.OperationType;

                /** StorageOperation tokenIds. */
                public tokenIds: juicetokens.token.model.ITokenId[];

                /** StorageOperation tokens. */
                public tokens: juicetokens.token.model.IToken[];

                /** StorageOperation query. */
                public query: string;

                /**
                 * Creates a new StorageOperation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StorageOperation instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IStorageOperation): juicetokens.foundation.persistence.StorageOperation;

                /**
                 * Encodes the specified StorageOperation message. Does not implicitly {@link juicetokens.foundation.persistence.StorageOperation.verify|verify} messages.
                 * @param message StorageOperation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IStorageOperation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StorageOperation message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.StorageOperation.verify|verify} messages.
                 * @param message StorageOperation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IStorageOperation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StorageOperation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StorageOperation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.StorageOperation;

                /**
                 * Decodes a StorageOperation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StorageOperation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.StorageOperation;

                /**
                 * Verifies a StorageOperation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StorageOperation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StorageOperation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.StorageOperation;

                /**
                 * Creates a plain object from a StorageOperation message. Also converts values to other types if specified.
                 * @param message StorageOperation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.StorageOperation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StorageOperation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StorageOperation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace StorageOperation {

                /** OperationType enum. */
                enum OperationType {
                    SAVE = 0,
                    LOAD = 1,
                    DELETE = 2,
                    UPDATE = 3,
                    QUERY = 4
                }
            }

            /** Properties of a StorageResult. */
            interface IStorageResult {

                /** StorageResult success */
                success?: (boolean|null);

                /** StorageResult tokens */
                tokens?: (juicetokens.token.model.IToken[]|null);

                /** StorageResult errorMessage */
                errorMessage?: (string|null);

                /** StorageResult affectedCount */
                affectedCount?: (number|null);
            }

            /** Represents a StorageResult. */
            class StorageResult implements IStorageResult {

                /**
                 * Constructs a new StorageResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IStorageResult);

                /** StorageResult success. */
                public success: boolean;

                /** StorageResult tokens. */
                public tokens: juicetokens.token.model.IToken[];

                /** StorageResult errorMessage. */
                public errorMessage: string;

                /** StorageResult affectedCount. */
                public affectedCount: number;

                /**
                 * Creates a new StorageResult instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StorageResult instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IStorageResult): juicetokens.foundation.persistence.StorageResult;

                /**
                 * Encodes the specified StorageResult message. Does not implicitly {@link juicetokens.foundation.persistence.StorageResult.verify|verify} messages.
                 * @param message StorageResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IStorageResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StorageResult message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.StorageResult.verify|verify} messages.
                 * @param message StorageResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IStorageResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StorageResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StorageResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.StorageResult;

                /**
                 * Decodes a StorageResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StorageResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.StorageResult;

                /**
                 * Verifies a StorageResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StorageResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StorageResult
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.StorageResult;

                /**
                 * Creates a plain object from a StorageResult message. Also converts values to other types if specified.
                 * @param message StorageResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.StorageResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StorageResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StorageResult
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StorageCapacity. */
            interface IStorageCapacity {

                /** StorageCapacity totalCapacity */
                totalCapacity?: (number|Long|null);

                /** StorageCapacity usedCapacity */
                usedCapacity?: (number|Long|null);

                /** StorageCapacity availableCapacity */
                availableCapacity?: (number|Long|null);

                /** StorageCapacity metadata */
                metadata?: ({ [k: string]: string }|null);
            }

            /** Represents a StorageCapacity. */
            class StorageCapacity implements IStorageCapacity {

                /**
                 * Constructs a new StorageCapacity.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IStorageCapacity);

                /** StorageCapacity totalCapacity. */
                public totalCapacity: (number|Long);

                /** StorageCapacity usedCapacity. */
                public usedCapacity: (number|Long);

                /** StorageCapacity availableCapacity. */
                public availableCapacity: (number|Long);

                /** StorageCapacity metadata. */
                public metadata: { [k: string]: string };

                /**
                 * Creates a new StorageCapacity instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StorageCapacity instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IStorageCapacity): juicetokens.foundation.persistence.StorageCapacity;

                /**
                 * Encodes the specified StorageCapacity message. Does not implicitly {@link juicetokens.foundation.persistence.StorageCapacity.verify|verify} messages.
                 * @param message StorageCapacity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IStorageCapacity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StorageCapacity message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.StorageCapacity.verify|verify} messages.
                 * @param message StorageCapacity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IStorageCapacity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StorageCapacity message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StorageCapacity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.StorageCapacity;

                /**
                 * Decodes a StorageCapacity message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StorageCapacity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.StorageCapacity;

                /**
                 * Verifies a StorageCapacity message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StorageCapacity message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StorageCapacity
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.StorageCapacity;

                /**
                 * Creates a plain object from a StorageCapacity message. Also converts values to other types if specified.
                 * @param message StorageCapacity
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.StorageCapacity, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StorageCapacity to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StorageCapacity
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DHTEntry. */
            interface IDHTEntry {

                /** DHTEntry key */
                key?: (Uint8Array|null);

                /** DHTEntry value */
                value?: (Uint8Array|null);

                /** DHTEntry timestampMs */
                timestampMs?: (number|Long|null);

                /** DHTEntry ttlSeconds */
                ttlSeconds?: (number|null);

                /** DHTEntry s2CellId */
                s2CellId?: (string|null);

                /** DHTEntry previousEntryHash */
                previousEntryHash?: (Uint8Array|null);

                /** DHTEntry signature */
                signature?: (Uint8Array|null);

                /** DHTEntry sequenceNumber */
                sequenceNumber?: (number|Long|null);

                /** DHTEntry entryType */
                entryType?: (string|null);

                /** DHTEntry userId */
                userId?: (string|null);
            }

            /** Represents a DHTEntry. */
            class DHTEntry implements IDHTEntry {

                /**
                 * Constructs a new DHTEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IDHTEntry);

                /** DHTEntry key. */
                public key: Uint8Array;

                /** DHTEntry value. */
                public value: Uint8Array;

                /** DHTEntry timestampMs. */
                public timestampMs: (number|Long);

                /** DHTEntry ttlSeconds. */
                public ttlSeconds: number;

                /** DHTEntry s2CellId. */
                public s2CellId: string;

                /** DHTEntry previousEntryHash. */
                public previousEntryHash: Uint8Array;

                /** DHTEntry signature. */
                public signature: Uint8Array;

                /** DHTEntry sequenceNumber. */
                public sequenceNumber: (number|Long);

                /** DHTEntry entryType. */
                public entryType: string;

                /** DHTEntry userId. */
                public userId: string;

                /**
                 * Creates a new DHTEntry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DHTEntry instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IDHTEntry): juicetokens.foundation.persistence.DHTEntry;

                /**
                 * Encodes the specified DHTEntry message. Does not implicitly {@link juicetokens.foundation.persistence.DHTEntry.verify|verify} messages.
                 * @param message DHTEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IDHTEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DHTEntry message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.DHTEntry.verify|verify} messages.
                 * @param message DHTEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IDHTEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DHTEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DHTEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.DHTEntry;

                /**
                 * Decodes a DHTEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DHTEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.DHTEntry;

                /**
                 * Verifies a DHTEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DHTEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DHTEntry
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.DHTEntry;

                /**
                 * Creates a plain object from a DHTEntry message. Also converts values to other types if specified.
                 * @param message DHTEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.DHTEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DHTEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DHTEntry
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DHTQuery. */
            interface IDHTQuery {

                /** DHTQuery key */
                key?: (Uint8Array|null);

                /** DHTQuery includeMetadata */
                includeMetadata?: (boolean|null);

                /** DHTQuery s2CellId */
                s2CellId?: (string|null);

                /** DHTQuery userId */
                userId?: (string|null);

                /** DHTQuery entryType */
                entryType?: (string|null);
            }

            /** Represents a DHTQuery. */
            class DHTQuery implements IDHTQuery {

                /**
                 * Constructs a new DHTQuery.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IDHTQuery);

                /** DHTQuery key. */
                public key: Uint8Array;

                /** DHTQuery includeMetadata. */
                public includeMetadata: boolean;

                /** DHTQuery s2CellId. */
                public s2CellId: string;

                /** DHTQuery userId. */
                public userId: string;

                /** DHTQuery entryType. */
                public entryType: string;

                /**
                 * Creates a new DHTQuery instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DHTQuery instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IDHTQuery): juicetokens.foundation.persistence.DHTQuery;

                /**
                 * Encodes the specified DHTQuery message. Does not implicitly {@link juicetokens.foundation.persistence.DHTQuery.verify|verify} messages.
                 * @param message DHTQuery message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IDHTQuery, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DHTQuery message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.DHTQuery.verify|verify} messages.
                 * @param message DHTQuery message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IDHTQuery, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DHTQuery message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DHTQuery
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.DHTQuery;

                /**
                 * Decodes a DHTQuery message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DHTQuery
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.DHTQuery;

                /**
                 * Verifies a DHTQuery message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DHTQuery message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DHTQuery
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.DHTQuery;

                /**
                 * Creates a plain object from a DHTQuery message. Also converts values to other types if specified.
                 * @param message DHTQuery
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.DHTQuery, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DHTQuery to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DHTQuery
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DHTQueryResult. */
            interface IDHTQueryResult {

                /** DHTQueryResult found */
                found?: (boolean|null);

                /** DHTQueryResult value */
                value?: (Uint8Array|null);

                /** DHTQueryResult timestampMs */
                timestampMs?: (number|Long|null);

                /** DHTQueryResult remainingTtlSeconds */
                remainingTtlSeconds?: (number|null);
            }

            /** Represents a DHTQueryResult. */
            class DHTQueryResult implements IDHTQueryResult {

                /**
                 * Constructs a new DHTQueryResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IDHTQueryResult);

                /** DHTQueryResult found. */
                public found: boolean;

                /** DHTQueryResult value. */
                public value: Uint8Array;

                /** DHTQueryResult timestampMs. */
                public timestampMs: (number|Long);

                /** DHTQueryResult remainingTtlSeconds. */
                public remainingTtlSeconds: number;

                /**
                 * Creates a new DHTQueryResult instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DHTQueryResult instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IDHTQueryResult): juicetokens.foundation.persistence.DHTQueryResult;

                /**
                 * Encodes the specified DHTQueryResult message. Does not implicitly {@link juicetokens.foundation.persistence.DHTQueryResult.verify|verify} messages.
                 * @param message DHTQueryResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IDHTQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DHTQueryResult message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.DHTQueryResult.verify|verify} messages.
                 * @param message DHTQueryResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IDHTQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DHTQueryResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DHTQueryResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.DHTQueryResult;

                /**
                 * Decodes a DHTQueryResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DHTQueryResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.DHTQueryResult;

                /**
                 * Verifies a DHTQueryResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DHTQueryResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DHTQueryResult
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.DHTQueryResult;

                /**
                 * Creates a plain object from a DHTQueryResult message. Also converts values to other types if specified.
                 * @param message DHTQueryResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.DHTQueryResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DHTQueryResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DHTQueryResult
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a S2CellReference. */
            interface IS2CellReference {

                /** S2CellReference cellId */
                cellId?: (string|null);

                /** S2CellReference level */
                level?: (number|null);

                /** S2CellReference lat */
                lat?: (number|null);

                /** S2CellReference lng */
                lng?: (number|null);
            }

            /** Represents a S2CellReference. */
            class S2CellReference implements IS2CellReference {

                /**
                 * Constructs a new S2CellReference.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IS2CellReference);

                /** S2CellReference cellId. */
                public cellId: string;

                /** S2CellReference level. */
                public level: number;

                /** S2CellReference lat. */
                public lat: number;

                /** S2CellReference lng. */
                public lng: number;

                /**
                 * Creates a new S2CellReference instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns S2CellReference instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IS2CellReference): juicetokens.foundation.persistence.S2CellReference;

                /**
                 * Encodes the specified S2CellReference message. Does not implicitly {@link juicetokens.foundation.persistence.S2CellReference.verify|verify} messages.
                 * @param message S2CellReference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IS2CellReference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified S2CellReference message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.S2CellReference.verify|verify} messages.
                 * @param message S2CellReference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IS2CellReference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a S2CellReference message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns S2CellReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.S2CellReference;

                /**
                 * Decodes a S2CellReference message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns S2CellReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.S2CellReference;

                /**
                 * Verifies a S2CellReference message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a S2CellReference message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns S2CellReference
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.S2CellReference;

                /**
                 * Creates a plain object from a S2CellReference message. Also converts values to other types if specified.
                 * @param message S2CellReference
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.S2CellReference, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this S2CellReference to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for S2CellReference
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a SyncVectorClock. */
            interface ISyncVectorClock {

                /** SyncVectorClock clockValues */
                clockValues?: ({ [k: string]: (number|Long) }|null);

                /** SyncVectorClock timestampMs */
                timestampMs?: (number|Long|null);

                /** SyncVectorClock originatorId */
                originatorId?: (string|null);
            }

            /** Represents a SyncVectorClock. */
            class SyncVectorClock implements ISyncVectorClock {

                /**
                 * Constructs a new SyncVectorClock.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.ISyncVectorClock);

                /** SyncVectorClock clockValues. */
                public clockValues: { [k: string]: (number|Long) };

                /** SyncVectorClock timestampMs. */
                public timestampMs: (number|Long);

                /** SyncVectorClock originatorId. */
                public originatorId: string;

                /**
                 * Creates a new SyncVectorClock instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SyncVectorClock instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.ISyncVectorClock): juicetokens.foundation.persistence.SyncVectorClock;

                /**
                 * Encodes the specified SyncVectorClock message. Does not implicitly {@link juicetokens.foundation.persistence.SyncVectorClock.verify|verify} messages.
                 * @param message SyncVectorClock message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.ISyncVectorClock, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SyncVectorClock message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.SyncVectorClock.verify|verify} messages.
                 * @param message SyncVectorClock message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.ISyncVectorClock, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SyncVectorClock message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SyncVectorClock
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.SyncVectorClock;

                /**
                 * Decodes a SyncVectorClock message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SyncVectorClock
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.SyncVectorClock;

                /**
                 * Verifies a SyncVectorClock message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SyncVectorClock message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SyncVectorClock
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.SyncVectorClock;

                /**
                 * Creates a plain object from a SyncVectorClock message. Also converts values to other types if specified.
                 * @param message SyncVectorClock
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.SyncVectorClock, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SyncVectorClock to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SyncVectorClock
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DenominationVectorClock. */
            interface IDenominationVectorClock {

                /** DenominationVectorClock denominationStatus */
                denominationStatus?: ({ [k: string]: number }|null);

                /** DenominationVectorClock userId */
                userId?: (string|null);

                /** DenominationVectorClock timestampMs */
                timestampMs?: (number|Long|null);
            }

            /** Represents a DenominationVectorClock. */
            class DenominationVectorClock implements IDenominationVectorClock {

                /**
                 * Constructs a new DenominationVectorClock.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IDenominationVectorClock);

                /** DenominationVectorClock denominationStatus. */
                public denominationStatus: { [k: string]: number };

                /** DenominationVectorClock userId. */
                public userId: string;

                /** DenominationVectorClock timestampMs. */
                public timestampMs: (number|Long);

                /**
                 * Creates a new DenominationVectorClock instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DenominationVectorClock instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IDenominationVectorClock): juicetokens.foundation.persistence.DenominationVectorClock;

                /**
                 * Encodes the specified DenominationVectorClock message. Does not implicitly {@link juicetokens.foundation.persistence.DenominationVectorClock.verify|verify} messages.
                 * @param message DenominationVectorClock message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IDenominationVectorClock, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DenominationVectorClock message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.DenominationVectorClock.verify|verify} messages.
                 * @param message DenominationVectorClock message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IDenominationVectorClock, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DenominationVectorClock message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DenominationVectorClock
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.DenominationVectorClock;

                /**
                 * Decodes a DenominationVectorClock message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DenominationVectorClock
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.DenominationVectorClock;

                /**
                 * Verifies a DenominationVectorClock message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DenominationVectorClock message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DenominationVectorClock
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.DenominationVectorClock;

                /**
                 * Creates a plain object from a DenominationVectorClock message. Also converts values to other types if specified.
                 * @param message DenominationVectorClock
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.DenominationVectorClock, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DenominationVectorClock to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DenominationVectorClock
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ConflictResolutionRequest. */
            interface IConflictResolutionRequest {

                /** ConflictResolutionRequest localToken */
                localToken?: (juicetokens.token.model.IToken|null);

                /** ConflictResolutionRequest remoteToken */
                remoteToken?: (juicetokens.token.model.IToken|null);

                /** ConflictResolutionRequest forceLocal */
                forceLocal?: (boolean|null);

                /** ConflictResolutionRequest forceRemote */
                forceRemote?: (boolean|null);
            }

            /** Represents a ConflictResolutionRequest. */
            class ConflictResolutionRequest implements IConflictResolutionRequest {

                /**
                 * Constructs a new ConflictResolutionRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IConflictResolutionRequest);

                /** ConflictResolutionRequest localToken. */
                public localToken?: (juicetokens.token.model.IToken|null);

                /** ConflictResolutionRequest remoteToken. */
                public remoteToken?: (juicetokens.token.model.IToken|null);

                /** ConflictResolutionRequest forceLocal. */
                public forceLocal: boolean;

                /** ConflictResolutionRequest forceRemote. */
                public forceRemote: boolean;

                /**
                 * Creates a new ConflictResolutionRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ConflictResolutionRequest instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IConflictResolutionRequest): juicetokens.foundation.persistence.ConflictResolutionRequest;

                /**
                 * Encodes the specified ConflictResolutionRequest message. Does not implicitly {@link juicetokens.foundation.persistence.ConflictResolutionRequest.verify|verify} messages.
                 * @param message ConflictResolutionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IConflictResolutionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ConflictResolutionRequest message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.ConflictResolutionRequest.verify|verify} messages.
                 * @param message ConflictResolutionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IConflictResolutionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ConflictResolutionRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ConflictResolutionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.ConflictResolutionRequest;

                /**
                 * Decodes a ConflictResolutionRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ConflictResolutionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.ConflictResolutionRequest;

                /**
                 * Verifies a ConflictResolutionRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ConflictResolutionRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ConflictResolutionRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.ConflictResolutionRequest;

                /**
                 * Creates a plain object from a ConflictResolutionRequest message. Also converts values to other types if specified.
                 * @param message ConflictResolutionRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.ConflictResolutionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ConflictResolutionRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ConflictResolutionRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a MerkleDifference. */
            interface IMerkleDifference {

                /** MerkleDifference merkleRoot */
                merkleRoot?: (Uint8Array|null);

                /** MerkleDifference missingHashes */
                missingHashes?: (Uint8Array[]|null);

                /** MerkleDifference hashToNodeMap */
                hashToNodeMap?: ({ [k: string]: Uint8Array }|null);
            }

            /** Represents a MerkleDifference. */
            class MerkleDifference implements IMerkleDifference {

                /**
                 * Constructs a new MerkleDifference.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IMerkleDifference);

                /** MerkleDifference merkleRoot. */
                public merkleRoot: Uint8Array;

                /** MerkleDifference missingHashes. */
                public missingHashes: Uint8Array[];

                /** MerkleDifference hashToNodeMap. */
                public hashToNodeMap: { [k: string]: Uint8Array };

                /**
                 * Creates a new MerkleDifference instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MerkleDifference instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IMerkleDifference): juicetokens.foundation.persistence.MerkleDifference;

                /**
                 * Encodes the specified MerkleDifference message. Does not implicitly {@link juicetokens.foundation.persistence.MerkleDifference.verify|verify} messages.
                 * @param message MerkleDifference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IMerkleDifference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MerkleDifference message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.MerkleDifference.verify|verify} messages.
                 * @param message MerkleDifference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IMerkleDifference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MerkleDifference message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MerkleDifference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.MerkleDifference;

                /**
                 * Decodes a MerkleDifference message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MerkleDifference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.MerkleDifference;

                /**
                 * Verifies a MerkleDifference message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MerkleDifference message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MerkleDifference
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.MerkleDifference;

                /**
                 * Creates a plain object from a MerkleDifference message. Also converts values to other types if specified.
                 * @param message MerkleDifference
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.MerkleDifference, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MerkleDifference to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for MerkleDifference
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a SynchronizationSession. */
            interface ISynchronizationSession {

                /** SynchronizationSession sessionId */
                sessionId?: (string|null);

                /** SynchronizationSession startedMs */
                startedMs?: (number|Long|null);

                /** SynchronizationSession lastActivityMs */
                lastActivityMs?: (number|Long|null);

                /** SynchronizationSession state */
                state?: (juicetokens.foundation.persistence.SynchronizationSession.SessionState|null);

                /** SynchronizationSession progressPercent */
                progressPercent?: (number|null);

                /** SynchronizationSession peerId */
                peerId?: (string|null);
            }

            /** Represents a SynchronizationSession. */
            class SynchronizationSession implements ISynchronizationSession {

                /**
                 * Constructs a new SynchronizationSession.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.ISynchronizationSession);

                /** SynchronizationSession sessionId. */
                public sessionId: string;

                /** SynchronizationSession startedMs. */
                public startedMs: (number|Long);

                /** SynchronizationSession lastActivityMs. */
                public lastActivityMs: (number|Long);

                /** SynchronizationSession state. */
                public state: juicetokens.foundation.persistence.SynchronizationSession.SessionState;

                /** SynchronizationSession progressPercent. */
                public progressPercent: number;

                /** SynchronizationSession peerId. */
                public peerId: string;

                /**
                 * Creates a new SynchronizationSession instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SynchronizationSession instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.ISynchronizationSession): juicetokens.foundation.persistence.SynchronizationSession;

                /**
                 * Encodes the specified SynchronizationSession message. Does not implicitly {@link juicetokens.foundation.persistence.SynchronizationSession.verify|verify} messages.
                 * @param message SynchronizationSession message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.ISynchronizationSession, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SynchronizationSession message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.SynchronizationSession.verify|verify} messages.
                 * @param message SynchronizationSession message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.ISynchronizationSession, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SynchronizationSession message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SynchronizationSession
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.SynchronizationSession;

                /**
                 * Decodes a SynchronizationSession message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SynchronizationSession
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.SynchronizationSession;

                /**
                 * Verifies a SynchronizationSession message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SynchronizationSession message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SynchronizationSession
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.SynchronizationSession;

                /**
                 * Creates a plain object from a SynchronizationSession message. Also converts values to other types if specified.
                 * @param message SynchronizationSession
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.SynchronizationSession, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SynchronizationSession to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SynchronizationSession
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace SynchronizationSession {

                /** SessionState enum. */
                enum SessionState {
                    INITIALIZING = 0,
                    COMPARING = 1,
                    TRANSFERRING = 2,
                    RESOLVING_CONFLICTS = 3,
                    FINALIZING = 4,
                    COMPLETED = 5,
                    FAILED = 6
                }
            }

            /** Properties of a PersonalChainInfo. */
            interface IPersonalChainInfo {

                /** PersonalChainInfo userId */
                userId?: (string|null);

                /** PersonalChainInfo latestEntryHash */
                latestEntryHash?: (Uint8Array|null);

                /** PersonalChainInfo latestSequenceNumber */
                latestSequenceNumber?: (number|Long|null);

                /** PersonalChainInfo chainStartTimestampMs */
                chainStartTimestampMs?: (number|Long|null);

                /** PersonalChainInfo lastUpdateTimestampMs */
                lastUpdateTimestampMs?: (number|Long|null);

                /** PersonalChainInfo totalEntries */
                totalEntries?: (number|null);

                /** PersonalChainInfo chainRootSignature */
                chainRootSignature?: (Uint8Array|null);

                /** PersonalChainInfo designatedBackupPeers */
                designatedBackupPeers?: (string[]|null);

                /** PersonalChainInfo backupMediumInfo */
                backupMediumInfo?: (string|null);
            }

            /** Represents a PersonalChainInfo. */
            class PersonalChainInfo implements IPersonalChainInfo {

                /**
                 * Constructs a new PersonalChainInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IPersonalChainInfo);

                /** PersonalChainInfo userId. */
                public userId: string;

                /** PersonalChainInfo latestEntryHash. */
                public latestEntryHash: Uint8Array;

                /** PersonalChainInfo latestSequenceNumber. */
                public latestSequenceNumber: (number|Long);

                /** PersonalChainInfo chainStartTimestampMs. */
                public chainStartTimestampMs: (number|Long);

                /** PersonalChainInfo lastUpdateTimestampMs. */
                public lastUpdateTimestampMs: (number|Long);

                /** PersonalChainInfo totalEntries. */
                public totalEntries: number;

                /** PersonalChainInfo chainRootSignature. */
                public chainRootSignature: Uint8Array;

                /** PersonalChainInfo designatedBackupPeers. */
                public designatedBackupPeers: string[];

                /** PersonalChainInfo backupMediumInfo. */
                public backupMediumInfo: string;

                /**
                 * Creates a new PersonalChainInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PersonalChainInfo instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IPersonalChainInfo): juicetokens.foundation.persistence.PersonalChainInfo;

                /**
                 * Encodes the specified PersonalChainInfo message. Does not implicitly {@link juicetokens.foundation.persistence.PersonalChainInfo.verify|verify} messages.
                 * @param message PersonalChainInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IPersonalChainInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PersonalChainInfo message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.PersonalChainInfo.verify|verify} messages.
                 * @param message PersonalChainInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IPersonalChainInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PersonalChainInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PersonalChainInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.PersonalChainInfo;

                /**
                 * Decodes a PersonalChainInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PersonalChainInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.PersonalChainInfo;

                /**
                 * Verifies a PersonalChainInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PersonalChainInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PersonalChainInfo
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.PersonalChainInfo;

                /**
                 * Creates a plain object from a PersonalChainInfo message. Also converts values to other types if specified.
                 * @param message PersonalChainInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.PersonalChainInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PersonalChainInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PersonalChainInfo
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PersonalLedger. */
            interface IPersonalLedger {

                /** PersonalLedger userId */
                userId?: (string|null);

                /** PersonalLedger tokenEntries */
                tokenEntries?: (juicetokens.foundation.persistence.ITokenPortfolioEntry[]|null);

                /** PersonalLedger attestationEntries */
                attestationEntries?: (juicetokens.foundation.persistence.IAttestationReference[]|null);

                /** PersonalLedger syncEntries */
                syncEntries?: (juicetokens.foundation.persistence.ISyncActivityReference[]|null);

                /** PersonalLedger ledgerHash */
                ledgerHash?: (Uint8Array|null);

                /** PersonalLedger lastUpdatedMs */
                lastUpdatedMs?: (number|Long|null);
            }

            /** Represents a PersonalLedger. */
            class PersonalLedger implements IPersonalLedger {

                /**
                 * Constructs a new PersonalLedger.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IPersonalLedger);

                /** PersonalLedger userId. */
                public userId: string;

                /** PersonalLedger tokenEntries. */
                public tokenEntries: juicetokens.foundation.persistence.ITokenPortfolioEntry[];

                /** PersonalLedger attestationEntries. */
                public attestationEntries: juicetokens.foundation.persistence.IAttestationReference[];

                /** PersonalLedger syncEntries. */
                public syncEntries: juicetokens.foundation.persistence.ISyncActivityReference[];

                /** PersonalLedger ledgerHash. */
                public ledgerHash: Uint8Array;

                /** PersonalLedger lastUpdatedMs. */
                public lastUpdatedMs: (number|Long);

                /**
                 * Creates a new PersonalLedger instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PersonalLedger instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IPersonalLedger): juicetokens.foundation.persistence.PersonalLedger;

                /**
                 * Encodes the specified PersonalLedger message. Does not implicitly {@link juicetokens.foundation.persistence.PersonalLedger.verify|verify} messages.
                 * @param message PersonalLedger message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IPersonalLedger, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PersonalLedger message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.PersonalLedger.verify|verify} messages.
                 * @param message PersonalLedger message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IPersonalLedger, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PersonalLedger message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PersonalLedger
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.PersonalLedger;

                /**
                 * Decodes a PersonalLedger message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PersonalLedger
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.PersonalLedger;

                /**
                 * Verifies a PersonalLedger message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PersonalLedger message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PersonalLedger
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.PersonalLedger;

                /**
                 * Creates a plain object from a PersonalLedger message. Also converts values to other types if specified.
                 * @param message PersonalLedger
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.PersonalLedger, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PersonalLedger to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PersonalLedger
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TokenPortfolioEntry. */
            interface ITokenPortfolioEntry {

                /** TokenPortfolioEntry tokenId */
                tokenId?: (string|null);

                /** TokenPortfolioEntry dhtEntryHash */
                dhtEntryHash?: (Uint8Array|null);

                /** TokenPortfolioEntry sequenceNumber */
                sequenceNumber?: (number|Long|null);

                /** TokenPortfolioEntry acquisitionTimestampMs */
                acquisitionTimestampMs?: (number|Long|null);

                /** TokenPortfolioEntry acquisitionType */
                acquisitionType?: (string|null);

                /** TokenPortfolioEntry previousOwnerId */
                previousOwnerId?: (string|null);
            }

            /** Represents a TokenPortfolioEntry. */
            class TokenPortfolioEntry implements ITokenPortfolioEntry {

                /**
                 * Constructs a new TokenPortfolioEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.ITokenPortfolioEntry);

                /** TokenPortfolioEntry tokenId. */
                public tokenId: string;

                /** TokenPortfolioEntry dhtEntryHash. */
                public dhtEntryHash: Uint8Array;

                /** TokenPortfolioEntry sequenceNumber. */
                public sequenceNumber: (number|Long);

                /** TokenPortfolioEntry acquisitionTimestampMs. */
                public acquisitionTimestampMs: (number|Long);

                /** TokenPortfolioEntry acquisitionType. */
                public acquisitionType: string;

                /** TokenPortfolioEntry previousOwnerId. */
                public previousOwnerId: string;

                /**
                 * Creates a new TokenPortfolioEntry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TokenPortfolioEntry instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.ITokenPortfolioEntry): juicetokens.foundation.persistence.TokenPortfolioEntry;

                /**
                 * Encodes the specified TokenPortfolioEntry message. Does not implicitly {@link juicetokens.foundation.persistence.TokenPortfolioEntry.verify|verify} messages.
                 * @param message TokenPortfolioEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.ITokenPortfolioEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TokenPortfolioEntry message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.TokenPortfolioEntry.verify|verify} messages.
                 * @param message TokenPortfolioEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.ITokenPortfolioEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TokenPortfolioEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TokenPortfolioEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.TokenPortfolioEntry;

                /**
                 * Decodes a TokenPortfolioEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TokenPortfolioEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.TokenPortfolioEntry;

                /**
                 * Verifies a TokenPortfolioEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TokenPortfolioEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TokenPortfolioEntry
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.TokenPortfolioEntry;

                /**
                 * Creates a plain object from a TokenPortfolioEntry message. Also converts values to other types if specified.
                 * @param message TokenPortfolioEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.TokenPortfolioEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TokenPortfolioEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TokenPortfolioEntry
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AttestationReference. */
            interface IAttestationReference {

                /** AttestationReference attestationId */
                attestationId?: (string|null);

                /** AttestationReference dhtEntryHash */
                dhtEntryHash?: (Uint8Array|null);

                /** AttestationReference sequenceNumber */
                sequenceNumber?: (number|Long|null);

                /** AttestationReference attestationType */
                attestationType?: (string|null);

                /** AttestationReference targetUserId */
                targetUserId?: (string|null);

                /** AttestationReference sourceUserId */
                sourceUserId?: (string|null);
            }

            /** Represents an AttestationReference. */
            class AttestationReference implements IAttestationReference {

                /**
                 * Constructs a new AttestationReference.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IAttestationReference);

                /** AttestationReference attestationId. */
                public attestationId: string;

                /** AttestationReference dhtEntryHash. */
                public dhtEntryHash: Uint8Array;

                /** AttestationReference sequenceNumber. */
                public sequenceNumber: (number|Long);

                /** AttestationReference attestationType. */
                public attestationType: string;

                /** AttestationReference targetUserId. */
                public targetUserId: string;

                /** AttestationReference sourceUserId. */
                public sourceUserId: string;

                /**
                 * Creates a new AttestationReference instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttestationReference instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IAttestationReference): juicetokens.foundation.persistence.AttestationReference;

                /**
                 * Encodes the specified AttestationReference message. Does not implicitly {@link juicetokens.foundation.persistence.AttestationReference.verify|verify} messages.
                 * @param message AttestationReference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IAttestationReference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttestationReference message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.AttestationReference.verify|verify} messages.
                 * @param message AttestationReference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IAttestationReference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttestationReference message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttestationReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.AttestationReference;

                /**
                 * Decodes an AttestationReference message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttestationReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.AttestationReference;

                /**
                 * Verifies an AttestationReference message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttestationReference message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttestationReference
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.AttestationReference;

                /**
                 * Creates a plain object from an AttestationReference message. Also converts values to other types if specified.
                 * @param message AttestationReference
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.AttestationReference, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttestationReference to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttestationReference
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a SyncActivityReference. */
            interface ISyncActivityReference {

                /** SyncActivityReference syncId */
                syncId?: (string|null);

                /** SyncActivityReference dhtEntryHash */
                dhtEntryHash?: (Uint8Array|null);

                /** SyncActivityReference sequenceNumber */
                sequenceNumber?: (number|Long|null);

                /** SyncActivityReference peerId */
                peerId?: (string|null);

                /** SyncActivityReference timestampMs */
                timestampMs?: (number|Long|null);

                /** SyncActivityReference recordsSynced */
                recordsSynced?: (number|null);

                /** SyncActivityReference direction */
                direction?: (juicetokens.foundation.persistence.SyncDirection|null);
            }

            /** Represents a SyncActivityReference. */
            class SyncActivityReference implements ISyncActivityReference {

                /**
                 * Constructs a new SyncActivityReference.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.ISyncActivityReference);

                /** SyncActivityReference syncId. */
                public syncId: string;

                /** SyncActivityReference dhtEntryHash. */
                public dhtEntryHash: Uint8Array;

                /** SyncActivityReference sequenceNumber. */
                public sequenceNumber: (number|Long);

                /** SyncActivityReference peerId. */
                public peerId: string;

                /** SyncActivityReference timestampMs. */
                public timestampMs: (number|Long);

                /** SyncActivityReference recordsSynced. */
                public recordsSynced: number;

                /** SyncActivityReference direction. */
                public direction: juicetokens.foundation.persistence.SyncDirection;

                /**
                 * Creates a new SyncActivityReference instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SyncActivityReference instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.ISyncActivityReference): juicetokens.foundation.persistence.SyncActivityReference;

                /**
                 * Encodes the specified SyncActivityReference message. Does not implicitly {@link juicetokens.foundation.persistence.SyncActivityReference.verify|verify} messages.
                 * @param message SyncActivityReference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.ISyncActivityReference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SyncActivityReference message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.SyncActivityReference.verify|verify} messages.
                 * @param message SyncActivityReference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.ISyncActivityReference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SyncActivityReference message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SyncActivityReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.SyncActivityReference;

                /**
                 * Decodes a SyncActivityReference message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SyncActivityReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.SyncActivityReference;

                /**
                 * Verifies a SyncActivityReference message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SyncActivityReference message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SyncActivityReference
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.SyncActivityReference;

                /**
                 * Creates a plain object from a SyncActivityReference message. Also converts values to other types if specified.
                 * @param message SyncActivityReference
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.SyncActivityReference, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SyncActivityReference to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SyncActivityReference
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** SyncDirection enum. */
            enum SyncDirection {
                OUTGOING = 0,
                INCOMING = 1,
                BIDIRECTIONAL = 2
            }

            /** Properties of a ChainVerificationRequest. */
            interface IChainVerificationRequest {

                /** ChainVerificationRequest userId */
                userId?: (string|null);

                /** ChainVerificationRequest startSequence */
                startSequence?: (number|Long|null);

                /** ChainVerificationRequest endSequence */
                endSequence?: (number|Long|null);

                /** ChainVerificationRequest includeEntryContent */
                includeEntryContent?: (boolean|null);

                /** ChainVerificationRequest verifyPortfolioConsistency */
                verifyPortfolioConsistency?: (boolean|null);

                /** ChainVerificationRequest verifyAttestationConsistency */
                verifyAttestationConsistency?: (boolean|null);
            }

            /** Represents a ChainVerificationRequest. */
            class ChainVerificationRequest implements IChainVerificationRequest {

                /**
                 * Constructs a new ChainVerificationRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IChainVerificationRequest);

                /** ChainVerificationRequest userId. */
                public userId: string;

                /** ChainVerificationRequest startSequence. */
                public startSequence: (number|Long);

                /** ChainVerificationRequest endSequence. */
                public endSequence: (number|Long);

                /** ChainVerificationRequest includeEntryContent. */
                public includeEntryContent: boolean;

                /** ChainVerificationRequest verifyPortfolioConsistency. */
                public verifyPortfolioConsistency: boolean;

                /** ChainVerificationRequest verifyAttestationConsistency. */
                public verifyAttestationConsistency: boolean;

                /**
                 * Creates a new ChainVerificationRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChainVerificationRequest instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IChainVerificationRequest): juicetokens.foundation.persistence.ChainVerificationRequest;

                /**
                 * Encodes the specified ChainVerificationRequest message. Does not implicitly {@link juicetokens.foundation.persistence.ChainVerificationRequest.verify|verify} messages.
                 * @param message ChainVerificationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IChainVerificationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChainVerificationRequest message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.ChainVerificationRequest.verify|verify} messages.
                 * @param message ChainVerificationRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IChainVerificationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChainVerificationRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChainVerificationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.ChainVerificationRequest;

                /**
                 * Decodes a ChainVerificationRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChainVerificationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.ChainVerificationRequest;

                /**
                 * Verifies a ChainVerificationRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChainVerificationRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChainVerificationRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.ChainVerificationRequest;

                /**
                 * Creates a plain object from a ChainVerificationRequest message. Also converts values to other types if specified.
                 * @param message ChainVerificationRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.ChainVerificationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChainVerificationRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ChainVerificationRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ChainVerificationResult. */
            interface IChainVerificationResult {

                /** ChainVerificationResult chainValid */
                chainValid?: (boolean|null);

                /** ChainVerificationResult userId */
                userId?: (string|null);

                /** ChainVerificationResult segments */
                segments?: (juicetokens.foundation.persistence.IChainSegment[]|null);

                /** ChainVerificationResult verificationError */
                verificationError?: (string|null);

                /** ChainVerificationResult consistencyScore */
                consistencyScore?: (number|null);

                /** ChainVerificationResult portfolioVerification */
                portfolioVerification?: (juicetokens.foundation.persistence.IPortfolioVerificationResult|null);

                /** ChainVerificationResult attestationVerification */
                attestationVerification?: (juicetokens.foundation.persistence.IAttestationVerificationResult|null);
            }

            /** Represents a ChainVerificationResult. */
            class ChainVerificationResult implements IChainVerificationResult {

                /**
                 * Constructs a new ChainVerificationResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IChainVerificationResult);

                /** ChainVerificationResult chainValid. */
                public chainValid: boolean;

                /** ChainVerificationResult userId. */
                public userId: string;

                /** ChainVerificationResult segments. */
                public segments: juicetokens.foundation.persistence.IChainSegment[];

                /** ChainVerificationResult verificationError. */
                public verificationError: string;

                /** ChainVerificationResult consistencyScore. */
                public consistencyScore: number;

                /** ChainVerificationResult portfolioVerification. */
                public portfolioVerification?: (juicetokens.foundation.persistence.IPortfolioVerificationResult|null);

                /** ChainVerificationResult attestationVerification. */
                public attestationVerification?: (juicetokens.foundation.persistence.IAttestationVerificationResult|null);

                /**
                 * Creates a new ChainVerificationResult instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChainVerificationResult instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IChainVerificationResult): juicetokens.foundation.persistence.ChainVerificationResult;

                /**
                 * Encodes the specified ChainVerificationResult message. Does not implicitly {@link juicetokens.foundation.persistence.ChainVerificationResult.verify|verify} messages.
                 * @param message ChainVerificationResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IChainVerificationResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChainVerificationResult message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.ChainVerificationResult.verify|verify} messages.
                 * @param message ChainVerificationResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IChainVerificationResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChainVerificationResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChainVerificationResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.ChainVerificationResult;

                /**
                 * Decodes a ChainVerificationResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChainVerificationResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.ChainVerificationResult;

                /**
                 * Verifies a ChainVerificationResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChainVerificationResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChainVerificationResult
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.ChainVerificationResult;

                /**
                 * Creates a plain object from a ChainVerificationResult message. Also converts values to other types if specified.
                 * @param message ChainVerificationResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.ChainVerificationResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChainVerificationResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ChainVerificationResult
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PortfolioVerificationResult. */
            interface IPortfolioVerificationResult {

                /** PortfolioVerificationResult consistent */
                consistent?: (boolean|null);

                /** PortfolioVerificationResult tokensVerified */
                tokensVerified?: (number|null);

                /** PortfolioVerificationResult inconsistenciesFound */
                inconsistenciesFound?: (number|null);

                /** PortfolioVerificationResult inconsistentTokenIds */
                inconsistentTokenIds?: (string[]|null);
            }

            /** Represents a PortfolioVerificationResult. */
            class PortfolioVerificationResult implements IPortfolioVerificationResult {

                /**
                 * Constructs a new PortfolioVerificationResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IPortfolioVerificationResult);

                /** PortfolioVerificationResult consistent. */
                public consistent: boolean;

                /** PortfolioVerificationResult tokensVerified. */
                public tokensVerified: number;

                /** PortfolioVerificationResult inconsistenciesFound. */
                public inconsistenciesFound: number;

                /** PortfolioVerificationResult inconsistentTokenIds. */
                public inconsistentTokenIds: string[];

                /**
                 * Creates a new PortfolioVerificationResult instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PortfolioVerificationResult instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IPortfolioVerificationResult): juicetokens.foundation.persistence.PortfolioVerificationResult;

                /**
                 * Encodes the specified PortfolioVerificationResult message. Does not implicitly {@link juicetokens.foundation.persistence.PortfolioVerificationResult.verify|verify} messages.
                 * @param message PortfolioVerificationResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IPortfolioVerificationResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PortfolioVerificationResult message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.PortfolioVerificationResult.verify|verify} messages.
                 * @param message PortfolioVerificationResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IPortfolioVerificationResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PortfolioVerificationResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PortfolioVerificationResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.PortfolioVerificationResult;

                /**
                 * Decodes a PortfolioVerificationResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PortfolioVerificationResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.PortfolioVerificationResult;

                /**
                 * Verifies a PortfolioVerificationResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PortfolioVerificationResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PortfolioVerificationResult
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.PortfolioVerificationResult;

                /**
                 * Creates a plain object from a PortfolioVerificationResult message. Also converts values to other types if specified.
                 * @param message PortfolioVerificationResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.PortfolioVerificationResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PortfolioVerificationResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PortfolioVerificationResult
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AttestationVerificationResult. */
            interface IAttestationVerificationResult {

                /** AttestationVerificationResult consistent */
                consistent?: (boolean|null);

                /** AttestationVerificationResult attestationsVerified */
                attestationsVerified?: (number|null);

                /** AttestationVerificationResult inconsistenciesFound */
                inconsistenciesFound?: (number|null);

                /** AttestationVerificationResult inconsistentAttestationIds */
                inconsistentAttestationIds?: (string[]|null);
            }

            /** Represents an AttestationVerificationResult. */
            class AttestationVerificationResult implements IAttestationVerificationResult {

                /**
                 * Constructs a new AttestationVerificationResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IAttestationVerificationResult);

                /** AttestationVerificationResult consistent. */
                public consistent: boolean;

                /** AttestationVerificationResult attestationsVerified. */
                public attestationsVerified: number;

                /** AttestationVerificationResult inconsistenciesFound. */
                public inconsistenciesFound: number;

                /** AttestationVerificationResult inconsistentAttestationIds. */
                public inconsistentAttestationIds: string[];

                /**
                 * Creates a new AttestationVerificationResult instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttestationVerificationResult instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IAttestationVerificationResult): juicetokens.foundation.persistence.AttestationVerificationResult;

                /**
                 * Encodes the specified AttestationVerificationResult message. Does not implicitly {@link juicetokens.foundation.persistence.AttestationVerificationResult.verify|verify} messages.
                 * @param message AttestationVerificationResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IAttestationVerificationResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttestationVerificationResult message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.AttestationVerificationResult.verify|verify} messages.
                 * @param message AttestationVerificationResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IAttestationVerificationResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttestationVerificationResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttestationVerificationResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.AttestationVerificationResult;

                /**
                 * Decodes an AttestationVerificationResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttestationVerificationResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.AttestationVerificationResult;

                /**
                 * Verifies an AttestationVerificationResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttestationVerificationResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttestationVerificationResult
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.AttestationVerificationResult;

                /**
                 * Creates a plain object from an AttestationVerificationResult message. Also converts values to other types if specified.
                 * @param message AttestationVerificationResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.AttestationVerificationResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttestationVerificationResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttestationVerificationResult
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ChainSegment. */
            interface IChainSegment {

                /** ChainSegment sequenceNumber */
                sequenceNumber?: (number|Long|null);

                /** ChainSegment entryHash */
                entryHash?: (Uint8Array|null);

                /** ChainSegment previousHash */
                previousHash?: (Uint8Array|null);

                /** ChainSegment timestampMs */
                timestampMs?: (number|Long|null);

                /** ChainSegment contentHash */
                contentHash?: (Uint8Array|null);

                /** ChainSegment content */
                content?: (Uint8Array|null);

                /** ChainSegment entryType */
                entryType?: (string|null);
            }

            /** Represents a ChainSegment. */
            class ChainSegment implements IChainSegment {

                /**
                 * Constructs a new ChainSegment.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.persistence.IChainSegment);

                /** ChainSegment sequenceNumber. */
                public sequenceNumber: (number|Long);

                /** ChainSegment entryHash. */
                public entryHash: Uint8Array;

                /** ChainSegment previousHash. */
                public previousHash: Uint8Array;

                /** ChainSegment timestampMs. */
                public timestampMs: (number|Long);

                /** ChainSegment contentHash. */
                public contentHash: Uint8Array;

                /** ChainSegment content. */
                public content: Uint8Array;

                /** ChainSegment entryType. */
                public entryType: string;

                /**
                 * Creates a new ChainSegment instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChainSegment instance
                 */
                public static create(properties?: juicetokens.foundation.persistence.IChainSegment): juicetokens.foundation.persistence.ChainSegment;

                /**
                 * Encodes the specified ChainSegment message. Does not implicitly {@link juicetokens.foundation.persistence.ChainSegment.verify|verify} messages.
                 * @param message ChainSegment message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.persistence.IChainSegment, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChainSegment message, length delimited. Does not implicitly {@link juicetokens.foundation.persistence.ChainSegment.verify|verify} messages.
                 * @param message ChainSegment message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.persistence.IChainSegment, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChainSegment message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChainSegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.persistence.ChainSegment;

                /**
                 * Decodes a ChainSegment message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChainSegment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.persistence.ChainSegment;

                /**
                 * Verifies a ChainSegment message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChainSegment message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChainSegment
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.persistence.ChainSegment;

                /**
                 * Creates a plain object from a ChainSegment message. Also converts values to other types if specified.
                 * @param message ChainSegment
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.persistence.ChainSegment, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChainSegment to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ChainSegment
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Namespace time. */
        namespace time {

            /** Properties of a TimeSource. */
            interface ITimeSource {

                /** TimeSource sourceType */
                sourceType?: (juicetokens.foundation.time.TimeSource.SourceType|null);

                /** TimeSource timestampMs */
                timestampMs?: (number|Long|null);

                /** TimeSource confidenceScore */
                confidenceScore?: (number|null);
            }

            /** Represents a TimeSource. */
            class TimeSource implements ITimeSource {

                /**
                 * Constructs a new TimeSource.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.time.ITimeSource);

                /** TimeSource sourceType. */
                public sourceType: juicetokens.foundation.time.TimeSource.SourceType;

                /** TimeSource timestampMs. */
                public timestampMs: (number|Long);

                /** TimeSource confidenceScore. */
                public confidenceScore: number;

                /**
                 * Creates a new TimeSource instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TimeSource instance
                 */
                public static create(properties?: juicetokens.foundation.time.ITimeSource): juicetokens.foundation.time.TimeSource;

                /**
                 * Encodes the specified TimeSource message. Does not implicitly {@link juicetokens.foundation.time.TimeSource.verify|verify} messages.
                 * @param message TimeSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.time.ITimeSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TimeSource message, length delimited. Does not implicitly {@link juicetokens.foundation.time.TimeSource.verify|verify} messages.
                 * @param message TimeSource message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.time.ITimeSource, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TimeSource message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TimeSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.time.TimeSource;

                /**
                 * Decodes a TimeSource message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TimeSource
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.time.TimeSource;

                /**
                 * Verifies a TimeSource message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TimeSource message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TimeSource
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.time.TimeSource;

                /**
                 * Creates a plain object from a TimeSource message. Also converts values to other types if specified.
                 * @param message TimeSource
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.time.TimeSource, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TimeSource to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TimeSource
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace TimeSource {

                /** SourceType enum. */
                enum SourceType {
                    SYSTEM = 0,
                    NTP = 1,
                    GNSS = 2,
                    RADIO = 3,
                    CONSENSUS = 4
                }
            }

            /** Properties of a TimeConsensus. */
            interface ITimeConsensus {

                /** TimeConsensus sources */
                sources?: (juicetokens.foundation.time.ITimeSource[]|null);

                /** TimeConsensus consensusTimestampMs */
                consensusTimestampMs?: (number|Long|null);

                /** TimeConsensus consensusConfidence */
                consensusConfidence?: (number|null);
            }

            /** Represents a TimeConsensus. */
            class TimeConsensus implements ITimeConsensus {

                /**
                 * Constructs a new TimeConsensus.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.time.ITimeConsensus);

                /** TimeConsensus sources. */
                public sources: juicetokens.foundation.time.ITimeSource[];

                /** TimeConsensus consensusTimestampMs. */
                public consensusTimestampMs: (number|Long);

                /** TimeConsensus consensusConfidence. */
                public consensusConfidence: number;

                /**
                 * Creates a new TimeConsensus instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TimeConsensus instance
                 */
                public static create(properties?: juicetokens.foundation.time.ITimeConsensus): juicetokens.foundation.time.TimeConsensus;

                /**
                 * Encodes the specified TimeConsensus message. Does not implicitly {@link juicetokens.foundation.time.TimeConsensus.verify|verify} messages.
                 * @param message TimeConsensus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.time.ITimeConsensus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TimeConsensus message, length delimited. Does not implicitly {@link juicetokens.foundation.time.TimeConsensus.verify|verify} messages.
                 * @param message TimeConsensus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.time.ITimeConsensus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TimeConsensus message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TimeConsensus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.time.TimeConsensus;

                /**
                 * Decodes a TimeConsensus message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TimeConsensus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.time.TimeConsensus;

                /**
                 * Verifies a TimeConsensus message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TimeConsensus message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TimeConsensus
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.time.TimeConsensus;

                /**
                 * Creates a plain object from a TimeConsensus message. Also converts values to other types if specified.
                 * @param message TimeConsensus
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.time.TimeConsensus, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TimeConsensus to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TimeConsensus
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a SpoofingDetectionResult. */
            interface ISpoofingDetectionResult {

                /** SpoofingDetectionResult spoofingDetected */
                spoofingDetected?: (boolean|null);

                /** SpoofingDetectionResult detectionReason */
                detectionReason?: (string|null);

                /** SpoofingDetectionResult expectedTimeRangeMinMs */
                expectedTimeRangeMinMs?: (number|Long|null);

                /** SpoofingDetectionResult expectedTimeRangeMaxMs */
                expectedTimeRangeMaxMs?: (number|Long|null);

                /** SpoofingDetectionResult detectedTimeMs */
                detectedTimeMs?: (number|Long|null);
            }

            /** Represents a SpoofingDetectionResult. */
            class SpoofingDetectionResult implements ISpoofingDetectionResult {

                /**
                 * Constructs a new SpoofingDetectionResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.time.ISpoofingDetectionResult);

                /** SpoofingDetectionResult spoofingDetected. */
                public spoofingDetected: boolean;

                /** SpoofingDetectionResult detectionReason. */
                public detectionReason: string;

                /** SpoofingDetectionResult expectedTimeRangeMinMs. */
                public expectedTimeRangeMinMs: (number|Long);

                /** SpoofingDetectionResult expectedTimeRangeMaxMs. */
                public expectedTimeRangeMaxMs: (number|Long);

                /** SpoofingDetectionResult detectedTimeMs. */
                public detectedTimeMs: (number|Long);

                /**
                 * Creates a new SpoofingDetectionResult instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SpoofingDetectionResult instance
                 */
                public static create(properties?: juicetokens.foundation.time.ISpoofingDetectionResult): juicetokens.foundation.time.SpoofingDetectionResult;

                /**
                 * Encodes the specified SpoofingDetectionResult message. Does not implicitly {@link juicetokens.foundation.time.SpoofingDetectionResult.verify|verify} messages.
                 * @param message SpoofingDetectionResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.time.ISpoofingDetectionResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SpoofingDetectionResult message, length delimited. Does not implicitly {@link juicetokens.foundation.time.SpoofingDetectionResult.verify|verify} messages.
                 * @param message SpoofingDetectionResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.time.ISpoofingDetectionResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SpoofingDetectionResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpoofingDetectionResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.time.SpoofingDetectionResult;

                /**
                 * Decodes a SpoofingDetectionResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpoofingDetectionResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.time.SpoofingDetectionResult;

                /**
                 * Verifies a SpoofingDetectionResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpoofingDetectionResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpoofingDetectionResult
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.time.SpoofingDetectionResult;

                /**
                 * Creates a plain object from a SpoofingDetectionResult message. Also converts values to other types if specified.
                 * @param message SpoofingDetectionResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.time.SpoofingDetectionResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpoofingDetectionResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SpoofingDetectionResult
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Represents a TimeService */
            class TimeService extends $protobuf.rpc.Service {

                /**
                 * Constructs a new TimeService service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Creates new TimeService service using the specified rpc implementation.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 * @returns RPC service. Useful where requests and/or responses are streamed.
                 */
                public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): TimeService;

                /**
                 * Calls GetCurrentTime.
                 * @param request GetCurrentTimeRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and GetCurrentTimeResponse
                 */
                public getCurrentTime(request: juicetokens.foundation.time.IGetCurrentTimeRequest, callback: juicetokens.foundation.time.TimeService.GetCurrentTimeCallback): void;

                /**
                 * Calls GetCurrentTime.
                 * @param request GetCurrentTimeRequest message or plain object
                 * @returns Promise
                 */
                public getCurrentTime(request: juicetokens.foundation.time.IGetCurrentTimeRequest): Promise<juicetokens.foundation.time.GetCurrentTimeResponse>;

                /**
                 * Calls GetTimeConsensus.
                 * @param request GetTimeConsensusRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and GetTimeConsensusResponse
                 */
                public getTimeConsensus(request: juicetokens.foundation.time.IGetTimeConsensusRequest, callback: juicetokens.foundation.time.TimeService.GetTimeConsensusCallback): void;

                /**
                 * Calls GetTimeConsensus.
                 * @param request GetTimeConsensusRequest message or plain object
                 * @returns Promise
                 */
                public getTimeConsensus(request: juicetokens.foundation.time.IGetTimeConsensusRequest): Promise<juicetokens.foundation.time.GetTimeConsensusResponse>;

                /**
                 * Calls DetectTimeSpoofing.
                 * @param request DetectTimeSpoofingRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and DetectTimeSpoofingResponse
                 */
                public detectTimeSpoofing(request: juicetokens.foundation.time.IDetectTimeSpoofingRequest, callback: juicetokens.foundation.time.TimeService.DetectTimeSpoofingCallback): void;

                /**
                 * Calls DetectTimeSpoofing.
                 * @param request DetectTimeSpoofingRequest message or plain object
                 * @returns Promise
                 */
                public detectTimeSpoofing(request: juicetokens.foundation.time.IDetectTimeSpoofingRequest): Promise<juicetokens.foundation.time.DetectTimeSpoofingResponse>;

                /**
                 * Calls StreamTimeUpdates.
                 * @param request StreamTimeUpdatesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and TimeSource
                 */
                public streamTimeUpdates(request: juicetokens.foundation.time.IStreamTimeUpdatesRequest, callback: juicetokens.foundation.time.TimeService.StreamTimeUpdatesCallback): void;

                /**
                 * Calls StreamTimeUpdates.
                 * @param request StreamTimeUpdatesRequest message or plain object
                 * @returns Promise
                 */
                public streamTimeUpdates(request: juicetokens.foundation.time.IStreamTimeUpdatesRequest): Promise<juicetokens.foundation.time.TimeSource>;
            }

            namespace TimeService {

                /**
                 * Callback as used by {@link juicetokens.foundation.time.TimeService#getCurrentTime}.
                 * @param error Error, if any
                 * @param [response] GetCurrentTimeResponse
                 */
                type GetCurrentTimeCallback = (error: (Error|null), response?: juicetokens.foundation.time.GetCurrentTimeResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.foundation.time.TimeService#getTimeConsensus}.
                 * @param error Error, if any
                 * @param [response] GetTimeConsensusResponse
                 */
                type GetTimeConsensusCallback = (error: (Error|null), response?: juicetokens.foundation.time.GetTimeConsensusResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.foundation.time.TimeService#detectTimeSpoofing}.
                 * @param error Error, if any
                 * @param [response] DetectTimeSpoofingResponse
                 */
                type DetectTimeSpoofingCallback = (error: (Error|null), response?: juicetokens.foundation.time.DetectTimeSpoofingResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.foundation.time.TimeService#streamTimeUpdates}.
                 * @param error Error, if any
                 * @param [response] TimeSource
                 */
                type StreamTimeUpdatesCallback = (error: (Error|null), response?: juicetokens.foundation.time.TimeSource) => void;
            }

            /** Properties of a GetCurrentTimeRequest. */
            interface IGetCurrentTimeRequest {

                /** GetCurrentTimeRequest includeConfidence */
                includeConfidence?: (boolean|null);
            }

            /** Represents a GetCurrentTimeRequest. */
            class GetCurrentTimeRequest implements IGetCurrentTimeRequest {

                /**
                 * Constructs a new GetCurrentTimeRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.time.IGetCurrentTimeRequest);

                /** GetCurrentTimeRequest includeConfidence. */
                public includeConfidence: boolean;

                /**
                 * Creates a new GetCurrentTimeRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetCurrentTimeRequest instance
                 */
                public static create(properties?: juicetokens.foundation.time.IGetCurrentTimeRequest): juicetokens.foundation.time.GetCurrentTimeRequest;

                /**
                 * Encodes the specified GetCurrentTimeRequest message. Does not implicitly {@link juicetokens.foundation.time.GetCurrentTimeRequest.verify|verify} messages.
                 * @param message GetCurrentTimeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.time.IGetCurrentTimeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetCurrentTimeRequest message, length delimited. Does not implicitly {@link juicetokens.foundation.time.GetCurrentTimeRequest.verify|verify} messages.
                 * @param message GetCurrentTimeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.time.IGetCurrentTimeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetCurrentTimeRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetCurrentTimeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.time.GetCurrentTimeRequest;

                /**
                 * Decodes a GetCurrentTimeRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetCurrentTimeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.time.GetCurrentTimeRequest;

                /**
                 * Verifies a GetCurrentTimeRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetCurrentTimeRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetCurrentTimeRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.time.GetCurrentTimeRequest;

                /**
                 * Creates a plain object from a GetCurrentTimeRequest message. Also converts values to other types if specified.
                 * @param message GetCurrentTimeRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.time.GetCurrentTimeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetCurrentTimeRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetCurrentTimeRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetCurrentTimeResponse. */
            interface IGetCurrentTimeResponse {

                /** GetCurrentTimeResponse timeSource */
                timeSource?: (juicetokens.foundation.time.ITimeSource|null);
            }

            /** Represents a GetCurrentTimeResponse. */
            class GetCurrentTimeResponse implements IGetCurrentTimeResponse {

                /**
                 * Constructs a new GetCurrentTimeResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.time.IGetCurrentTimeResponse);

                /** GetCurrentTimeResponse timeSource. */
                public timeSource?: (juicetokens.foundation.time.ITimeSource|null);

                /**
                 * Creates a new GetCurrentTimeResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetCurrentTimeResponse instance
                 */
                public static create(properties?: juicetokens.foundation.time.IGetCurrentTimeResponse): juicetokens.foundation.time.GetCurrentTimeResponse;

                /**
                 * Encodes the specified GetCurrentTimeResponse message. Does not implicitly {@link juicetokens.foundation.time.GetCurrentTimeResponse.verify|verify} messages.
                 * @param message GetCurrentTimeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.time.IGetCurrentTimeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetCurrentTimeResponse message, length delimited. Does not implicitly {@link juicetokens.foundation.time.GetCurrentTimeResponse.verify|verify} messages.
                 * @param message GetCurrentTimeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.time.IGetCurrentTimeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetCurrentTimeResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetCurrentTimeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.time.GetCurrentTimeResponse;

                /**
                 * Decodes a GetCurrentTimeResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetCurrentTimeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.time.GetCurrentTimeResponse;

                /**
                 * Verifies a GetCurrentTimeResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetCurrentTimeResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetCurrentTimeResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.time.GetCurrentTimeResponse;

                /**
                 * Creates a plain object from a GetCurrentTimeResponse message. Also converts values to other types if specified.
                 * @param message GetCurrentTimeResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.time.GetCurrentTimeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetCurrentTimeResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetCurrentTimeResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetTimeConsensusRequest. */
            interface IGetTimeConsensusRequest {

                /** GetTimeConsensusRequest minSources */
                minSources?: (number|null);

                /** GetTimeConsensusRequest minConfidence */
                minConfidence?: (number|null);
            }

            /** Represents a GetTimeConsensusRequest. */
            class GetTimeConsensusRequest implements IGetTimeConsensusRequest {

                /**
                 * Constructs a new GetTimeConsensusRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.time.IGetTimeConsensusRequest);

                /** GetTimeConsensusRequest minSources. */
                public minSources: number;

                /** GetTimeConsensusRequest minConfidence. */
                public minConfidence: number;

                /**
                 * Creates a new GetTimeConsensusRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetTimeConsensusRequest instance
                 */
                public static create(properties?: juicetokens.foundation.time.IGetTimeConsensusRequest): juicetokens.foundation.time.GetTimeConsensusRequest;

                /**
                 * Encodes the specified GetTimeConsensusRequest message. Does not implicitly {@link juicetokens.foundation.time.GetTimeConsensusRequest.verify|verify} messages.
                 * @param message GetTimeConsensusRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.time.IGetTimeConsensusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetTimeConsensusRequest message, length delimited. Does not implicitly {@link juicetokens.foundation.time.GetTimeConsensusRequest.verify|verify} messages.
                 * @param message GetTimeConsensusRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.time.IGetTimeConsensusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTimeConsensusRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetTimeConsensusRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.time.GetTimeConsensusRequest;

                /**
                 * Decodes a GetTimeConsensusRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetTimeConsensusRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.time.GetTimeConsensusRequest;

                /**
                 * Verifies a GetTimeConsensusRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetTimeConsensusRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetTimeConsensusRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.time.GetTimeConsensusRequest;

                /**
                 * Creates a plain object from a GetTimeConsensusRequest message. Also converts values to other types if specified.
                 * @param message GetTimeConsensusRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.time.GetTimeConsensusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetTimeConsensusRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetTimeConsensusRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetTimeConsensusResponse. */
            interface IGetTimeConsensusResponse {

                /** GetTimeConsensusResponse consensus */
                consensus?: (juicetokens.foundation.time.ITimeConsensus|null);
            }

            /** Represents a GetTimeConsensusResponse. */
            class GetTimeConsensusResponse implements IGetTimeConsensusResponse {

                /**
                 * Constructs a new GetTimeConsensusResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.time.IGetTimeConsensusResponse);

                /** GetTimeConsensusResponse consensus. */
                public consensus?: (juicetokens.foundation.time.ITimeConsensus|null);

                /**
                 * Creates a new GetTimeConsensusResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetTimeConsensusResponse instance
                 */
                public static create(properties?: juicetokens.foundation.time.IGetTimeConsensusResponse): juicetokens.foundation.time.GetTimeConsensusResponse;

                /**
                 * Encodes the specified GetTimeConsensusResponse message. Does not implicitly {@link juicetokens.foundation.time.GetTimeConsensusResponse.verify|verify} messages.
                 * @param message GetTimeConsensusResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.time.IGetTimeConsensusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetTimeConsensusResponse message, length delimited. Does not implicitly {@link juicetokens.foundation.time.GetTimeConsensusResponse.verify|verify} messages.
                 * @param message GetTimeConsensusResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.time.IGetTimeConsensusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetTimeConsensusResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetTimeConsensusResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.time.GetTimeConsensusResponse;

                /**
                 * Decodes a GetTimeConsensusResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetTimeConsensusResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.time.GetTimeConsensusResponse;

                /**
                 * Verifies a GetTimeConsensusResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetTimeConsensusResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetTimeConsensusResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.time.GetTimeConsensusResponse;

                /**
                 * Creates a plain object from a GetTimeConsensusResponse message. Also converts values to other types if specified.
                 * @param message GetTimeConsensusResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.time.GetTimeConsensusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetTimeConsensusResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetTimeConsensusResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DetectTimeSpoofingRequest. */
            interface IDetectTimeSpoofingRequest {

                /** DetectTimeSpoofingRequest referenceTimeMs */
                referenceTimeMs?: (number|Long|null);

                /** DetectTimeSpoofingRequest maxDriftMs */
                maxDriftMs?: (number|null);
            }

            /** Represents a DetectTimeSpoofingRequest. */
            class DetectTimeSpoofingRequest implements IDetectTimeSpoofingRequest {

                /**
                 * Constructs a new DetectTimeSpoofingRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.time.IDetectTimeSpoofingRequest);

                /** DetectTimeSpoofingRequest referenceTimeMs. */
                public referenceTimeMs: (number|Long);

                /** DetectTimeSpoofingRequest maxDriftMs. */
                public maxDriftMs: number;

                /**
                 * Creates a new DetectTimeSpoofingRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DetectTimeSpoofingRequest instance
                 */
                public static create(properties?: juicetokens.foundation.time.IDetectTimeSpoofingRequest): juicetokens.foundation.time.DetectTimeSpoofingRequest;

                /**
                 * Encodes the specified DetectTimeSpoofingRequest message. Does not implicitly {@link juicetokens.foundation.time.DetectTimeSpoofingRequest.verify|verify} messages.
                 * @param message DetectTimeSpoofingRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.time.IDetectTimeSpoofingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DetectTimeSpoofingRequest message, length delimited. Does not implicitly {@link juicetokens.foundation.time.DetectTimeSpoofingRequest.verify|verify} messages.
                 * @param message DetectTimeSpoofingRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.time.IDetectTimeSpoofingRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DetectTimeSpoofingRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DetectTimeSpoofingRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.time.DetectTimeSpoofingRequest;

                /**
                 * Decodes a DetectTimeSpoofingRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DetectTimeSpoofingRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.time.DetectTimeSpoofingRequest;

                /**
                 * Verifies a DetectTimeSpoofingRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DetectTimeSpoofingRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DetectTimeSpoofingRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.time.DetectTimeSpoofingRequest;

                /**
                 * Creates a plain object from a DetectTimeSpoofingRequest message. Also converts values to other types if specified.
                 * @param message DetectTimeSpoofingRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.time.DetectTimeSpoofingRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DetectTimeSpoofingRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DetectTimeSpoofingRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DetectTimeSpoofingResponse. */
            interface IDetectTimeSpoofingResponse {

                /** DetectTimeSpoofingResponse result */
                result?: (juicetokens.foundation.time.ISpoofingDetectionResult|null);
            }

            /** Represents a DetectTimeSpoofingResponse. */
            class DetectTimeSpoofingResponse implements IDetectTimeSpoofingResponse {

                /**
                 * Constructs a new DetectTimeSpoofingResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.time.IDetectTimeSpoofingResponse);

                /** DetectTimeSpoofingResponse result. */
                public result?: (juicetokens.foundation.time.ISpoofingDetectionResult|null);

                /**
                 * Creates a new DetectTimeSpoofingResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DetectTimeSpoofingResponse instance
                 */
                public static create(properties?: juicetokens.foundation.time.IDetectTimeSpoofingResponse): juicetokens.foundation.time.DetectTimeSpoofingResponse;

                /**
                 * Encodes the specified DetectTimeSpoofingResponse message. Does not implicitly {@link juicetokens.foundation.time.DetectTimeSpoofingResponse.verify|verify} messages.
                 * @param message DetectTimeSpoofingResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.time.IDetectTimeSpoofingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DetectTimeSpoofingResponse message, length delimited. Does not implicitly {@link juicetokens.foundation.time.DetectTimeSpoofingResponse.verify|verify} messages.
                 * @param message DetectTimeSpoofingResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.time.IDetectTimeSpoofingResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DetectTimeSpoofingResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DetectTimeSpoofingResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.time.DetectTimeSpoofingResponse;

                /**
                 * Decodes a DetectTimeSpoofingResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DetectTimeSpoofingResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.time.DetectTimeSpoofingResponse;

                /**
                 * Verifies a DetectTimeSpoofingResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DetectTimeSpoofingResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DetectTimeSpoofingResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.time.DetectTimeSpoofingResponse;

                /**
                 * Creates a plain object from a DetectTimeSpoofingResponse message. Also converts values to other types if specified.
                 * @param message DetectTimeSpoofingResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.time.DetectTimeSpoofingResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DetectTimeSpoofingResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DetectTimeSpoofingResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StreamTimeUpdatesRequest. */
            interface IStreamTimeUpdatesRequest {

                /** StreamTimeUpdatesRequest updateIntervalMs */
                updateIntervalMs?: (number|null);
            }

            /** Represents a StreamTimeUpdatesRequest. */
            class StreamTimeUpdatesRequest implements IStreamTimeUpdatesRequest {

                /**
                 * Constructs a new StreamTimeUpdatesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.foundation.time.IStreamTimeUpdatesRequest);

                /** StreamTimeUpdatesRequest updateIntervalMs. */
                public updateIntervalMs: number;

                /**
                 * Creates a new StreamTimeUpdatesRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StreamTimeUpdatesRequest instance
                 */
                public static create(properties?: juicetokens.foundation.time.IStreamTimeUpdatesRequest): juicetokens.foundation.time.StreamTimeUpdatesRequest;

                /**
                 * Encodes the specified StreamTimeUpdatesRequest message. Does not implicitly {@link juicetokens.foundation.time.StreamTimeUpdatesRequest.verify|verify} messages.
                 * @param message StreamTimeUpdatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.foundation.time.IStreamTimeUpdatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StreamTimeUpdatesRequest message, length delimited. Does not implicitly {@link juicetokens.foundation.time.StreamTimeUpdatesRequest.verify|verify} messages.
                 * @param message StreamTimeUpdatesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.foundation.time.IStreamTimeUpdatesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StreamTimeUpdatesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StreamTimeUpdatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.foundation.time.StreamTimeUpdatesRequest;

                /**
                 * Decodes a StreamTimeUpdatesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StreamTimeUpdatesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.foundation.time.StreamTimeUpdatesRequest;

                /**
                 * Verifies a StreamTimeUpdatesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StreamTimeUpdatesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StreamTimeUpdatesRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.foundation.time.StreamTimeUpdatesRequest;

                /**
                 * Creates a plain object from a StreamTimeUpdatesRequest message. Also converts values to other types if specified.
                 * @param message StreamTimeUpdatesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.foundation.time.StreamTimeUpdatesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StreamTimeUpdatesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StreamTimeUpdatesRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }
    }

    /** Namespace transport. */
    namespace transport {

        /** Namespace message. */
        namespace message {

            /** Properties of a MessageFrame. */
            interface IMessageFrame {

                /** MessageFrame frameId */
                frameId?: (string|null);

                /** MessageFrame type */
                type?: (juicetokens.transport.message.FrameType|null);

                /** MessageFrame payload */
                payload?: (Uint8Array|null);

                /** MessageFrame headers */
                headers?: ({ [k: string]: string }|null);

                /** MessageFrame timestampMs */
                timestampMs?: (number|Long|null);

                /** MessageFrame compression */
                compression?: (juicetokens.transport.message.CompressionType|null);

                /** MessageFrame chunks */
                chunks?: (juicetokens.transport.message.IChunkInfo[]|null);

                /** MessageFrame protocolVersion */
                protocolVersion?: (number|null);

                /** MessageFrame sequenceNumber */
                sequenceNumber?: (number|null);
            }

            /** Represents a MessageFrame. */
            class MessageFrame implements IMessageFrame {

                /**
                 * Constructs a new MessageFrame.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IMessageFrame);

                /** MessageFrame frameId. */
                public frameId: string;

                /** MessageFrame type. */
                public type: juicetokens.transport.message.FrameType;

                /** MessageFrame payload. */
                public payload: Uint8Array;

                /** MessageFrame headers. */
                public headers: { [k: string]: string };

                /** MessageFrame timestampMs. */
                public timestampMs: (number|Long);

                /** MessageFrame compression. */
                public compression: juicetokens.transport.message.CompressionType;

                /** MessageFrame chunks. */
                public chunks: juicetokens.transport.message.IChunkInfo[];

                /** MessageFrame protocolVersion. */
                public protocolVersion: number;

                /** MessageFrame sequenceNumber. */
                public sequenceNumber: number;

                /**
                 * Creates a new MessageFrame instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MessageFrame instance
                 */
                public static create(properties?: juicetokens.transport.message.IMessageFrame): juicetokens.transport.message.MessageFrame;

                /**
                 * Encodes the specified MessageFrame message. Does not implicitly {@link juicetokens.transport.message.MessageFrame.verify|verify} messages.
                 * @param message MessageFrame message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IMessageFrame, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MessageFrame message, length delimited. Does not implicitly {@link juicetokens.transport.message.MessageFrame.verify|verify} messages.
                 * @param message MessageFrame message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IMessageFrame, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MessageFrame message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MessageFrame
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.MessageFrame;

                /**
                 * Decodes a MessageFrame message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MessageFrame
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.MessageFrame;

                /**
                 * Verifies a MessageFrame message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MessageFrame message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MessageFrame
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.MessageFrame;

                /**
                 * Creates a plain object from a MessageFrame message. Also converts values to other types if specified.
                 * @param message MessageFrame
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.MessageFrame, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MessageFrame to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for MessageFrame
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** FrameType enum. */
            enum FrameType {
                DATA = 0,
                CONTROL = 1,
                HEARTBEAT = 2,
                ERROR = 3,
                ACKNOWLEDGMENT = 4
            }

            /** CompressionType enum. */
            enum CompressionType {
                NONE = 0,
                GZIP = 1,
                LZ4 = 2,
                ZSTD = 3
            }

            /** Properties of a ChunkInfo. */
            interface IChunkInfo {

                /** ChunkInfo chunkIndex */
                chunkIndex?: (number|null);

                /** ChunkInfo totalChunks */
                totalChunks?: (number|null);

                /** ChunkInfo chunkSize */
                chunkSize?: (number|null);

                /** ChunkInfo chunkHash */
                chunkHash?: (Uint8Array|null);

                /** ChunkInfo completeHash */
                completeHash?: (Uint8Array|null);
            }

            /** Represents a ChunkInfo. */
            class ChunkInfo implements IChunkInfo {

                /**
                 * Constructs a new ChunkInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IChunkInfo);

                /** ChunkInfo chunkIndex. */
                public chunkIndex: number;

                /** ChunkInfo totalChunks. */
                public totalChunks: number;

                /** ChunkInfo chunkSize. */
                public chunkSize: number;

                /** ChunkInfo chunkHash. */
                public chunkHash: Uint8Array;

                /** ChunkInfo completeHash. */
                public completeHash: Uint8Array;

                /**
                 * Creates a new ChunkInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ChunkInfo instance
                 */
                public static create(properties?: juicetokens.transport.message.IChunkInfo): juicetokens.transport.message.ChunkInfo;

                /**
                 * Encodes the specified ChunkInfo message. Does not implicitly {@link juicetokens.transport.message.ChunkInfo.verify|verify} messages.
                 * @param message ChunkInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IChunkInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ChunkInfo message, length delimited. Does not implicitly {@link juicetokens.transport.message.ChunkInfo.verify|verify} messages.
                 * @param message ChunkInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IChunkInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ChunkInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ChunkInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.ChunkInfo;

                /**
                 * Decodes a ChunkInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ChunkInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.ChunkInfo;

                /**
                 * Verifies a ChunkInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ChunkInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ChunkInfo
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.ChunkInfo;

                /**
                 * Creates a plain object from a ChunkInfo message. Also converts values to other types if specified.
                 * @param message ChunkInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.ChunkInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ChunkInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ChunkInfo
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an Acknowledgment. */
            interface IAcknowledgment {

                /** Acknowledgment frameId */
                frameId?: (string|null);

                /** Acknowledgment success */
                success?: (boolean|null);

                /** Acknowledgment errorMessage */
                errorMessage?: (string|null);

                /** Acknowledgment timestampMs */
                timestampMs?: (number|Long|null);

                /** Acknowledgment receivedChunks */
                receivedChunks?: (number[]|null);
            }

            /** Represents an Acknowledgment. */
            class Acknowledgment implements IAcknowledgment {

                /**
                 * Constructs a new Acknowledgment.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IAcknowledgment);

                /** Acknowledgment frameId. */
                public frameId: string;

                /** Acknowledgment success. */
                public success: boolean;

                /** Acknowledgment errorMessage. */
                public errorMessage: string;

                /** Acknowledgment timestampMs. */
                public timestampMs: (number|Long);

                /** Acknowledgment receivedChunks. */
                public receivedChunks: number[];

                /**
                 * Creates a new Acknowledgment instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Acknowledgment instance
                 */
                public static create(properties?: juicetokens.transport.message.IAcknowledgment): juicetokens.transport.message.Acknowledgment;

                /**
                 * Encodes the specified Acknowledgment message. Does not implicitly {@link juicetokens.transport.message.Acknowledgment.verify|verify} messages.
                 * @param message Acknowledgment message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IAcknowledgment, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Acknowledgment message, length delimited. Does not implicitly {@link juicetokens.transport.message.Acknowledgment.verify|verify} messages.
                 * @param message Acknowledgment message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IAcknowledgment, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Acknowledgment message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Acknowledgment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.Acknowledgment;

                /**
                 * Decodes an Acknowledgment message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Acknowledgment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.Acknowledgment;

                /**
                 * Verifies an Acknowledgment message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Acknowledgment message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Acknowledgment
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.Acknowledgment;

                /**
                 * Creates a plain object from an Acknowledgment message. Also converts values to other types if specified.
                 * @param message Acknowledgment
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.Acknowledgment, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Acknowledgment to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Acknowledgment
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a SessionResumptionToken. */
            interface ISessionResumptionToken {

                /** SessionResumptionToken token */
                token?: (string|null);

                /** SessionResumptionToken expiresAtMs */
                expiresAtMs?: (number|Long|null);

                /** SessionResumptionToken sessionState */
                sessionState?: ({ [k: string]: string }|null);

                /** SessionResumptionToken sessionId */
                sessionId?: (string|null);

                /** SessionResumptionToken lastSequence */
                lastSequence?: (number|null);

                /** SessionResumptionToken signature */
                signature?: (Uint8Array|null);
            }

            /** Represents a SessionResumptionToken. */
            class SessionResumptionToken implements ISessionResumptionToken {

                /**
                 * Constructs a new SessionResumptionToken.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.ISessionResumptionToken);

                /** SessionResumptionToken token. */
                public token: string;

                /** SessionResumptionToken expiresAtMs. */
                public expiresAtMs: (number|Long);

                /** SessionResumptionToken sessionState. */
                public sessionState: { [k: string]: string };

                /** SessionResumptionToken sessionId. */
                public sessionId: string;

                /** SessionResumptionToken lastSequence. */
                public lastSequence: number;

                /** SessionResumptionToken signature. */
                public signature: Uint8Array;

                /**
                 * Creates a new SessionResumptionToken instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SessionResumptionToken instance
                 */
                public static create(properties?: juicetokens.transport.message.ISessionResumptionToken): juicetokens.transport.message.SessionResumptionToken;

                /**
                 * Encodes the specified SessionResumptionToken message. Does not implicitly {@link juicetokens.transport.message.SessionResumptionToken.verify|verify} messages.
                 * @param message SessionResumptionToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.ISessionResumptionToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SessionResumptionToken message, length delimited. Does not implicitly {@link juicetokens.transport.message.SessionResumptionToken.verify|verify} messages.
                 * @param message SessionResumptionToken message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.ISessionResumptionToken, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SessionResumptionToken message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SessionResumptionToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.SessionResumptionToken;

                /**
                 * Decodes a SessionResumptionToken message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SessionResumptionToken
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.SessionResumptionToken;

                /**
                 * Verifies a SessionResumptionToken message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SessionResumptionToken message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SessionResumptionToken
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.SessionResumptionToken;

                /**
                 * Creates a plain object from a SessionResumptionToken message. Also converts values to other types if specified.
                 * @param message SessionResumptionToken
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.SessionResumptionToken, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SessionResumptionToken to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SessionResumptionToken
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RecoveryRequest. */
            interface IRecoveryRequest {

                /** RecoveryRequest frameId */
                frameId?: (string|null);

                /** RecoveryRequest missingChunks */
                missingChunks?: (number[]|null);

                /** RecoveryRequest timestampMs */
                timestampMs?: (number|Long|null);

                /** RecoveryRequest sessionId */
                sessionId?: (string|null);

                /** RecoveryRequest resumptionToken */
                resumptionToken?: (juicetokens.transport.message.ISessionResumptionToken|null);
            }

            /** Represents a RecoveryRequest. */
            class RecoveryRequest implements IRecoveryRequest {

                /**
                 * Constructs a new RecoveryRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IRecoveryRequest);

                /** RecoveryRequest frameId. */
                public frameId: string;

                /** RecoveryRequest missingChunks. */
                public missingChunks: number[];

                /** RecoveryRequest timestampMs. */
                public timestampMs: (number|Long);

                /** RecoveryRequest sessionId. */
                public sessionId: string;

                /** RecoveryRequest resumptionToken. */
                public resumptionToken?: (juicetokens.transport.message.ISessionResumptionToken|null);

                /**
                 * Creates a new RecoveryRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RecoveryRequest instance
                 */
                public static create(properties?: juicetokens.transport.message.IRecoveryRequest): juicetokens.transport.message.RecoveryRequest;

                /**
                 * Encodes the specified RecoveryRequest message. Does not implicitly {@link juicetokens.transport.message.RecoveryRequest.verify|verify} messages.
                 * @param message RecoveryRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IRecoveryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RecoveryRequest message, length delimited. Does not implicitly {@link juicetokens.transport.message.RecoveryRequest.verify|verify} messages.
                 * @param message RecoveryRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IRecoveryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RecoveryRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RecoveryRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.RecoveryRequest;

                /**
                 * Decodes a RecoveryRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RecoveryRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.RecoveryRequest;

                /**
                 * Verifies a RecoveryRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RecoveryRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RecoveryRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.RecoveryRequest;

                /**
                 * Creates a plain object from a RecoveryRequest message. Also converts values to other types if specified.
                 * @param message RecoveryRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.RecoveryRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RecoveryRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RecoveryRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TransportError. */
            interface ITransportError {

                /** TransportError type */
                type?: (juicetokens.transport.message.TransportError.ErrorType|null);

                /** TransportError message */
                message?: (string|null);

                /** TransportError frameId */
                frameId?: (string|null);

                /** TransportError timestampMs */
                timestampMs?: (number|Long|null);

                /** TransportError context */
                context?: ({ [k: string]: string }|null);

                /** TransportError recoverable */
                recoverable?: (boolean|null);

                /** TransportError recoveryHint */
                recoveryHint?: (string|null);
            }

            /** Represents a TransportError. */
            class TransportError implements ITransportError {

                /**
                 * Constructs a new TransportError.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.ITransportError);

                /** TransportError type. */
                public type: juicetokens.transport.message.TransportError.ErrorType;

                /** TransportError message. */
                public message: string;

                /** TransportError frameId. */
                public frameId: string;

                /** TransportError timestampMs. */
                public timestampMs: (number|Long);

                /** TransportError context. */
                public context: { [k: string]: string };

                /** TransportError recoverable. */
                public recoverable: boolean;

                /** TransportError recoveryHint. */
                public recoveryHint: string;

                /**
                 * Creates a new TransportError instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TransportError instance
                 */
                public static create(properties?: juicetokens.transport.message.ITransportError): juicetokens.transport.message.TransportError;

                /**
                 * Encodes the specified TransportError message. Does not implicitly {@link juicetokens.transport.message.TransportError.verify|verify} messages.
                 * @param message TransportError message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.ITransportError, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TransportError message, length delimited. Does not implicitly {@link juicetokens.transport.message.TransportError.verify|verify} messages.
                 * @param message TransportError message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.ITransportError, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TransportError message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TransportError
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.TransportError;

                /**
                 * Decodes a TransportError message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TransportError
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.TransportError;

                /**
                 * Verifies a TransportError message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TransportError message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TransportError
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.TransportError;

                /**
                 * Creates a plain object from a TransportError message. Also converts values to other types if specified.
                 * @param message TransportError
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.TransportError, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TransportError to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TransportError
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace TransportError {

                /** ErrorType enum. */
                enum ErrorType {
                    UNKNOWN = 0,
                    TIMEOUT = 1,
                    CORRUPTION = 2,
                    CONNECTION_LOST = 3,
                    PROTOCOL_ERROR = 4,
                    RESOURCE_EXHAUSTED = 5,
                    SECURITY = 6
                }
            }

            /** Properties of a Message. */
            interface IMessage {

                /** Message messageId */
                messageId?: (string|null);

                /** Message content */
                content?: (Uint8Array|null);

                /** Message metadata */
                metadata?: ({ [k: string]: string }|null);

                /** Message createdAtMs */
                createdAtMs?: (number|Long|null);

                /** Message senderId */
                senderId?: (string|null);

                /** Message recipientId */
                recipientId?: (string|null);

                /** Message ttlSeconds */
                ttlSeconds?: (number|null);

                /** Message priority */
                priority?: (juicetokens.transport.message.Priority|null);
            }

            /** Represents a Message. */
            class Message implements IMessage {

                /**
                 * Constructs a new Message.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IMessage);

                /** Message messageId. */
                public messageId: string;

                /** Message content. */
                public content: Uint8Array;

                /** Message metadata. */
                public metadata: { [k: string]: string };

                /** Message createdAtMs. */
                public createdAtMs: (number|Long);

                /** Message senderId. */
                public senderId: string;

                /** Message recipientId. */
                public recipientId: string;

                /** Message ttlSeconds. */
                public ttlSeconds: number;

                /** Message priority. */
                public priority: juicetokens.transport.message.Priority;

                /**
                 * Creates a new Message instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Message instance
                 */
                public static create(properties?: juicetokens.transport.message.IMessage): juicetokens.transport.message.Message;

                /**
                 * Encodes the specified Message message. Does not implicitly {@link juicetokens.transport.message.Message.verify|verify} messages.
                 * @param message Message message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Message message, length delimited. Does not implicitly {@link juicetokens.transport.message.Message.verify|verify} messages.
                 * @param message Message message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IMessage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Message message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Message
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.Message;

                /**
                 * Decodes a Message message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Message
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.Message;

                /**
                 * Verifies a Message message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Message message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Message
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.Message;

                /**
                 * Creates a plain object from a Message message. Also converts values to other types if specified.
                 * @param message Message
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.Message, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Message to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Message
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Priority enum. */
            enum Priority {
                NORMAL = 0,
                HIGH = 1,
                CRITICAL = 2,
                LOW = 3
            }

            /** Represents a MessageService */
            class MessageService extends $protobuf.rpc.Service {

                /**
                 * Constructs a new MessageService service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Creates new MessageService service using the specified rpc implementation.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 * @returns RPC service. Useful where requests and/or responses are streamed.
                 */
                public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): MessageService;

                /**
                 * Calls SendFrame.
                 * @param request SendFrameRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and SendFrameResponse
                 */
                public sendFrame(request: juicetokens.transport.message.ISendFrameRequest, callback: juicetokens.transport.message.MessageService.SendFrameCallback): void;

                /**
                 * Calls SendFrame.
                 * @param request SendFrameRequest message or plain object
                 * @returns Promise
                 */
                public sendFrame(request: juicetokens.transport.message.ISendFrameRequest): Promise<juicetokens.transport.message.SendFrameResponse>;

                /**
                 * Calls ReceiveFrame.
                 * @param request ReceiveFrameRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and ReceiveFrameResponse
                 */
                public receiveFrame(request: juicetokens.transport.message.IReceiveFrameRequest, callback: juicetokens.transport.message.MessageService.ReceiveFrameCallback): void;

                /**
                 * Calls ReceiveFrame.
                 * @param request ReceiveFrameRequest message or plain object
                 * @returns Promise
                 */
                public receiveFrame(request: juicetokens.transport.message.IReceiveFrameRequest): Promise<juicetokens.transport.message.ReceiveFrameResponse>;

                /**
                 * Calls AcknowledgeFrame.
                 * @param request AcknowledgeFrameRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and AcknowledgeFrameResponse
                 */
                public acknowledgeFrame(request: juicetokens.transport.message.IAcknowledgeFrameRequest, callback: juicetokens.transport.message.MessageService.AcknowledgeFrameCallback): void;

                /**
                 * Calls AcknowledgeFrame.
                 * @param request AcknowledgeFrameRequest message or plain object
                 * @returns Promise
                 */
                public acknowledgeFrame(request: juicetokens.transport.message.IAcknowledgeFrameRequest): Promise<juicetokens.transport.message.AcknowledgeFrameResponse>;

                /**
                 * Calls RequestRecovery.
                 * @param request RequestRecoveryRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and RequestRecoveryResponse
                 */
                public requestRecovery(request: juicetokens.transport.message.IRequestRecoveryRequest, callback: juicetokens.transport.message.MessageService.RequestRecoveryCallback): void;

                /**
                 * Calls RequestRecovery.
                 * @param request RequestRecoveryRequest message or plain object
                 * @returns Promise
                 */
                public requestRecovery(request: juicetokens.transport.message.IRequestRecoveryRequest): Promise<juicetokens.transport.message.RequestRecoveryResponse>;

                /**
                 * Calls StreamFrames.
                 * @param request StreamFramesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and MessageFrame
                 */
                public streamFrames(request: juicetokens.transport.message.IStreamFramesRequest, callback: juicetokens.transport.message.MessageService.StreamFramesCallback): void;

                /**
                 * Calls StreamFrames.
                 * @param request StreamFramesRequest message or plain object
                 * @returns Promise
                 */
                public streamFrames(request: juicetokens.transport.message.IStreamFramesRequest): Promise<juicetokens.transport.message.MessageFrame>;
            }

            namespace MessageService {

                /**
                 * Callback as used by {@link juicetokens.transport.message.MessageService#sendFrame}.
                 * @param error Error, if any
                 * @param [response] SendFrameResponse
                 */
                type SendFrameCallback = (error: (Error|null), response?: juicetokens.transport.message.SendFrameResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.message.MessageService#receiveFrame}.
                 * @param error Error, if any
                 * @param [response] ReceiveFrameResponse
                 */
                type ReceiveFrameCallback = (error: (Error|null), response?: juicetokens.transport.message.ReceiveFrameResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.message.MessageService#acknowledgeFrame}.
                 * @param error Error, if any
                 * @param [response] AcknowledgeFrameResponse
                 */
                type AcknowledgeFrameCallback = (error: (Error|null), response?: juicetokens.transport.message.AcknowledgeFrameResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.message.MessageService#requestRecovery}.
                 * @param error Error, if any
                 * @param [response] RequestRecoveryResponse
                 */
                type RequestRecoveryCallback = (error: (Error|null), response?: juicetokens.transport.message.RequestRecoveryResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.message.MessageService#streamFrames}.
                 * @param error Error, if any
                 * @param [response] MessageFrame
                 */
                type StreamFramesCallback = (error: (Error|null), response?: juicetokens.transport.message.MessageFrame) => void;
            }

            /** Properties of a SendFrameRequest. */
            interface ISendFrameRequest {

                /** SendFrameRequest frame */
                frame?: (juicetokens.transport.message.IMessageFrame|null);

                /** SendFrameRequest requireAck */
                requireAck?: (boolean|null);

                /** SendFrameRequest timeoutMs */
                timeoutMs?: (number|null);
            }

            /** Represents a SendFrameRequest. */
            class SendFrameRequest implements ISendFrameRequest {

                /**
                 * Constructs a new SendFrameRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.ISendFrameRequest);

                /** SendFrameRequest frame. */
                public frame?: (juicetokens.transport.message.IMessageFrame|null);

                /** SendFrameRequest requireAck. */
                public requireAck: boolean;

                /** SendFrameRequest timeoutMs. */
                public timeoutMs: number;

                /**
                 * Creates a new SendFrameRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SendFrameRequest instance
                 */
                public static create(properties?: juicetokens.transport.message.ISendFrameRequest): juicetokens.transport.message.SendFrameRequest;

                /**
                 * Encodes the specified SendFrameRequest message. Does not implicitly {@link juicetokens.transport.message.SendFrameRequest.verify|verify} messages.
                 * @param message SendFrameRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.ISendFrameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SendFrameRequest message, length delimited. Does not implicitly {@link juicetokens.transport.message.SendFrameRequest.verify|verify} messages.
                 * @param message SendFrameRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.ISendFrameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SendFrameRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SendFrameRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.SendFrameRequest;

                /**
                 * Decodes a SendFrameRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SendFrameRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.SendFrameRequest;

                /**
                 * Verifies a SendFrameRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SendFrameRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SendFrameRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.SendFrameRequest;

                /**
                 * Creates a plain object from a SendFrameRequest message. Also converts values to other types if specified.
                 * @param message SendFrameRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.SendFrameRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SendFrameRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SendFrameRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a SendFrameResponse. */
            interface ISendFrameResponse {

                /** SendFrameResponse success */
                success?: (boolean|null);

                /** SendFrameResponse errorMessage */
                errorMessage?: (string|null);

                /** SendFrameResponse frameId */
                frameId?: (string|null);
            }

            /** Represents a SendFrameResponse. */
            class SendFrameResponse implements ISendFrameResponse {

                /**
                 * Constructs a new SendFrameResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.ISendFrameResponse);

                /** SendFrameResponse success. */
                public success: boolean;

                /** SendFrameResponse errorMessage. */
                public errorMessage: string;

                /** SendFrameResponse frameId. */
                public frameId: string;

                /**
                 * Creates a new SendFrameResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SendFrameResponse instance
                 */
                public static create(properties?: juicetokens.transport.message.ISendFrameResponse): juicetokens.transport.message.SendFrameResponse;

                /**
                 * Encodes the specified SendFrameResponse message. Does not implicitly {@link juicetokens.transport.message.SendFrameResponse.verify|verify} messages.
                 * @param message SendFrameResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.ISendFrameResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SendFrameResponse message, length delimited. Does not implicitly {@link juicetokens.transport.message.SendFrameResponse.verify|verify} messages.
                 * @param message SendFrameResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.ISendFrameResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SendFrameResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SendFrameResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.SendFrameResponse;

                /**
                 * Decodes a SendFrameResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SendFrameResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.SendFrameResponse;

                /**
                 * Verifies a SendFrameResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SendFrameResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SendFrameResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.SendFrameResponse;

                /**
                 * Creates a plain object from a SendFrameResponse message. Also converts values to other types if specified.
                 * @param message SendFrameResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.SendFrameResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SendFrameResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SendFrameResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ReceiveFrameRequest. */
            interface IReceiveFrameRequest {

                /** ReceiveFrameRequest timeoutMs */
                timeoutMs?: (number|null);

                /** ReceiveFrameRequest sessionId */
                sessionId?: (string|null);
            }

            /** Represents a ReceiveFrameRequest. */
            class ReceiveFrameRequest implements IReceiveFrameRequest {

                /**
                 * Constructs a new ReceiveFrameRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IReceiveFrameRequest);

                /** ReceiveFrameRequest timeoutMs. */
                public timeoutMs: number;

                /** ReceiveFrameRequest sessionId. */
                public sessionId: string;

                /**
                 * Creates a new ReceiveFrameRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReceiveFrameRequest instance
                 */
                public static create(properties?: juicetokens.transport.message.IReceiveFrameRequest): juicetokens.transport.message.ReceiveFrameRequest;

                /**
                 * Encodes the specified ReceiveFrameRequest message. Does not implicitly {@link juicetokens.transport.message.ReceiveFrameRequest.verify|verify} messages.
                 * @param message ReceiveFrameRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IReceiveFrameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReceiveFrameRequest message, length delimited. Does not implicitly {@link juicetokens.transport.message.ReceiveFrameRequest.verify|verify} messages.
                 * @param message ReceiveFrameRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IReceiveFrameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReceiveFrameRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReceiveFrameRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.ReceiveFrameRequest;

                /**
                 * Decodes a ReceiveFrameRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReceiveFrameRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.ReceiveFrameRequest;

                /**
                 * Verifies a ReceiveFrameRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReceiveFrameRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReceiveFrameRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.ReceiveFrameRequest;

                /**
                 * Creates a plain object from a ReceiveFrameRequest message. Also converts values to other types if specified.
                 * @param message ReceiveFrameRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.ReceiveFrameRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReceiveFrameRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ReceiveFrameRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ReceiveFrameResponse. */
            interface IReceiveFrameResponse {

                /** ReceiveFrameResponse frame */
                frame?: (juicetokens.transport.message.IMessageFrame|null);
            }

            /** Represents a ReceiveFrameResponse. */
            class ReceiveFrameResponse implements IReceiveFrameResponse {

                /**
                 * Constructs a new ReceiveFrameResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IReceiveFrameResponse);

                /** ReceiveFrameResponse frame. */
                public frame?: (juicetokens.transport.message.IMessageFrame|null);

                /**
                 * Creates a new ReceiveFrameResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReceiveFrameResponse instance
                 */
                public static create(properties?: juicetokens.transport.message.IReceiveFrameResponse): juicetokens.transport.message.ReceiveFrameResponse;

                /**
                 * Encodes the specified ReceiveFrameResponse message. Does not implicitly {@link juicetokens.transport.message.ReceiveFrameResponse.verify|verify} messages.
                 * @param message ReceiveFrameResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IReceiveFrameResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReceiveFrameResponse message, length delimited. Does not implicitly {@link juicetokens.transport.message.ReceiveFrameResponse.verify|verify} messages.
                 * @param message ReceiveFrameResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IReceiveFrameResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReceiveFrameResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReceiveFrameResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.ReceiveFrameResponse;

                /**
                 * Decodes a ReceiveFrameResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReceiveFrameResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.ReceiveFrameResponse;

                /**
                 * Verifies a ReceiveFrameResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReceiveFrameResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReceiveFrameResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.ReceiveFrameResponse;

                /**
                 * Creates a plain object from a ReceiveFrameResponse message. Also converts values to other types if specified.
                 * @param message ReceiveFrameResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.ReceiveFrameResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReceiveFrameResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ReceiveFrameResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AcknowledgeFrameRequest. */
            interface IAcknowledgeFrameRequest {

                /** AcknowledgeFrameRequest frameId */
                frameId?: (string|null);

                /** AcknowledgeFrameRequest success */
                success?: (boolean|null);

                /** AcknowledgeFrameRequest errorMessage */
                errorMessage?: (string|null);

                /** AcknowledgeFrameRequest receivedChunks */
                receivedChunks?: (number[]|null);
            }

            /** Represents an AcknowledgeFrameRequest. */
            class AcknowledgeFrameRequest implements IAcknowledgeFrameRequest {

                /**
                 * Constructs a new AcknowledgeFrameRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IAcknowledgeFrameRequest);

                /** AcknowledgeFrameRequest frameId. */
                public frameId: string;

                /** AcknowledgeFrameRequest success. */
                public success: boolean;

                /** AcknowledgeFrameRequest errorMessage. */
                public errorMessage: string;

                /** AcknowledgeFrameRequest receivedChunks. */
                public receivedChunks: number[];

                /**
                 * Creates a new AcknowledgeFrameRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AcknowledgeFrameRequest instance
                 */
                public static create(properties?: juicetokens.transport.message.IAcknowledgeFrameRequest): juicetokens.transport.message.AcknowledgeFrameRequest;

                /**
                 * Encodes the specified AcknowledgeFrameRequest message. Does not implicitly {@link juicetokens.transport.message.AcknowledgeFrameRequest.verify|verify} messages.
                 * @param message AcknowledgeFrameRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IAcknowledgeFrameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AcknowledgeFrameRequest message, length delimited. Does not implicitly {@link juicetokens.transport.message.AcknowledgeFrameRequest.verify|verify} messages.
                 * @param message AcknowledgeFrameRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IAcknowledgeFrameRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AcknowledgeFrameRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AcknowledgeFrameRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.AcknowledgeFrameRequest;

                /**
                 * Decodes an AcknowledgeFrameRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AcknowledgeFrameRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.AcknowledgeFrameRequest;

                /**
                 * Verifies an AcknowledgeFrameRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AcknowledgeFrameRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AcknowledgeFrameRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.AcknowledgeFrameRequest;

                /**
                 * Creates a plain object from an AcknowledgeFrameRequest message. Also converts values to other types if specified.
                 * @param message AcknowledgeFrameRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.AcknowledgeFrameRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AcknowledgeFrameRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AcknowledgeFrameRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AcknowledgeFrameResponse. */
            interface IAcknowledgeFrameResponse {

                /** AcknowledgeFrameResponse success */
                success?: (boolean|null);
            }

            /** Represents an AcknowledgeFrameResponse. */
            class AcknowledgeFrameResponse implements IAcknowledgeFrameResponse {

                /**
                 * Constructs a new AcknowledgeFrameResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IAcknowledgeFrameResponse);

                /** AcknowledgeFrameResponse success. */
                public success: boolean;

                /**
                 * Creates a new AcknowledgeFrameResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AcknowledgeFrameResponse instance
                 */
                public static create(properties?: juicetokens.transport.message.IAcknowledgeFrameResponse): juicetokens.transport.message.AcknowledgeFrameResponse;

                /**
                 * Encodes the specified AcknowledgeFrameResponse message. Does not implicitly {@link juicetokens.transport.message.AcknowledgeFrameResponse.verify|verify} messages.
                 * @param message AcknowledgeFrameResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IAcknowledgeFrameResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AcknowledgeFrameResponse message, length delimited. Does not implicitly {@link juicetokens.transport.message.AcknowledgeFrameResponse.verify|verify} messages.
                 * @param message AcknowledgeFrameResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IAcknowledgeFrameResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AcknowledgeFrameResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AcknowledgeFrameResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.AcknowledgeFrameResponse;

                /**
                 * Decodes an AcknowledgeFrameResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AcknowledgeFrameResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.AcknowledgeFrameResponse;

                /**
                 * Verifies an AcknowledgeFrameResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AcknowledgeFrameResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AcknowledgeFrameResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.AcknowledgeFrameResponse;

                /**
                 * Creates a plain object from an AcknowledgeFrameResponse message. Also converts values to other types if specified.
                 * @param message AcknowledgeFrameResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.AcknowledgeFrameResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AcknowledgeFrameResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AcknowledgeFrameResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RequestRecoveryRequest. */
            interface IRequestRecoveryRequest {

                /** RequestRecoveryRequest frameId */
                frameId?: (string|null);

                /** RequestRecoveryRequest missingChunks */
                missingChunks?: (number[]|null);

                /** RequestRecoveryRequest sessionId */
                sessionId?: (string|null);
            }

            /** Represents a RequestRecoveryRequest. */
            class RequestRecoveryRequest implements IRequestRecoveryRequest {

                /**
                 * Constructs a new RequestRecoveryRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IRequestRecoveryRequest);

                /** RequestRecoveryRequest frameId. */
                public frameId: string;

                /** RequestRecoveryRequest missingChunks. */
                public missingChunks: number[];

                /** RequestRecoveryRequest sessionId. */
                public sessionId: string;

                /**
                 * Creates a new RequestRecoveryRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RequestRecoveryRequest instance
                 */
                public static create(properties?: juicetokens.transport.message.IRequestRecoveryRequest): juicetokens.transport.message.RequestRecoveryRequest;

                /**
                 * Encodes the specified RequestRecoveryRequest message. Does not implicitly {@link juicetokens.transport.message.RequestRecoveryRequest.verify|verify} messages.
                 * @param message RequestRecoveryRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IRequestRecoveryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RequestRecoveryRequest message, length delimited. Does not implicitly {@link juicetokens.transport.message.RequestRecoveryRequest.verify|verify} messages.
                 * @param message RequestRecoveryRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IRequestRecoveryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RequestRecoveryRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RequestRecoveryRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.RequestRecoveryRequest;

                /**
                 * Decodes a RequestRecoveryRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RequestRecoveryRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.RequestRecoveryRequest;

                /**
                 * Verifies a RequestRecoveryRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RequestRecoveryRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RequestRecoveryRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.RequestRecoveryRequest;

                /**
                 * Creates a plain object from a RequestRecoveryRequest message. Also converts values to other types if specified.
                 * @param message RequestRecoveryRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.RequestRecoveryRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RequestRecoveryRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RequestRecoveryRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RequestRecoveryResponse. */
            interface IRequestRecoveryResponse {

                /** RequestRecoveryResponse recoveredFrames */
                recoveredFrames?: (juicetokens.transport.message.IMessageFrame[]|null);

                /** RequestRecoveryResponse success */
                success?: (boolean|null);

                /** RequestRecoveryResponse errorMessage */
                errorMessage?: (string|null);
            }

            /** Represents a RequestRecoveryResponse. */
            class RequestRecoveryResponse implements IRequestRecoveryResponse {

                /**
                 * Constructs a new RequestRecoveryResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IRequestRecoveryResponse);

                /** RequestRecoveryResponse recoveredFrames. */
                public recoveredFrames: juicetokens.transport.message.IMessageFrame[];

                /** RequestRecoveryResponse success. */
                public success: boolean;

                /** RequestRecoveryResponse errorMessage. */
                public errorMessage: string;

                /**
                 * Creates a new RequestRecoveryResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RequestRecoveryResponse instance
                 */
                public static create(properties?: juicetokens.transport.message.IRequestRecoveryResponse): juicetokens.transport.message.RequestRecoveryResponse;

                /**
                 * Encodes the specified RequestRecoveryResponse message. Does not implicitly {@link juicetokens.transport.message.RequestRecoveryResponse.verify|verify} messages.
                 * @param message RequestRecoveryResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IRequestRecoveryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RequestRecoveryResponse message, length delimited. Does not implicitly {@link juicetokens.transport.message.RequestRecoveryResponse.verify|verify} messages.
                 * @param message RequestRecoveryResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IRequestRecoveryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RequestRecoveryResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RequestRecoveryResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.RequestRecoveryResponse;

                /**
                 * Decodes a RequestRecoveryResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RequestRecoveryResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.RequestRecoveryResponse;

                /**
                 * Verifies a RequestRecoveryResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RequestRecoveryResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RequestRecoveryResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.RequestRecoveryResponse;

                /**
                 * Creates a plain object from a RequestRecoveryResponse message. Also converts values to other types if specified.
                 * @param message RequestRecoveryResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.RequestRecoveryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RequestRecoveryResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RequestRecoveryResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StreamFramesRequest. */
            interface IStreamFramesRequest {

                /** StreamFramesRequest maxFrames */
                maxFrames?: (number|null);

                /** StreamFramesRequest timeoutMs */
                timeoutMs?: (number|null);

                /** StreamFramesRequest sessionId */
                sessionId?: (string|null);
            }

            /** Represents a StreamFramesRequest. */
            class StreamFramesRequest implements IStreamFramesRequest {

                /**
                 * Constructs a new StreamFramesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.message.IStreamFramesRequest);

                /** StreamFramesRequest maxFrames. */
                public maxFrames: number;

                /** StreamFramesRequest timeoutMs. */
                public timeoutMs: number;

                /** StreamFramesRequest sessionId. */
                public sessionId: string;

                /**
                 * Creates a new StreamFramesRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StreamFramesRequest instance
                 */
                public static create(properties?: juicetokens.transport.message.IStreamFramesRequest): juicetokens.transport.message.StreamFramesRequest;

                /**
                 * Encodes the specified StreamFramesRequest message. Does not implicitly {@link juicetokens.transport.message.StreamFramesRequest.verify|verify} messages.
                 * @param message StreamFramesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.message.IStreamFramesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StreamFramesRequest message, length delimited. Does not implicitly {@link juicetokens.transport.message.StreamFramesRequest.verify|verify} messages.
                 * @param message StreamFramesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.message.IStreamFramesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StreamFramesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StreamFramesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.message.StreamFramesRequest;

                /**
                 * Decodes a StreamFramesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StreamFramesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.message.StreamFramesRequest;

                /**
                 * Verifies a StreamFramesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StreamFramesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StreamFramesRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.message.StreamFramesRequest;

                /**
                 * Creates a plain object from a StreamFramesRequest message. Also converts values to other types if specified.
                 * @param message StreamFramesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.message.StreamFramesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StreamFramesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StreamFramesRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Namespace native_bridge. */
        namespace native_bridge {

            /** Properties of a NativeBridgeRequest. */
            interface INativeBridgeRequest {

                /** NativeBridgeRequest requestId */
                requestId?: (string|null);

                /** NativeBridgeRequest requestType */
                requestType?: (juicetokens.transport.native_bridge.RequestType|null);

                /** NativeBridgeRequest payload */
                payload?: (Uint8Array|null);

                /** NativeBridgeRequest timeoutMs */
                timeoutMs?: (number|null);

                /** NativeBridgeRequest requiresTee */
                requiresTee?: (boolean|null);

                /** NativeBridgeRequest operation */
                operation?: (string|null);

                /** NativeBridgeRequest priority */
                priority?: (number|null);
            }

            /** Represents a NativeBridgeRequest. */
            class NativeBridgeRequest implements INativeBridgeRequest {

                /**
                 * Constructs a new NativeBridgeRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.INativeBridgeRequest);

                /** NativeBridgeRequest requestId. */
                public requestId: string;

                /** NativeBridgeRequest requestType. */
                public requestType: juicetokens.transport.native_bridge.RequestType;

                /** NativeBridgeRequest payload. */
                public payload: Uint8Array;

                /** NativeBridgeRequest timeoutMs. */
                public timeoutMs: number;

                /** NativeBridgeRequest requiresTee. */
                public requiresTee: boolean;

                /** NativeBridgeRequest operation. */
                public operation: string;

                /** NativeBridgeRequest priority. */
                public priority: number;

                /**
                 * Creates a new NativeBridgeRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NativeBridgeRequest instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.INativeBridgeRequest): juicetokens.transport.native_bridge.NativeBridgeRequest;

                /**
                 * Encodes the specified NativeBridgeRequest message. Does not implicitly {@link juicetokens.transport.native_bridge.NativeBridgeRequest.verify|verify} messages.
                 * @param message NativeBridgeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.INativeBridgeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NativeBridgeRequest message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.NativeBridgeRequest.verify|verify} messages.
                 * @param message NativeBridgeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.INativeBridgeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NativeBridgeRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NativeBridgeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.NativeBridgeRequest;

                /**
                 * Decodes a NativeBridgeRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NativeBridgeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.NativeBridgeRequest;

                /**
                 * Verifies a NativeBridgeRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NativeBridgeRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NativeBridgeRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.NativeBridgeRequest;

                /**
                 * Creates a plain object from a NativeBridgeRequest message. Also converts values to other types if specified.
                 * @param message NativeBridgeRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.NativeBridgeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NativeBridgeRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for NativeBridgeRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** RequestType enum. */
            enum RequestType {
                SECURE_STORAGE = 0,
                CRYPTO_OPERATION = 1,
                CONNECTIVITY = 2,
                SENSOR = 3,
                NOTIFICATION = 4,
                SECURE_DISPLAY = 5,
                QR_CODE = 6,
                FILE_SYSTEM = 7
            }

            /** Properties of a NativeBridgeResponse. */
            interface INativeBridgeResponse {

                /** NativeBridgeResponse requestId */
                requestId?: (string|null);

                /** NativeBridgeResponse success */
                success?: (boolean|null);

                /** NativeBridgeResponse responseData */
                responseData?: (Uint8Array|null);

                /** NativeBridgeResponse errorMessage */
                errorMessage?: (string|null);

                /** NativeBridgeResponse detectedCapabilities */
                detectedCapabilities?: (juicetokens.transport.native_bridge.ICapability[]|null);

                /** NativeBridgeResponse timestampMs */
                timestampMs?: (number|Long|null);

                /** NativeBridgeResponse errorCode */
                errorCode?: (number|null);
            }

            /** Represents a NativeBridgeResponse. */
            class NativeBridgeResponse implements INativeBridgeResponse {

                /**
                 * Constructs a new NativeBridgeResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.INativeBridgeResponse);

                /** NativeBridgeResponse requestId. */
                public requestId: string;

                /** NativeBridgeResponse success. */
                public success: boolean;

                /** NativeBridgeResponse responseData. */
                public responseData: Uint8Array;

                /** NativeBridgeResponse errorMessage. */
                public errorMessage: string;

                /** NativeBridgeResponse detectedCapabilities. */
                public detectedCapabilities: juicetokens.transport.native_bridge.ICapability[];

                /** NativeBridgeResponse timestampMs. */
                public timestampMs: (number|Long);

                /** NativeBridgeResponse errorCode. */
                public errorCode: number;

                /**
                 * Creates a new NativeBridgeResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NativeBridgeResponse instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.INativeBridgeResponse): juicetokens.transport.native_bridge.NativeBridgeResponse;

                /**
                 * Encodes the specified NativeBridgeResponse message. Does not implicitly {@link juicetokens.transport.native_bridge.NativeBridgeResponse.verify|verify} messages.
                 * @param message NativeBridgeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.INativeBridgeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NativeBridgeResponse message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.NativeBridgeResponse.verify|verify} messages.
                 * @param message NativeBridgeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.INativeBridgeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NativeBridgeResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NativeBridgeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.NativeBridgeResponse;

                /**
                 * Decodes a NativeBridgeResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NativeBridgeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.NativeBridgeResponse;

                /**
                 * Verifies a NativeBridgeResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NativeBridgeResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NativeBridgeResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.NativeBridgeResponse;

                /**
                 * Creates a plain object from a NativeBridgeResponse message. Also converts values to other types if specified.
                 * @param message NativeBridgeResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.NativeBridgeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NativeBridgeResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for NativeBridgeResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a Capability. */
            interface ICapability {

                /** Capability capabilityId */
                capabilityId?: (string|null);

                /** Capability displayName */
                displayName?: (string|null);

                /** Capability available */
                available?: (boolean|null);

                /** Capability parameters */
                parameters?: ({ [k: string]: string }|null);

                /** Capability version */
                version?: (number|null);
            }

            /** Represents a Capability. */
            class Capability implements ICapability {

                /**
                 * Constructs a new Capability.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.ICapability);

                /** Capability capabilityId. */
                public capabilityId: string;

                /** Capability displayName. */
                public displayName: string;

                /** Capability available. */
                public available: boolean;

                /** Capability parameters. */
                public parameters: { [k: string]: string };

                /** Capability version. */
                public version: number;

                /**
                 * Creates a new Capability instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Capability instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.ICapability): juicetokens.transport.native_bridge.Capability;

                /**
                 * Encodes the specified Capability message. Does not implicitly {@link juicetokens.transport.native_bridge.Capability.verify|verify} messages.
                 * @param message Capability message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.ICapability, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Capability message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.Capability.verify|verify} messages.
                 * @param message Capability message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.ICapability, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Capability message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Capability
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.Capability;

                /**
                 * Decodes a Capability message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Capability
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.Capability;

                /**
                 * Verifies a Capability message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Capability message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Capability
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.Capability;

                /**
                 * Creates a plain object from a Capability message. Also converts values to other types if specified.
                 * @param message Capability
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.Capability, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Capability to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Capability
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TeeRequest. */
            interface ITeeRequest {

                /** TeeRequest operation */
                operation?: (string|null);

                /** TeeRequest inputData */
                inputData?: (Uint8Array|null);

                /** TeeRequest keyIdentifier */
                keyIdentifier?: (string|null);

                /** TeeRequest authenticationData */
                authenticationData?: (Uint8Array|null);

                /** TeeRequest timeoutMs */
                timeoutMs?: (number|null);
            }

            /** Represents a TeeRequest. */
            class TeeRequest implements ITeeRequest {

                /**
                 * Constructs a new TeeRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.ITeeRequest);

                /** TeeRequest operation. */
                public operation: string;

                /** TeeRequest inputData. */
                public inputData: Uint8Array;

                /** TeeRequest keyIdentifier. */
                public keyIdentifier: string;

                /** TeeRequest authenticationData. */
                public authenticationData: Uint8Array;

                /** TeeRequest timeoutMs. */
                public timeoutMs: number;

                /**
                 * Creates a new TeeRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TeeRequest instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.ITeeRequest): juicetokens.transport.native_bridge.TeeRequest;

                /**
                 * Encodes the specified TeeRequest message. Does not implicitly {@link juicetokens.transport.native_bridge.TeeRequest.verify|verify} messages.
                 * @param message TeeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.ITeeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TeeRequest message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.TeeRequest.verify|verify} messages.
                 * @param message TeeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.ITeeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TeeRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TeeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.TeeRequest;

                /**
                 * Decodes a TeeRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TeeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.TeeRequest;

                /**
                 * Verifies a TeeRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TeeRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TeeRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.TeeRequest;

                /**
                 * Creates a plain object from a TeeRequest message. Also converts values to other types if specified.
                 * @param message TeeRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.TeeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TeeRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TeeRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TeeResponse. */
            interface ITeeResponse {

                /** TeeResponse success */
                success?: (boolean|null);

                /** TeeResponse outputData */
                outputData?: (Uint8Array|null);

                /** TeeResponse attestation */
                attestation?: (Uint8Array|null);

                /** TeeResponse errorCode */
                errorCode?: (string|null);

                /** TeeResponse signature */
                signature?: (Uint8Array|null);
            }

            /** Represents a TeeResponse. */
            class TeeResponse implements ITeeResponse {

                /**
                 * Constructs a new TeeResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.ITeeResponse);

                /** TeeResponse success. */
                public success: boolean;

                /** TeeResponse outputData. */
                public outputData: Uint8Array;

                /** TeeResponse attestation. */
                public attestation: Uint8Array;

                /** TeeResponse errorCode. */
                public errorCode: string;

                /** TeeResponse signature. */
                public signature: Uint8Array;

                /**
                 * Creates a new TeeResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TeeResponse instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.ITeeResponse): juicetokens.transport.native_bridge.TeeResponse;

                /**
                 * Encodes the specified TeeResponse message. Does not implicitly {@link juicetokens.transport.native_bridge.TeeResponse.verify|verify} messages.
                 * @param message TeeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.ITeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TeeResponse message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.TeeResponse.verify|verify} messages.
                 * @param message TeeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.ITeeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TeeResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TeeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.TeeResponse;

                /**
                 * Decodes a TeeResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TeeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.TeeResponse;

                /**
                 * Verifies a TeeResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TeeResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TeeResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.TeeResponse;

                /**
                 * Creates a plain object from a TeeResponse message. Also converts values to other types if specified.
                 * @param message TeeResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.TeeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TeeResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TeeResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a SecureStorageRequest. */
            interface ISecureStorageRequest {

                /** SecureStorageRequest operation */
                operation?: (juicetokens.transport.native_bridge.SecureStorageRequest.Operation|null);

                /** SecureStorageRequest key */
                key?: (string|null);

                /** SecureStorageRequest data */
                data?: (Uint8Array|null);

                /** SecureStorageRequest requiresAuthentication */
                requiresAuthentication?: (boolean|null);

                /** SecureStorageRequest namespace */
                namespace?: (string|null);
            }

            /** Represents a SecureStorageRequest. */
            class SecureStorageRequest implements ISecureStorageRequest {

                /**
                 * Constructs a new SecureStorageRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.ISecureStorageRequest);

                /** SecureStorageRequest operation. */
                public operation: juicetokens.transport.native_bridge.SecureStorageRequest.Operation;

                /** SecureStorageRequest key. */
                public key: string;

                /** SecureStorageRequest data. */
                public data: Uint8Array;

                /** SecureStorageRequest requiresAuthentication. */
                public requiresAuthentication: boolean;

                /** SecureStorageRequest namespace. */
                public namespace: string;

                /**
                 * Creates a new SecureStorageRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SecureStorageRequest instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.ISecureStorageRequest): juicetokens.transport.native_bridge.SecureStorageRequest;

                /**
                 * Encodes the specified SecureStorageRequest message. Does not implicitly {@link juicetokens.transport.native_bridge.SecureStorageRequest.verify|verify} messages.
                 * @param message SecureStorageRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.ISecureStorageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SecureStorageRequest message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.SecureStorageRequest.verify|verify} messages.
                 * @param message SecureStorageRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.ISecureStorageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SecureStorageRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SecureStorageRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.SecureStorageRequest;

                /**
                 * Decodes a SecureStorageRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SecureStorageRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.SecureStorageRequest;

                /**
                 * Verifies a SecureStorageRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SecureStorageRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SecureStorageRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.SecureStorageRequest;

                /**
                 * Creates a plain object from a SecureStorageRequest message. Also converts values to other types if specified.
                 * @param message SecureStorageRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.SecureStorageRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SecureStorageRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SecureStorageRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace SecureStorageRequest {

                /** Operation enum. */
                enum Operation {
                    STORE = 0,
                    RETRIEVE = 1,
                    DELETE = 2,
                    LIST = 3
                }
            }

            /** Properties of a SecureStorageResponse. */
            interface ISecureStorageResponse {

                /** SecureStorageResponse success */
                success?: (boolean|null);

                /** SecureStorageResponse data */
                data?: (Uint8Array|null);

                /** SecureStorageResponse keys */
                keys?: (string[]|null);

                /** SecureStorageResponse errorMessage */
                errorMessage?: (string|null);
            }

            /** Represents a SecureStorageResponse. */
            class SecureStorageResponse implements ISecureStorageResponse {

                /**
                 * Constructs a new SecureStorageResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.ISecureStorageResponse);

                /** SecureStorageResponse success. */
                public success: boolean;

                /** SecureStorageResponse data. */
                public data: Uint8Array;

                /** SecureStorageResponse keys. */
                public keys: string[];

                /** SecureStorageResponse errorMessage. */
                public errorMessage: string;

                /**
                 * Creates a new SecureStorageResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SecureStorageResponse instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.ISecureStorageResponse): juicetokens.transport.native_bridge.SecureStorageResponse;

                /**
                 * Encodes the specified SecureStorageResponse message. Does not implicitly {@link juicetokens.transport.native_bridge.SecureStorageResponse.verify|verify} messages.
                 * @param message SecureStorageResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.ISecureStorageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SecureStorageResponse message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.SecureStorageResponse.verify|verify} messages.
                 * @param message SecureStorageResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.ISecureStorageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SecureStorageResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SecureStorageResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.SecureStorageResponse;

                /**
                 * Decodes a SecureStorageResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SecureStorageResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.SecureStorageResponse;

                /**
                 * Verifies a SecureStorageResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SecureStorageResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SecureStorageResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.SecureStorageResponse;

                /**
                 * Creates a plain object from a SecureStorageResponse message. Also converts values to other types if specified.
                 * @param message SecureStorageResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.SecureStorageResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SecureStorageResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SecureStorageResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CryptoRequest. */
            interface ICryptoRequest {

                /** CryptoRequest operation */
                operation?: (juicetokens.transport.native_bridge.CryptoRequest.Operation|null);

                /** CryptoRequest algorithm */
                algorithm?: (string|null);

                /** CryptoRequest inputData */
                inputData?: (Uint8Array|null);

                /** CryptoRequest keyId */
                keyId?: (string|null);

                /** CryptoRequest additionalData */
                additionalData?: (Uint8Array|null);

                /** CryptoRequest outputLength */
                outputLength?: (number|null);
            }

            /** Represents a CryptoRequest. */
            class CryptoRequest implements ICryptoRequest {

                /**
                 * Constructs a new CryptoRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.ICryptoRequest);

                /** CryptoRequest operation. */
                public operation: juicetokens.transport.native_bridge.CryptoRequest.Operation;

                /** CryptoRequest algorithm. */
                public algorithm: string;

                /** CryptoRequest inputData. */
                public inputData: Uint8Array;

                /** CryptoRequest keyId. */
                public keyId: string;

                /** CryptoRequest additionalData. */
                public additionalData: Uint8Array;

                /** CryptoRequest outputLength. */
                public outputLength: number;

                /**
                 * Creates a new CryptoRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CryptoRequest instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.ICryptoRequest): juicetokens.transport.native_bridge.CryptoRequest;

                /**
                 * Encodes the specified CryptoRequest message. Does not implicitly {@link juicetokens.transport.native_bridge.CryptoRequest.verify|verify} messages.
                 * @param message CryptoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.ICryptoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CryptoRequest message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.CryptoRequest.verify|verify} messages.
                 * @param message CryptoRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.ICryptoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CryptoRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CryptoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.CryptoRequest;

                /**
                 * Decodes a CryptoRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CryptoRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.CryptoRequest;

                /**
                 * Verifies a CryptoRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CryptoRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CryptoRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.CryptoRequest;

                /**
                 * Creates a plain object from a CryptoRequest message. Also converts values to other types if specified.
                 * @param message CryptoRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.CryptoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CryptoRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CryptoRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace CryptoRequest {

                /** Operation enum. */
                enum Operation {
                    GENERATE_KEY = 0,
                    SIGN = 1,
                    VERIFY = 2,
                    ENCRYPT = 3,
                    DECRYPT = 4,
                    DERIVE_KEY = 5,
                    RANDOM = 6
                }
            }

            /** Properties of a CryptoResponse. */
            interface ICryptoResponse {

                /** CryptoResponse success */
                success?: (boolean|null);

                /** CryptoResponse output */
                output?: (Uint8Array|null);

                /** CryptoResponse keyId */
                keyId?: (string|null);

                /** CryptoResponse verificationResult */
                verificationResult?: (boolean|null);

                /** CryptoResponse errorMessage */
                errorMessage?: (string|null);
            }

            /** Represents a CryptoResponse. */
            class CryptoResponse implements ICryptoResponse {

                /**
                 * Constructs a new CryptoResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.ICryptoResponse);

                /** CryptoResponse success. */
                public success: boolean;

                /** CryptoResponse output. */
                public output: Uint8Array;

                /** CryptoResponse keyId. */
                public keyId: string;

                /** CryptoResponse verificationResult. */
                public verificationResult: boolean;

                /** CryptoResponse errorMessage. */
                public errorMessage: string;

                /**
                 * Creates a new CryptoResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CryptoResponse instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.ICryptoResponse): juicetokens.transport.native_bridge.CryptoResponse;

                /**
                 * Encodes the specified CryptoResponse message. Does not implicitly {@link juicetokens.transport.native_bridge.CryptoResponse.verify|verify} messages.
                 * @param message CryptoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.ICryptoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CryptoResponse message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.CryptoResponse.verify|verify} messages.
                 * @param message CryptoResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.ICryptoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CryptoResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CryptoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.CryptoResponse;

                /**
                 * Decodes a CryptoResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CryptoResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.CryptoResponse;

                /**
                 * Verifies a CryptoResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CryptoResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CryptoResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.CryptoResponse;

                /**
                 * Creates a plain object from a CryptoResponse message. Also converts values to other types if specified.
                 * @param message CryptoResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.CryptoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CryptoResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CryptoResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ConnectivityRequest. */
            interface IConnectivityRequest {

                /** ConnectivityRequest interface */
                "interface"?: (juicetokens.transport.native_bridge.ConnectivityRequest.Interface|null);

                /** ConnectivityRequest operation */
                operation?: (string|null);

                /** ConnectivityRequest parameters */
                parameters?: (Uint8Array|null);

                /** ConnectivityRequest timeoutMs */
                timeoutMs?: (number|null);
            }

            /** Represents a ConnectivityRequest. */
            class ConnectivityRequest implements IConnectivityRequest {

                /**
                 * Constructs a new ConnectivityRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.IConnectivityRequest);

                /** ConnectivityRequest interface. */
                public interface: juicetokens.transport.native_bridge.ConnectivityRequest.Interface;

                /** ConnectivityRequest operation. */
                public operation: string;

                /** ConnectivityRequest parameters. */
                public parameters: Uint8Array;

                /** ConnectivityRequest timeoutMs. */
                public timeoutMs: number;

                /**
                 * Creates a new ConnectivityRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ConnectivityRequest instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.IConnectivityRequest): juicetokens.transport.native_bridge.ConnectivityRequest;

                /**
                 * Encodes the specified ConnectivityRequest message. Does not implicitly {@link juicetokens.transport.native_bridge.ConnectivityRequest.verify|verify} messages.
                 * @param message ConnectivityRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.IConnectivityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ConnectivityRequest message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.ConnectivityRequest.verify|verify} messages.
                 * @param message ConnectivityRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.IConnectivityRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ConnectivityRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ConnectivityRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.ConnectivityRequest;

                /**
                 * Decodes a ConnectivityRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ConnectivityRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.ConnectivityRequest;

                /**
                 * Verifies a ConnectivityRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ConnectivityRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ConnectivityRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.ConnectivityRequest;

                /**
                 * Creates a plain object from a ConnectivityRequest message. Also converts values to other types if specified.
                 * @param message ConnectivityRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.ConnectivityRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ConnectivityRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ConnectivityRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace ConnectivityRequest {

                /** Interface enum. */
                enum Interface {
                    BLE = 0,
                    NFC = 1,
                    WIFI = 2,
                    CELLULAR = 3
                }
            }

            /** Properties of a ConnectivityResponse. */
            interface IConnectivityResponse {

                /** ConnectivityResponse success */
                success?: (boolean|null);

                /** ConnectivityResponse responseData */
                responseData?: (Uint8Array|null);

                /** ConnectivityResponse errorMessage */
                errorMessage?: (string|null);

                /** ConnectivityResponse metadata */
                metadata?: ({ [k: string]: string }|null);
            }

            /** Represents a ConnectivityResponse. */
            class ConnectivityResponse implements IConnectivityResponse {

                /**
                 * Constructs a new ConnectivityResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.IConnectivityResponse);

                /** ConnectivityResponse success. */
                public success: boolean;

                /** ConnectivityResponse responseData. */
                public responseData: Uint8Array;

                /** ConnectivityResponse errorMessage. */
                public errorMessage: string;

                /** ConnectivityResponse metadata. */
                public metadata: { [k: string]: string };

                /**
                 * Creates a new ConnectivityResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ConnectivityResponse instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.IConnectivityResponse): juicetokens.transport.native_bridge.ConnectivityResponse;

                /**
                 * Encodes the specified ConnectivityResponse message. Does not implicitly {@link juicetokens.transport.native_bridge.ConnectivityResponse.verify|verify} messages.
                 * @param message ConnectivityResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.IConnectivityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ConnectivityResponse message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.ConnectivityResponse.verify|verify} messages.
                 * @param message ConnectivityResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.IConnectivityResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ConnectivityResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ConnectivityResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.ConnectivityResponse;

                /**
                 * Decodes a ConnectivityResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ConnectivityResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.ConnectivityResponse;

                /**
                 * Verifies a ConnectivityResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ConnectivityResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ConnectivityResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.ConnectivityResponse;

                /**
                 * Creates a plain object from a ConnectivityResponse message. Also converts values to other types if specified.
                 * @param message ConnectivityResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.ConnectivityResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ConnectivityResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ConnectivityResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a QrCodeRequest. */
            interface IQrCodeRequest {

                /** QrCodeRequest operation */
                operation?: (juicetokens.transport.native_bridge.QrCodeRequest.Operation|null);

                /** QrCodeRequest data */
                data?: (string|null);

                /** QrCodeRequest size */
                size?: (number|null);

                /** QrCodeRequest errorCorrection */
                errorCorrection?: (string|null);

                /** QrCodeRequest continuousScan */
                continuousScan?: (boolean|null);
            }

            /** Represents a QrCodeRequest. */
            class QrCodeRequest implements IQrCodeRequest {

                /**
                 * Constructs a new QrCodeRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.IQrCodeRequest);

                /** QrCodeRequest operation. */
                public operation: juicetokens.transport.native_bridge.QrCodeRequest.Operation;

                /** QrCodeRequest data. */
                public data: string;

                /** QrCodeRequest size. */
                public size: number;

                /** QrCodeRequest errorCorrection. */
                public errorCorrection: string;

                /** QrCodeRequest continuousScan. */
                public continuousScan: boolean;

                /**
                 * Creates a new QrCodeRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns QrCodeRequest instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.IQrCodeRequest): juicetokens.transport.native_bridge.QrCodeRequest;

                /**
                 * Encodes the specified QrCodeRequest message. Does not implicitly {@link juicetokens.transport.native_bridge.QrCodeRequest.verify|verify} messages.
                 * @param message QrCodeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.IQrCodeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QrCodeRequest message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.QrCodeRequest.verify|verify} messages.
                 * @param message QrCodeRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.IQrCodeRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QrCodeRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QrCodeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.QrCodeRequest;

                /**
                 * Decodes a QrCodeRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QrCodeRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.QrCodeRequest;

                /**
                 * Verifies a QrCodeRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QrCodeRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QrCodeRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.QrCodeRequest;

                /**
                 * Creates a plain object from a QrCodeRequest message. Also converts values to other types if specified.
                 * @param message QrCodeRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.QrCodeRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QrCodeRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for QrCodeRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace QrCodeRequest {

                /** Operation enum. */
                enum Operation {
                    GENERATE = 0,
                    SCAN = 1
                }
            }

            /** Properties of a QrCodeResponse. */
            interface IQrCodeResponse {

                /** QrCodeResponse success */
                success?: (boolean|null);

                /** QrCodeResponse qrImage */
                qrImage?: (Uint8Array|null);

                /** QrCodeResponse scannedData */
                scannedData?: (string|null);

                /** QrCodeResponse errorMessage */
                errorMessage?: (string|null);
            }

            /** Represents a QrCodeResponse. */
            class QrCodeResponse implements IQrCodeResponse {

                /**
                 * Constructs a new QrCodeResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.IQrCodeResponse);

                /** QrCodeResponse success. */
                public success: boolean;

                /** QrCodeResponse qrImage. */
                public qrImage: Uint8Array;

                /** QrCodeResponse scannedData. */
                public scannedData: string;

                /** QrCodeResponse errorMessage. */
                public errorMessage: string;

                /**
                 * Creates a new QrCodeResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns QrCodeResponse instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.IQrCodeResponse): juicetokens.transport.native_bridge.QrCodeResponse;

                /**
                 * Encodes the specified QrCodeResponse message. Does not implicitly {@link juicetokens.transport.native_bridge.QrCodeResponse.verify|verify} messages.
                 * @param message QrCodeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.IQrCodeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QrCodeResponse message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.QrCodeResponse.verify|verify} messages.
                 * @param message QrCodeResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.IQrCodeResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QrCodeResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QrCodeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.QrCodeResponse;

                /**
                 * Decodes a QrCodeResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QrCodeResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.QrCodeResponse;

                /**
                 * Verifies a QrCodeResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QrCodeResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QrCodeResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.QrCodeResponse;

                /**
                 * Creates a plain object from a QrCodeResponse message. Also converts values to other types if specified.
                 * @param message QrCodeResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.QrCodeResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QrCodeResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for QrCodeResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetCapabilitiesRequest. */
            interface IGetCapabilitiesRequest {

                /** GetCapabilitiesRequest capabilityTypes */
                capabilityTypes?: (string[]|null);

                /** GetCapabilitiesRequest includeDetails */
                includeDetails?: (boolean|null);

                /** GetCapabilitiesRequest refresh */
                refresh?: (boolean|null);
            }

            /** Represents a GetCapabilitiesRequest. */
            class GetCapabilitiesRequest implements IGetCapabilitiesRequest {

                /**
                 * Constructs a new GetCapabilitiesRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.IGetCapabilitiesRequest);

                /** GetCapabilitiesRequest capabilityTypes. */
                public capabilityTypes: string[];

                /** GetCapabilitiesRequest includeDetails. */
                public includeDetails: boolean;

                /** GetCapabilitiesRequest refresh. */
                public refresh: boolean;

                /**
                 * Creates a new GetCapabilitiesRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetCapabilitiesRequest instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.IGetCapabilitiesRequest): juicetokens.transport.native_bridge.GetCapabilitiesRequest;

                /**
                 * Encodes the specified GetCapabilitiesRequest message. Does not implicitly {@link juicetokens.transport.native_bridge.GetCapabilitiesRequest.verify|verify} messages.
                 * @param message GetCapabilitiesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.IGetCapabilitiesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetCapabilitiesRequest message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.GetCapabilitiesRequest.verify|verify} messages.
                 * @param message GetCapabilitiesRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.IGetCapabilitiesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetCapabilitiesRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetCapabilitiesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.GetCapabilitiesRequest;

                /**
                 * Decodes a GetCapabilitiesRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetCapabilitiesRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.GetCapabilitiesRequest;

                /**
                 * Verifies a GetCapabilitiesRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetCapabilitiesRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetCapabilitiesRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.GetCapabilitiesRequest;

                /**
                 * Creates a plain object from a GetCapabilitiesRequest message. Also converts values to other types if specified.
                 * @param message GetCapabilitiesRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.GetCapabilitiesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetCapabilitiesRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetCapabilitiesRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetCapabilitiesResponse. */
            interface IGetCapabilitiesResponse {

                /** GetCapabilitiesResponse success */
                success?: (boolean|null);

                /** GetCapabilitiesResponse capabilities */
                capabilities?: (juicetokens.transport.native_bridge.ICapability[]|null);

                /** GetCapabilitiesResponse errorMessage */
                errorMessage?: (string|null);

                /** GetCapabilitiesResponse timestampMs */
                timestampMs?: (number|Long|null);

                /** GetCapabilitiesResponse deviceId */
                deviceId?: (string|null);

                /** GetCapabilitiesResponse platform */
                platform?: (string|null);

                /** GetCapabilitiesResponse version */
                version?: (string|null);
            }

            /** Represents a GetCapabilitiesResponse. */
            class GetCapabilitiesResponse implements IGetCapabilitiesResponse {

                /**
                 * Constructs a new GetCapabilitiesResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.native_bridge.IGetCapabilitiesResponse);

                /** GetCapabilitiesResponse success. */
                public success: boolean;

                /** GetCapabilitiesResponse capabilities. */
                public capabilities: juicetokens.transport.native_bridge.ICapability[];

                /** GetCapabilitiesResponse errorMessage. */
                public errorMessage: string;

                /** GetCapabilitiesResponse timestampMs. */
                public timestampMs: (number|Long);

                /** GetCapabilitiesResponse deviceId. */
                public deviceId: string;

                /** GetCapabilitiesResponse platform. */
                public platform: string;

                /** GetCapabilitiesResponse version. */
                public version: string;

                /**
                 * Creates a new GetCapabilitiesResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetCapabilitiesResponse instance
                 */
                public static create(properties?: juicetokens.transport.native_bridge.IGetCapabilitiesResponse): juicetokens.transport.native_bridge.GetCapabilitiesResponse;

                /**
                 * Encodes the specified GetCapabilitiesResponse message. Does not implicitly {@link juicetokens.transport.native_bridge.GetCapabilitiesResponse.verify|verify} messages.
                 * @param message GetCapabilitiesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.native_bridge.IGetCapabilitiesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetCapabilitiesResponse message, length delimited. Does not implicitly {@link juicetokens.transport.native_bridge.GetCapabilitiesResponse.verify|verify} messages.
                 * @param message GetCapabilitiesResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.native_bridge.IGetCapabilitiesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetCapabilitiesResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetCapabilitiesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.native_bridge.GetCapabilitiesResponse;

                /**
                 * Decodes a GetCapabilitiesResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetCapabilitiesResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.native_bridge.GetCapabilitiesResponse;

                /**
                 * Verifies a GetCapabilitiesResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetCapabilitiesResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetCapabilitiesResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.native_bridge.GetCapabilitiesResponse;

                /**
                 * Creates a plain object from a GetCapabilitiesResponse message. Also converts values to other types if specified.
                 * @param message GetCapabilitiesResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.native_bridge.GetCapabilitiesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetCapabilitiesResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetCapabilitiesResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Represents a NativeBridgeService */
            class NativeBridgeService extends $protobuf.rpc.Service {

                /**
                 * Constructs a new NativeBridgeService service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Creates new NativeBridgeService service using the specified rpc implementation.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 * @returns RPC service. Useful where requests and/or responses are streamed.
                 */
                public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): NativeBridgeService;

                /**
                 * Calls SendRequest.
                 * @param request NativeBridgeRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and NativeBridgeResponse
                 */
                public sendRequest(request: juicetokens.transport.native_bridge.INativeBridgeRequest, callback: juicetokens.transport.native_bridge.NativeBridgeService.SendRequestCallback): void;

                /**
                 * Calls SendRequest.
                 * @param request NativeBridgeRequest message or plain object
                 * @returns Promise
                 */
                public sendRequest(request: juicetokens.transport.native_bridge.INativeBridgeRequest): Promise<juicetokens.transport.native_bridge.NativeBridgeResponse>;

                /**
                 * Calls StreamRequests.
                 * @param request NativeBridgeRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and NativeBridgeResponse
                 */
                public streamRequests(request: juicetokens.transport.native_bridge.INativeBridgeRequest, callback: juicetokens.transport.native_bridge.NativeBridgeService.StreamRequestsCallback): void;

                /**
                 * Calls StreamRequests.
                 * @param request NativeBridgeRequest message or plain object
                 * @returns Promise
                 */
                public streamRequests(request: juicetokens.transport.native_bridge.INativeBridgeRequest): Promise<juicetokens.transport.native_bridge.NativeBridgeResponse>;

                /**
                 * Calls GetCapabilities.
                 * @param request GetCapabilitiesRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and GetCapabilitiesResponse
                 */
                public getCapabilities(request: juicetokens.transport.native_bridge.IGetCapabilitiesRequest, callback: juicetokens.transport.native_bridge.NativeBridgeService.GetCapabilitiesCallback): void;

                /**
                 * Calls GetCapabilities.
                 * @param request GetCapabilitiesRequest message or plain object
                 * @returns Promise
                 */
                public getCapabilities(request: juicetokens.transport.native_bridge.IGetCapabilitiesRequest): Promise<juicetokens.transport.native_bridge.GetCapabilitiesResponse>;

                /**
                 * Calls PerformTeeOperation.
                 * @param request TeeRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and TeeResponse
                 */
                public performTeeOperation(request: juicetokens.transport.native_bridge.ITeeRequest, callback: juicetokens.transport.native_bridge.NativeBridgeService.PerformTeeOperationCallback): void;

                /**
                 * Calls PerformTeeOperation.
                 * @param request TeeRequest message or plain object
                 * @returns Promise
                 */
                public performTeeOperation(request: juicetokens.transport.native_bridge.ITeeRequest): Promise<juicetokens.transport.native_bridge.TeeResponse>;
            }

            namespace NativeBridgeService {

                /**
                 * Callback as used by {@link juicetokens.transport.native_bridge.NativeBridgeService#sendRequest}.
                 * @param error Error, if any
                 * @param [response] NativeBridgeResponse
                 */
                type SendRequestCallback = (error: (Error|null), response?: juicetokens.transport.native_bridge.NativeBridgeResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.native_bridge.NativeBridgeService#streamRequests}.
                 * @param error Error, if any
                 * @param [response] NativeBridgeResponse
                 */
                type StreamRequestsCallback = (error: (Error|null), response?: juicetokens.transport.native_bridge.NativeBridgeResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.native_bridge.NativeBridgeService#getCapabilities}.
                 * @param error Error, if any
                 * @param [response] GetCapabilitiesResponse
                 */
                type GetCapabilitiesCallback = (error: (Error|null), response?: juicetokens.transport.native_bridge.GetCapabilitiesResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.native_bridge.NativeBridgeService#performTeeOperation}.
                 * @param error Error, if any
                 * @param [response] TeeResponse
                 */
                type PerformTeeOperationCallback = (error: (Error|null), response?: juicetokens.transport.native_bridge.TeeResponse) => void;
            }
        }

        /** Namespace network. */
        namespace network {

            /** Properties of a PeerDiscoveryRequest. */
            interface IPeerDiscoveryRequest {

                /** PeerDiscoveryRequest type */
                type?: (juicetokens.transport.network.PeerDiscoveryRequest.DiscoveryType|null);

                /** PeerDiscoveryRequest timeoutMs */
                timeoutMs?: (number|null);

                /** PeerDiscoveryRequest knownPeers */
                knownPeers?: (string[]|null);

                /** PeerDiscoveryRequest filters */
                filters?: ({ [k: string]: string }|null);

                /** PeerDiscoveryRequest includeCapabilities */
                includeCapabilities?: (boolean|null);

                /** PeerDiscoveryRequest maxResults */
                maxResults?: (number|null);
            }

            /** Represents a PeerDiscoveryRequest. */
            class PeerDiscoveryRequest implements IPeerDiscoveryRequest {

                /**
                 * Constructs a new PeerDiscoveryRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IPeerDiscoveryRequest);

                /** PeerDiscoveryRequest type. */
                public type: juicetokens.transport.network.PeerDiscoveryRequest.DiscoveryType;

                /** PeerDiscoveryRequest timeoutMs. */
                public timeoutMs: number;

                /** PeerDiscoveryRequest knownPeers. */
                public knownPeers: string[];

                /** PeerDiscoveryRequest filters. */
                public filters: { [k: string]: string };

                /** PeerDiscoveryRequest includeCapabilities. */
                public includeCapabilities: boolean;

                /** PeerDiscoveryRequest maxResults. */
                public maxResults: number;

                /**
                 * Creates a new PeerDiscoveryRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PeerDiscoveryRequest instance
                 */
                public static create(properties?: juicetokens.transport.network.IPeerDiscoveryRequest): juicetokens.transport.network.PeerDiscoveryRequest;

                /**
                 * Encodes the specified PeerDiscoveryRequest message. Does not implicitly {@link juicetokens.transport.network.PeerDiscoveryRequest.verify|verify} messages.
                 * @param message PeerDiscoveryRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IPeerDiscoveryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PeerDiscoveryRequest message, length delimited. Does not implicitly {@link juicetokens.transport.network.PeerDiscoveryRequest.verify|verify} messages.
                 * @param message PeerDiscoveryRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IPeerDiscoveryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PeerDiscoveryRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PeerDiscoveryRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.PeerDiscoveryRequest;

                /**
                 * Decodes a PeerDiscoveryRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PeerDiscoveryRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.PeerDiscoveryRequest;

                /**
                 * Verifies a PeerDiscoveryRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PeerDiscoveryRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PeerDiscoveryRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.PeerDiscoveryRequest;

                /**
                 * Creates a plain object from a PeerDiscoveryRequest message. Also converts values to other types if specified.
                 * @param message PeerDiscoveryRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.PeerDiscoveryRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PeerDiscoveryRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PeerDiscoveryRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace PeerDiscoveryRequest {

                /** DiscoveryType enum. */
                enum DiscoveryType {
                    ACTIVE = 0,
                    PASSIVE = 1,
                    HYBRID = 2
                }
            }

            /** Properties of a PeerInfo. */
            interface IPeerInfo {

                /** PeerInfo peerId */
                peerId?: (string|null);

                /** PeerInfo addresses */
                addresses?: (string[]|null);

                /** PeerInfo capabilities */
                capabilities?: ({ [k: string]: string }|null);

                /** PeerInfo lastSeenMs */
                lastSeenMs?: (number|Long|null);

                /** PeerInfo reliabilityScore */
                reliabilityScore?: (number|null);

                /** PeerInfo supportedProtocols */
                supportedProtocols?: (string[]|null);

                /** PeerInfo geohash */
                geohash?: (string|null);

                /** PeerInfo version */
                version?: (number|null);
            }

            /** Represents a PeerInfo. */
            class PeerInfo implements IPeerInfo {

                /**
                 * Constructs a new PeerInfo.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IPeerInfo);

                /** PeerInfo peerId. */
                public peerId: string;

                /** PeerInfo addresses. */
                public addresses: string[];

                /** PeerInfo capabilities. */
                public capabilities: { [k: string]: string };

                /** PeerInfo lastSeenMs. */
                public lastSeenMs: (number|Long);

                /** PeerInfo reliabilityScore. */
                public reliabilityScore: number;

                /** PeerInfo supportedProtocols. */
                public supportedProtocols: string[];

                /** PeerInfo geohash. */
                public geohash: string;

                /** PeerInfo version. */
                public version: number;

                /**
                 * Creates a new PeerInfo instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PeerInfo instance
                 */
                public static create(properties?: juicetokens.transport.network.IPeerInfo): juicetokens.transport.network.PeerInfo;

                /**
                 * Encodes the specified PeerInfo message. Does not implicitly {@link juicetokens.transport.network.PeerInfo.verify|verify} messages.
                 * @param message PeerInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IPeerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PeerInfo message, length delimited. Does not implicitly {@link juicetokens.transport.network.PeerInfo.verify|verify} messages.
                 * @param message PeerInfo message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IPeerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PeerInfo message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PeerInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.PeerInfo;

                /**
                 * Decodes a PeerInfo message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PeerInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.PeerInfo;

                /**
                 * Verifies a PeerInfo message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PeerInfo message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PeerInfo
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.PeerInfo;

                /**
                 * Creates a plain object from a PeerInfo message. Also converts values to other types if specified.
                 * @param message PeerInfo
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.PeerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PeerInfo to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PeerInfo
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a BootstrapNode. */
            interface IBootstrapNode {

                /** BootstrapNode nodeId */
                nodeId?: (string|null);

                /** BootstrapNode addresses */
                addresses?: (string[]|null);

                /** BootstrapNode priority */
                priority?: (number|null);

                /** BootstrapNode isTrusted */
                isTrusted?: (boolean|null);

                /** BootstrapNode metadata */
                metadata?: ({ [k: string]: string }|null);

                /** BootstrapNode lastVerifiedMs */
                lastVerifiedMs?: (number|Long|null);
            }

            /** Represents a BootstrapNode. */
            class BootstrapNode implements IBootstrapNode {

                /**
                 * Constructs a new BootstrapNode.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IBootstrapNode);

                /** BootstrapNode nodeId. */
                public nodeId: string;

                /** BootstrapNode addresses. */
                public addresses: string[];

                /** BootstrapNode priority. */
                public priority: number;

                /** BootstrapNode isTrusted. */
                public isTrusted: boolean;

                /** BootstrapNode metadata. */
                public metadata: { [k: string]: string };

                /** BootstrapNode lastVerifiedMs. */
                public lastVerifiedMs: (number|Long);

                /**
                 * Creates a new BootstrapNode instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns BootstrapNode instance
                 */
                public static create(properties?: juicetokens.transport.network.IBootstrapNode): juicetokens.transport.network.BootstrapNode;

                /**
                 * Encodes the specified BootstrapNode message. Does not implicitly {@link juicetokens.transport.network.BootstrapNode.verify|verify} messages.
                 * @param message BootstrapNode message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IBootstrapNode, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BootstrapNode message, length delimited. Does not implicitly {@link juicetokens.transport.network.BootstrapNode.verify|verify} messages.
                 * @param message BootstrapNode message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IBootstrapNode, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BootstrapNode message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BootstrapNode
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.BootstrapNode;

                /**
                 * Decodes a BootstrapNode message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BootstrapNode
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.BootstrapNode;

                /**
                 * Verifies a BootstrapNode message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BootstrapNode message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BootstrapNode
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.BootstrapNode;

                /**
                 * Creates a plain object from a BootstrapNode message. Also converts values to other types if specified.
                 * @param message BootstrapNode
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.BootstrapNode, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BootstrapNode to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for BootstrapNode
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ServiceAdvertisement. */
            interface IServiceAdvertisement {

                /** ServiceAdvertisement serviceId */
                serviceId?: (string|null);

                /** ServiceAdvertisement serviceType */
                serviceType?: (string|null);

                /** ServiceAdvertisement endpoints */
                endpoints?: (string[]|null);

                /** ServiceAdvertisement capabilities */
                capabilities?: ({ [k: string]: string }|null);

                /** ServiceAdvertisement expiresAtMs */
                expiresAtMs?: (number|Long|null);

                /** ServiceAdvertisement peerId */
                peerId?: (string|null);

                /** ServiceAdvertisement signature */
                signature?: (Uint8Array|null);
            }

            /** Represents a ServiceAdvertisement. */
            class ServiceAdvertisement implements IServiceAdvertisement {

                /**
                 * Constructs a new ServiceAdvertisement.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IServiceAdvertisement);

                /** ServiceAdvertisement serviceId. */
                public serviceId: string;

                /** ServiceAdvertisement serviceType. */
                public serviceType: string;

                /** ServiceAdvertisement endpoints. */
                public endpoints: string[];

                /** ServiceAdvertisement capabilities. */
                public capabilities: { [k: string]: string };

                /** ServiceAdvertisement expiresAtMs. */
                public expiresAtMs: (number|Long);

                /** ServiceAdvertisement peerId. */
                public peerId: string;

                /** ServiceAdvertisement signature. */
                public signature: Uint8Array;

                /**
                 * Creates a new ServiceAdvertisement instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ServiceAdvertisement instance
                 */
                public static create(properties?: juicetokens.transport.network.IServiceAdvertisement): juicetokens.transport.network.ServiceAdvertisement;

                /**
                 * Encodes the specified ServiceAdvertisement message. Does not implicitly {@link juicetokens.transport.network.ServiceAdvertisement.verify|verify} messages.
                 * @param message ServiceAdvertisement message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IServiceAdvertisement, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ServiceAdvertisement message, length delimited. Does not implicitly {@link juicetokens.transport.network.ServiceAdvertisement.verify|verify} messages.
                 * @param message ServiceAdvertisement message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IServiceAdvertisement, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ServiceAdvertisement message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ServiceAdvertisement
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.ServiceAdvertisement;

                /**
                 * Decodes a ServiceAdvertisement message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ServiceAdvertisement
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.ServiceAdvertisement;

                /**
                 * Verifies a ServiceAdvertisement message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ServiceAdvertisement message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ServiceAdvertisement
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.ServiceAdvertisement;

                /**
                 * Creates a plain object from a ServiceAdvertisement message. Also converts values to other types if specified.
                 * @param message ServiceAdvertisement
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.ServiceAdvertisement, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ServiceAdvertisement to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ServiceAdvertisement
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a MeshConfiguration. */
            interface IMeshConfiguration {

                /** MeshConfiguration maxPeers */
                maxPeers?: (number|null);

                /** MeshConfiguration minPeers */
                minPeers?: (number|null);

                /** MeshConfiguration heartbeatIntervalMs */
                heartbeatIntervalMs?: (number|null);

                /** MeshConfiguration connectionTimeoutMs */
                connectionTimeoutMs?: (number|null);

                /** MeshConfiguration bootstrapNodes */
                bootstrapNodes?: (string[]|null);

                /** MeshConfiguration parameters */
                parameters?: ({ [k: string]: string }|null);

                /** MeshConfiguration enableStoreAndForward */
                enableStoreAndForward?: (boolean|null);

                /** MeshConfiguration replicationFactor */
                replicationFactor?: (number|null);
            }

            /** Represents a MeshConfiguration. */
            class MeshConfiguration implements IMeshConfiguration {

                /**
                 * Constructs a new MeshConfiguration.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IMeshConfiguration);

                /** MeshConfiguration maxPeers. */
                public maxPeers: number;

                /** MeshConfiguration minPeers. */
                public minPeers: number;

                /** MeshConfiguration heartbeatIntervalMs. */
                public heartbeatIntervalMs: number;

                /** MeshConfiguration connectionTimeoutMs. */
                public connectionTimeoutMs: number;

                /** MeshConfiguration bootstrapNodes. */
                public bootstrapNodes: string[];

                /** MeshConfiguration parameters. */
                public parameters: { [k: string]: string };

                /** MeshConfiguration enableStoreAndForward. */
                public enableStoreAndForward: boolean;

                /** MeshConfiguration replicationFactor. */
                public replicationFactor: number;

                /**
                 * Creates a new MeshConfiguration instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MeshConfiguration instance
                 */
                public static create(properties?: juicetokens.transport.network.IMeshConfiguration): juicetokens.transport.network.MeshConfiguration;

                /**
                 * Encodes the specified MeshConfiguration message. Does not implicitly {@link juicetokens.transport.network.MeshConfiguration.verify|verify} messages.
                 * @param message MeshConfiguration message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IMeshConfiguration, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MeshConfiguration message, length delimited. Does not implicitly {@link juicetokens.transport.network.MeshConfiguration.verify|verify} messages.
                 * @param message MeshConfiguration message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IMeshConfiguration, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MeshConfiguration message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MeshConfiguration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.MeshConfiguration;

                /**
                 * Decodes a MeshConfiguration message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MeshConfiguration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.MeshConfiguration;

                /**
                 * Verifies a MeshConfiguration message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MeshConfiguration message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MeshConfiguration
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.MeshConfiguration;

                /**
                 * Creates a plain object from a MeshConfiguration message. Also converts values to other types if specified.
                 * @param message MeshConfiguration
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.MeshConfiguration, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MeshConfiguration to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for MeshConfiguration
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RoutingTable. */
            interface IRoutingTable {

                /** RoutingTable routes */
                routes?: (juicetokens.transport.network.IRouteEntry[]|null);

                /** RoutingTable lastUpdatedMs */
                lastUpdatedMs?: (number|Long|null);

                /** RoutingTable version */
                version?: (number|null);

                /** RoutingTable localPeerId */
                localPeerId?: (string|null);
            }

            /** Represents a RoutingTable. */
            class RoutingTable implements IRoutingTable {

                /**
                 * Constructs a new RoutingTable.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IRoutingTable);

                /** RoutingTable routes. */
                public routes: juicetokens.transport.network.IRouteEntry[];

                /** RoutingTable lastUpdatedMs. */
                public lastUpdatedMs: (number|Long);

                /** RoutingTable version. */
                public version: number;

                /** RoutingTable localPeerId. */
                public localPeerId: string;

                /**
                 * Creates a new RoutingTable instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RoutingTable instance
                 */
                public static create(properties?: juicetokens.transport.network.IRoutingTable): juicetokens.transport.network.RoutingTable;

                /**
                 * Encodes the specified RoutingTable message. Does not implicitly {@link juicetokens.transport.network.RoutingTable.verify|verify} messages.
                 * @param message RoutingTable message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IRoutingTable, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RoutingTable message, length delimited. Does not implicitly {@link juicetokens.transport.network.RoutingTable.verify|verify} messages.
                 * @param message RoutingTable message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IRoutingTable, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RoutingTable message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RoutingTable
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.RoutingTable;

                /**
                 * Decodes a RoutingTable message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RoutingTable
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.RoutingTable;

                /**
                 * Verifies a RoutingTable message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RoutingTable message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RoutingTable
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.RoutingTable;

                /**
                 * Creates a plain object from a RoutingTable message. Also converts values to other types if specified.
                 * @param message RoutingTable
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.RoutingTable, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RoutingTable to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RoutingTable
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RouteEntry. */
            interface IRouteEntry {

                /** RouteEntry destinationPeerId */
                destinationPeerId?: (string|null);

                /** RouteEntry nextHopPeerId */
                nextHopPeerId?: (string|null);

                /** RouteEntry hopCount */
                hopCount?: (number|null);

                /** RouteEntry reliabilityScore */
                reliabilityScore?: (number|null);

                /** RouteEntry lastUsedMs */
                lastUsedMs?: (number|Long|null);

                /** RouteEntry latencyMs */
                latencyMs?: (number|null);
            }

            /** Represents a RouteEntry. */
            class RouteEntry implements IRouteEntry {

                /**
                 * Constructs a new RouteEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IRouteEntry);

                /** RouteEntry destinationPeerId. */
                public destinationPeerId: string;

                /** RouteEntry nextHopPeerId. */
                public nextHopPeerId: string;

                /** RouteEntry hopCount. */
                public hopCount: number;

                /** RouteEntry reliabilityScore. */
                public reliabilityScore: number;

                /** RouteEntry lastUsedMs. */
                public lastUsedMs: (number|Long);

                /** RouteEntry latencyMs. */
                public latencyMs: number;

                /**
                 * Creates a new RouteEntry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RouteEntry instance
                 */
                public static create(properties?: juicetokens.transport.network.IRouteEntry): juicetokens.transport.network.RouteEntry;

                /**
                 * Encodes the specified RouteEntry message. Does not implicitly {@link juicetokens.transport.network.RouteEntry.verify|verify} messages.
                 * @param message RouteEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IRouteEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RouteEntry message, length delimited. Does not implicitly {@link juicetokens.transport.network.RouteEntry.verify|verify} messages.
                 * @param message RouteEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IRouteEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RouteEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RouteEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.RouteEntry;

                /**
                 * Decodes a RouteEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RouteEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.RouteEntry;

                /**
                 * Verifies a RouteEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RouteEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RouteEntry
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.RouteEntry;

                /**
                 * Creates a plain object from a RouteEntry message. Also converts values to other types if specified.
                 * @param message RouteEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.RouteEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RouteEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RouteEntry
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a NetworkHealthMetrics. */
            interface INetworkHealthMetrics {

                /** NetworkHealthMetrics connectedPeers */
                connectedPeers?: (number|null);

                /** NetworkHealthMetrics activeConnections */
                activeConnections?: (number|null);

                /** NetworkHealthMetrics messageSuccessRate */
                messageSuccessRate?: (number|null);

                /** NetworkHealthMetrics averageLatencyMs */
                averageLatencyMs?: (number|null);

                /** NetworkHealthMetrics peerMetrics */
                peerMetrics?: ({ [k: string]: number }|null);

                /** NetworkHealthMetrics uptimeSeconds */
                uptimeSeconds?: (number|Long|null);

                /** NetworkHealthMetrics bandwidthUsageBytes */
                bandwidthUsageBytes?: (number|null);
            }

            /** Represents a NetworkHealthMetrics. */
            class NetworkHealthMetrics implements INetworkHealthMetrics {

                /**
                 * Constructs a new NetworkHealthMetrics.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.INetworkHealthMetrics);

                /** NetworkHealthMetrics connectedPeers. */
                public connectedPeers: number;

                /** NetworkHealthMetrics activeConnections. */
                public activeConnections: number;

                /** NetworkHealthMetrics messageSuccessRate. */
                public messageSuccessRate: number;

                /** NetworkHealthMetrics averageLatencyMs. */
                public averageLatencyMs: number;

                /** NetworkHealthMetrics peerMetrics. */
                public peerMetrics: { [k: string]: number };

                /** NetworkHealthMetrics uptimeSeconds. */
                public uptimeSeconds: (number|Long);

                /** NetworkHealthMetrics bandwidthUsageBytes. */
                public bandwidthUsageBytes: number;

                /**
                 * Creates a new NetworkHealthMetrics instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NetworkHealthMetrics instance
                 */
                public static create(properties?: juicetokens.transport.network.INetworkHealthMetrics): juicetokens.transport.network.NetworkHealthMetrics;

                /**
                 * Encodes the specified NetworkHealthMetrics message. Does not implicitly {@link juicetokens.transport.network.NetworkHealthMetrics.verify|verify} messages.
                 * @param message NetworkHealthMetrics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.INetworkHealthMetrics, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NetworkHealthMetrics message, length delimited. Does not implicitly {@link juicetokens.transport.network.NetworkHealthMetrics.verify|verify} messages.
                 * @param message NetworkHealthMetrics message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.INetworkHealthMetrics, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NetworkHealthMetrics message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NetworkHealthMetrics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.NetworkHealthMetrics;

                /**
                 * Decodes a NetworkHealthMetrics message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NetworkHealthMetrics
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.NetworkHealthMetrics;

                /**
                 * Verifies a NetworkHealthMetrics message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NetworkHealthMetrics message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NetworkHealthMetrics
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.NetworkHealthMetrics;

                /**
                 * Creates a plain object from a NetworkHealthMetrics message. Also converts values to other types if specified.
                 * @param message NetworkHealthMetrics
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.NetworkHealthMetrics, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NetworkHealthMetrics to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for NetworkHealthMetrics
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StoreAndForwardRequest. */
            interface IStoreAndForwardRequest {

                /** StoreAndForwardRequest messageId */
                messageId?: (string|null);

                /** StoreAndForwardRequest destinationPeerId */
                destinationPeerId?: (string|null);

                /** StoreAndForwardRequest messageData */
                messageData?: (Uint8Array|null);

                /** StoreAndForwardRequest expiresAtMs */
                expiresAtMs?: (number|Long|null);

                /** StoreAndForwardRequest maxRetries */
                maxRetries?: (number|null);

                /** StoreAndForwardRequest priority */
                priority?: (number|null);

                /** StoreAndForwardRequest originalSenderId */
                originalSenderId?: (string|null);
            }

            /** Represents a StoreAndForwardRequest. */
            class StoreAndForwardRequest implements IStoreAndForwardRequest {

                /**
                 * Constructs a new StoreAndForwardRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IStoreAndForwardRequest);

                /** StoreAndForwardRequest messageId. */
                public messageId: string;

                /** StoreAndForwardRequest destinationPeerId. */
                public destinationPeerId: string;

                /** StoreAndForwardRequest messageData. */
                public messageData: Uint8Array;

                /** StoreAndForwardRequest expiresAtMs. */
                public expiresAtMs: (number|Long);

                /** StoreAndForwardRequest maxRetries. */
                public maxRetries: number;

                /** StoreAndForwardRequest priority. */
                public priority: number;

                /** StoreAndForwardRequest originalSenderId. */
                public originalSenderId: string;

                /**
                 * Creates a new StoreAndForwardRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StoreAndForwardRequest instance
                 */
                public static create(properties?: juicetokens.transport.network.IStoreAndForwardRequest): juicetokens.transport.network.StoreAndForwardRequest;

                /**
                 * Encodes the specified StoreAndForwardRequest message. Does not implicitly {@link juicetokens.transport.network.StoreAndForwardRequest.verify|verify} messages.
                 * @param message StoreAndForwardRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IStoreAndForwardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StoreAndForwardRequest message, length delimited. Does not implicitly {@link juicetokens.transport.network.StoreAndForwardRequest.verify|verify} messages.
                 * @param message StoreAndForwardRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IStoreAndForwardRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StoreAndForwardRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StoreAndForwardRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.StoreAndForwardRequest;

                /**
                 * Decodes a StoreAndForwardRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StoreAndForwardRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.StoreAndForwardRequest;

                /**
                 * Verifies a StoreAndForwardRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StoreAndForwardRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StoreAndForwardRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.StoreAndForwardRequest;

                /**
                 * Creates a plain object from a StoreAndForwardRequest message. Also converts values to other types if specified.
                 * @param message StoreAndForwardRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.StoreAndForwardRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StoreAndForwardRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StoreAndForwardRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ConnectionRequest. */
            interface IConnectionRequest {

                /** ConnectionRequest connectionType */
                connectionType?: (string|null);

                /** ConnectionRequest parameters */
                parameters?: ({ [k: string]: Uint8Array }|null);

                /** ConnectionRequest constraints */
                constraints?: ({ [k: string]: string }|null);

                /** ConnectionRequest peerId */
                peerId?: (string|null);

                /** ConnectionRequest qos */
                qos?: (juicetokens.transport.network.IQualityOfService|null);
            }

            /** Represents a ConnectionRequest. */
            class ConnectionRequest implements IConnectionRequest {

                /**
                 * Constructs a new ConnectionRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IConnectionRequest);

                /** ConnectionRequest connectionType. */
                public connectionType: string;

                /** ConnectionRequest parameters. */
                public parameters: { [k: string]: Uint8Array };

                /** ConnectionRequest constraints. */
                public constraints: { [k: string]: string };

                /** ConnectionRequest peerId. */
                public peerId: string;

                /** ConnectionRequest qos. */
                public qos?: (juicetokens.transport.network.IQualityOfService|null);

                /**
                 * Creates a new ConnectionRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ConnectionRequest instance
                 */
                public static create(properties?: juicetokens.transport.network.IConnectionRequest): juicetokens.transport.network.ConnectionRequest;

                /**
                 * Encodes the specified ConnectionRequest message. Does not implicitly {@link juicetokens.transport.network.ConnectionRequest.verify|verify} messages.
                 * @param message ConnectionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IConnectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ConnectionRequest message, length delimited. Does not implicitly {@link juicetokens.transport.network.ConnectionRequest.verify|verify} messages.
                 * @param message ConnectionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IConnectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ConnectionRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ConnectionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.ConnectionRequest;

                /**
                 * Decodes a ConnectionRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ConnectionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.ConnectionRequest;

                /**
                 * Verifies a ConnectionRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ConnectionRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ConnectionRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.ConnectionRequest;

                /**
                 * Creates a plain object from a ConnectionRequest message. Also converts values to other types if specified.
                 * @param message ConnectionRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.ConnectionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ConnectionRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ConnectionRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ConnectionState. */
            interface IConnectionState {

                /** ConnectionState connectionId */
                connectionId?: (string|null);

                /** ConnectionState status */
                status?: (juicetokens.transport.network.ConnectionState.Status|null);

                /** ConnectionState quality */
                quality?: (number|null);

                /** ConnectionState metrics */
                metrics?: ({ [k: string]: number }|null);

                /** ConnectionState metadata */
                metadata?: ({ [k: string]: string }|null);

                /** ConnectionState errorMessage */
                errorMessage?: (string|null);
            }

            /** Represents a ConnectionState. */
            class ConnectionState implements IConnectionState {

                /**
                 * Constructs a new ConnectionState.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IConnectionState);

                /** ConnectionState connectionId. */
                public connectionId: string;

                /** ConnectionState status. */
                public status: juicetokens.transport.network.ConnectionState.Status;

                /** ConnectionState quality. */
                public quality: number;

                /** ConnectionState metrics. */
                public metrics: { [k: string]: number };

                /** ConnectionState metadata. */
                public metadata: { [k: string]: string };

                /** ConnectionState errorMessage. */
                public errorMessage: string;

                /**
                 * Creates a new ConnectionState instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ConnectionState instance
                 */
                public static create(properties?: juicetokens.transport.network.IConnectionState): juicetokens.transport.network.ConnectionState;

                /**
                 * Encodes the specified ConnectionState message. Does not implicitly {@link juicetokens.transport.network.ConnectionState.verify|verify} messages.
                 * @param message ConnectionState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IConnectionState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ConnectionState message, length delimited. Does not implicitly {@link juicetokens.transport.network.ConnectionState.verify|verify} messages.
                 * @param message ConnectionState message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IConnectionState, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ConnectionState message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ConnectionState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.ConnectionState;

                /**
                 * Decodes a ConnectionState message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ConnectionState
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.ConnectionState;

                /**
                 * Verifies a ConnectionState message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ConnectionState message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ConnectionState
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.ConnectionState;

                /**
                 * Creates a plain object from a ConnectionState message. Also converts values to other types if specified.
                 * @param message ConnectionState
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.ConnectionState, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ConnectionState to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ConnectionState
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace ConnectionState {

                /** Status enum. */
                enum Status {
                    INITIALIZING = 0,
                    CONNECTING = 1,
                    CONNECTED = 2,
                    DISCONNECTING = 3,
                    DISCONNECTED = 4,
                    ERROR = 5
                }
            }

            /** Properties of a TransportNegotiation. */
            interface ITransportNegotiation {

                /** TransportNegotiation protocols */
                protocols?: (string[]|null);

                /** TransportNegotiation parameters */
                parameters?: ({ [k: string]: Uint8Array }|null);

                /** TransportNegotiation constraints */
                constraints?: ({ [k: string]: string }|null);

                /** TransportNegotiation preferredProtocol */
                preferredProtocol?: (string|null);
            }

            /** Represents a TransportNegotiation. */
            class TransportNegotiation implements ITransportNegotiation {

                /**
                 * Constructs a new TransportNegotiation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.ITransportNegotiation);

                /** TransportNegotiation protocols. */
                public protocols: string[];

                /** TransportNegotiation parameters. */
                public parameters: { [k: string]: Uint8Array };

                /** TransportNegotiation constraints. */
                public constraints: { [k: string]: string };

                /** TransportNegotiation preferredProtocol. */
                public preferredProtocol: string;

                /**
                 * Creates a new TransportNegotiation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TransportNegotiation instance
                 */
                public static create(properties?: juicetokens.transport.network.ITransportNegotiation): juicetokens.transport.network.TransportNegotiation;

                /**
                 * Encodes the specified TransportNegotiation message. Does not implicitly {@link juicetokens.transport.network.TransportNegotiation.verify|verify} messages.
                 * @param message TransportNegotiation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.ITransportNegotiation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TransportNegotiation message, length delimited. Does not implicitly {@link juicetokens.transport.network.TransportNegotiation.verify|verify} messages.
                 * @param message TransportNegotiation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.ITransportNegotiation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TransportNegotiation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TransportNegotiation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.TransportNegotiation;

                /**
                 * Decodes a TransportNegotiation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TransportNegotiation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.TransportNegotiation;

                /**
                 * Verifies a TransportNegotiation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TransportNegotiation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TransportNegotiation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.TransportNegotiation;

                /**
                 * Creates a plain object from a TransportNegotiation message. Also converts values to other types if specified.
                 * @param message TransportNegotiation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.TransportNegotiation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TransportNegotiation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TransportNegotiation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a QualityOfService. */
            interface IQualityOfService {

                /** QualityOfService minBandwidth */
                minBandwidth?: (number|Long|null);

                /** QualityOfService maxLatency */
                maxLatency?: (number|null);

                /** QualityOfService maxPacketLoss */
                maxPacketLoss?: (number|null);

                /** QualityOfService requirements */
                requirements?: ({ [k: string]: string }|null);

                /** QualityOfService priority */
                priority?: (number|null);
            }

            /** Represents a QualityOfService. */
            class QualityOfService implements IQualityOfService {

                /**
                 * Constructs a new QualityOfService.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IQualityOfService);

                /** QualityOfService minBandwidth. */
                public minBandwidth: (number|Long);

                /** QualityOfService maxLatency. */
                public maxLatency: number;

                /** QualityOfService maxPacketLoss. */
                public maxPacketLoss: number;

                /** QualityOfService requirements. */
                public requirements: { [k: string]: string };

                /** QualityOfService priority. */
                public priority: number;

                /**
                 * Creates a new QualityOfService instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns QualityOfService instance
                 */
                public static create(properties?: juicetokens.transport.network.IQualityOfService): juicetokens.transport.network.QualityOfService;

                /**
                 * Encodes the specified QualityOfService message. Does not implicitly {@link juicetokens.transport.network.QualityOfService.verify|verify} messages.
                 * @param message QualityOfService message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IQualityOfService, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QualityOfService message, length delimited. Does not implicitly {@link juicetokens.transport.network.QualityOfService.verify|verify} messages.
                 * @param message QualityOfService message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IQualityOfService, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QualityOfService message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QualityOfService
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.QualityOfService;

                /**
                 * Decodes a QualityOfService message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QualityOfService
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.QualityOfService;

                /**
                 * Verifies a QualityOfService message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QualityOfService message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QualityOfService
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.QualityOfService;

                /**
                 * Creates a plain object from a QualityOfService message. Also converts values to other types if specified.
                 * @param message QualityOfService
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.QualityOfService, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QualityOfService to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for QualityOfService
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Represents a NetworkService */
            class NetworkService extends $protobuf.rpc.Service {

                /**
                 * Constructs a new NetworkService service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Creates new NetworkService service using the specified rpc implementation.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 * @returns RPC service. Useful where requests and/or responses are streamed.
                 */
                public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): NetworkService;

                /**
                 * Calls DiscoverPeers.
                 * @param request PeerDiscoveryRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and PeerInfo
                 */
                public discoverPeers(request: juicetokens.transport.network.IPeerDiscoveryRequest, callback: juicetokens.transport.network.NetworkService.DiscoverPeersCallback): void;

                /**
                 * Calls DiscoverPeers.
                 * @param request PeerDiscoveryRequest message or plain object
                 * @returns Promise
                 */
                public discoverPeers(request: juicetokens.transport.network.IPeerDiscoveryRequest): Promise<juicetokens.transport.network.PeerInfo>;

                /**
                 * Calls GetMeshStatus.
                 * @param request GetMeshStatusRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and GetMeshStatusResponse
                 */
                public getMeshStatus(request: juicetokens.transport.network.IGetMeshStatusRequest, callback: juicetokens.transport.network.NetworkService.GetMeshStatusCallback): void;

                /**
                 * Calls GetMeshStatus.
                 * @param request GetMeshStatusRequest message or plain object
                 * @returns Promise
                 */
                public getMeshStatus(request: juicetokens.transport.network.IGetMeshStatusRequest): Promise<juicetokens.transport.network.GetMeshStatusResponse>;

                /**
                 * Calls UpdateRoutingTable.
                 * @param request UpdateRoutingTableRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and UpdateRoutingTableResponse
                 */
                public updateRoutingTable(request: juicetokens.transport.network.IUpdateRoutingTableRequest, callback: juicetokens.transport.network.NetworkService.UpdateRoutingTableCallback): void;

                /**
                 * Calls UpdateRoutingTable.
                 * @param request UpdateRoutingTableRequest message or plain object
                 * @returns Promise
                 */
                public updateRoutingTable(request: juicetokens.transport.network.IUpdateRoutingTableRequest): Promise<juicetokens.transport.network.UpdateRoutingTableResponse>;

                /**
                 * Calls GetNetworkHealth.
                 * @param request GetNetworkHealthRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and GetNetworkHealthResponse
                 */
                public getNetworkHealth(request: juicetokens.transport.network.IGetNetworkHealthRequest, callback: juicetokens.transport.network.NetworkService.GetNetworkHealthCallback): void;

                /**
                 * Calls GetNetworkHealth.
                 * @param request GetNetworkHealthRequest message or plain object
                 * @returns Promise
                 */
                public getNetworkHealth(request: juicetokens.transport.network.IGetNetworkHealthRequest): Promise<juicetokens.transport.network.GetNetworkHealthResponse>;

                /**
                 * Calls StoreAndForwardMessage.
                 * @param request StoreAndForwardRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and StoreAndForwardResponse
                 */
                public storeAndForwardMessage(request: juicetokens.transport.network.IStoreAndForwardRequest, callback: juicetokens.transport.network.NetworkService.StoreAndForwardMessageCallback): void;

                /**
                 * Calls StoreAndForwardMessage.
                 * @param request StoreAndForwardRequest message or plain object
                 * @returns Promise
                 */
                public storeAndForwardMessage(request: juicetokens.transport.network.IStoreAndForwardRequest): Promise<juicetokens.transport.network.StoreAndForwardResponse>;

                /**
                 * Calls EstablishConnection.
                 * @param request ConnectionRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and ConnectionState
                 */
                public establishConnection(request: juicetokens.transport.network.IConnectionRequest, callback: juicetokens.transport.network.NetworkService.EstablishConnectionCallback): void;

                /**
                 * Calls EstablishConnection.
                 * @param request ConnectionRequest message or plain object
                 * @returns Promise
                 */
                public establishConnection(request: juicetokens.transport.network.IConnectionRequest): Promise<juicetokens.transport.network.ConnectionState>;

                /**
                 * Calls GetConnectionState.
                 * @param request GetConnectionStateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and ConnectionState
                 */
                public getConnectionState(request: juicetokens.transport.network.IGetConnectionStateRequest, callback: juicetokens.transport.network.NetworkService.GetConnectionStateCallback): void;

                /**
                 * Calls GetConnectionState.
                 * @param request GetConnectionStateRequest message or plain object
                 * @returns Promise
                 */
                public getConnectionState(request: juicetokens.transport.network.IGetConnectionStateRequest): Promise<juicetokens.transport.network.ConnectionState>;

                /**
                 * Calls CloseConnection.
                 * @param request CloseConnectionRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and CloseConnectionResponse
                 */
                public closeConnection(request: juicetokens.transport.network.ICloseConnectionRequest, callback: juicetokens.transport.network.NetworkService.CloseConnectionCallback): void;

                /**
                 * Calls CloseConnection.
                 * @param request CloseConnectionRequest message or plain object
                 * @returns Promise
                 */
                public closeConnection(request: juicetokens.transport.network.ICloseConnectionRequest): Promise<juicetokens.transport.network.CloseConnectionResponse>;
            }

            namespace NetworkService {

                /**
                 * Callback as used by {@link juicetokens.transport.network.NetworkService#discoverPeers}.
                 * @param error Error, if any
                 * @param [response] PeerInfo
                 */
                type DiscoverPeersCallback = (error: (Error|null), response?: juicetokens.transport.network.PeerInfo) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.network.NetworkService#getMeshStatus}.
                 * @param error Error, if any
                 * @param [response] GetMeshStatusResponse
                 */
                type GetMeshStatusCallback = (error: (Error|null), response?: juicetokens.transport.network.GetMeshStatusResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.network.NetworkService#updateRoutingTable}.
                 * @param error Error, if any
                 * @param [response] UpdateRoutingTableResponse
                 */
                type UpdateRoutingTableCallback = (error: (Error|null), response?: juicetokens.transport.network.UpdateRoutingTableResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.network.NetworkService#getNetworkHealth}.
                 * @param error Error, if any
                 * @param [response] GetNetworkHealthResponse
                 */
                type GetNetworkHealthCallback = (error: (Error|null), response?: juicetokens.transport.network.GetNetworkHealthResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.network.NetworkService#storeAndForwardMessage}.
                 * @param error Error, if any
                 * @param [response] StoreAndForwardResponse
                 */
                type StoreAndForwardMessageCallback = (error: (Error|null), response?: juicetokens.transport.network.StoreAndForwardResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.network.NetworkService#establishConnection}.
                 * @param error Error, if any
                 * @param [response] ConnectionState
                 */
                type EstablishConnectionCallback = (error: (Error|null), response?: juicetokens.transport.network.ConnectionState) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.network.NetworkService#getConnectionState}.
                 * @param error Error, if any
                 * @param [response] ConnectionState
                 */
                type GetConnectionStateCallback = (error: (Error|null), response?: juicetokens.transport.network.ConnectionState) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.network.NetworkService#closeConnection}.
                 * @param error Error, if any
                 * @param [response] CloseConnectionResponse
                 */
                type CloseConnectionCallback = (error: (Error|null), response?: juicetokens.transport.network.CloseConnectionResponse) => void;
            }

            /** Properties of a GetMeshStatusRequest. */
            interface IGetMeshStatusRequest {

                /** GetMeshStatusRequest includeMetrics */
                includeMetrics?: (boolean|null);

                /** GetMeshStatusRequest includeRoutingTable */
                includeRoutingTable?: (boolean|null);
            }

            /** Represents a GetMeshStatusRequest. */
            class GetMeshStatusRequest implements IGetMeshStatusRequest {

                /**
                 * Constructs a new GetMeshStatusRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IGetMeshStatusRequest);

                /** GetMeshStatusRequest includeMetrics. */
                public includeMetrics: boolean;

                /** GetMeshStatusRequest includeRoutingTable. */
                public includeRoutingTable: boolean;

                /**
                 * Creates a new GetMeshStatusRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetMeshStatusRequest instance
                 */
                public static create(properties?: juicetokens.transport.network.IGetMeshStatusRequest): juicetokens.transport.network.GetMeshStatusRequest;

                /**
                 * Encodes the specified GetMeshStatusRequest message. Does not implicitly {@link juicetokens.transport.network.GetMeshStatusRequest.verify|verify} messages.
                 * @param message GetMeshStatusRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IGetMeshStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetMeshStatusRequest message, length delimited. Does not implicitly {@link juicetokens.transport.network.GetMeshStatusRequest.verify|verify} messages.
                 * @param message GetMeshStatusRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IGetMeshStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetMeshStatusRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetMeshStatusRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.GetMeshStatusRequest;

                /**
                 * Decodes a GetMeshStatusRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetMeshStatusRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.GetMeshStatusRequest;

                /**
                 * Verifies a GetMeshStatusRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetMeshStatusRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetMeshStatusRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.GetMeshStatusRequest;

                /**
                 * Creates a plain object from a GetMeshStatusRequest message. Also converts values to other types if specified.
                 * @param message GetMeshStatusRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.GetMeshStatusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetMeshStatusRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetMeshStatusRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetMeshStatusResponse. */
            interface IGetMeshStatusResponse {

                /** GetMeshStatusResponse metrics */
                metrics?: (juicetokens.transport.network.INetworkHealthMetrics|null);

                /** GetMeshStatusResponse routingTable */
                routingTable?: (juicetokens.transport.network.IRoutingTable|null);

                /** GetMeshStatusResponse connectedPeers */
                connectedPeers?: (juicetokens.transport.network.IPeerInfo[]|null);

                /** GetMeshStatusResponse configuration */
                configuration?: (juicetokens.transport.network.IMeshConfiguration|null);
            }

            /** Represents a GetMeshStatusResponse. */
            class GetMeshStatusResponse implements IGetMeshStatusResponse {

                /**
                 * Constructs a new GetMeshStatusResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IGetMeshStatusResponse);

                /** GetMeshStatusResponse metrics. */
                public metrics?: (juicetokens.transport.network.INetworkHealthMetrics|null);

                /** GetMeshStatusResponse routingTable. */
                public routingTable?: (juicetokens.transport.network.IRoutingTable|null);

                /** GetMeshStatusResponse connectedPeers. */
                public connectedPeers: juicetokens.transport.network.IPeerInfo[];

                /** GetMeshStatusResponse configuration. */
                public configuration?: (juicetokens.transport.network.IMeshConfiguration|null);

                /**
                 * Creates a new GetMeshStatusResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetMeshStatusResponse instance
                 */
                public static create(properties?: juicetokens.transport.network.IGetMeshStatusResponse): juicetokens.transport.network.GetMeshStatusResponse;

                /**
                 * Encodes the specified GetMeshStatusResponse message. Does not implicitly {@link juicetokens.transport.network.GetMeshStatusResponse.verify|verify} messages.
                 * @param message GetMeshStatusResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IGetMeshStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetMeshStatusResponse message, length delimited. Does not implicitly {@link juicetokens.transport.network.GetMeshStatusResponse.verify|verify} messages.
                 * @param message GetMeshStatusResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IGetMeshStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetMeshStatusResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetMeshStatusResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.GetMeshStatusResponse;

                /**
                 * Decodes a GetMeshStatusResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetMeshStatusResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.GetMeshStatusResponse;

                /**
                 * Verifies a GetMeshStatusResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetMeshStatusResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetMeshStatusResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.GetMeshStatusResponse;

                /**
                 * Creates a plain object from a GetMeshStatusResponse message. Also converts values to other types if specified.
                 * @param message GetMeshStatusResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.GetMeshStatusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetMeshStatusResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetMeshStatusResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an UpdateRoutingTableRequest. */
            interface IUpdateRoutingTableRequest {

                /** UpdateRoutingTableRequest newRoutes */
                newRoutes?: (juicetokens.transport.network.IRouteEntry[]|null);

                /** UpdateRoutingTableRequest forceUpdate */
                forceUpdate?: (boolean|null);

                /** UpdateRoutingTableRequest version */
                version?: (number|null);
            }

            /** Represents an UpdateRoutingTableRequest. */
            class UpdateRoutingTableRequest implements IUpdateRoutingTableRequest {

                /**
                 * Constructs a new UpdateRoutingTableRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IUpdateRoutingTableRequest);

                /** UpdateRoutingTableRequest newRoutes. */
                public newRoutes: juicetokens.transport.network.IRouteEntry[];

                /** UpdateRoutingTableRequest forceUpdate. */
                public forceUpdate: boolean;

                /** UpdateRoutingTableRequest version. */
                public version: number;

                /**
                 * Creates a new UpdateRoutingTableRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UpdateRoutingTableRequest instance
                 */
                public static create(properties?: juicetokens.transport.network.IUpdateRoutingTableRequest): juicetokens.transport.network.UpdateRoutingTableRequest;

                /**
                 * Encodes the specified UpdateRoutingTableRequest message. Does not implicitly {@link juicetokens.transport.network.UpdateRoutingTableRequest.verify|verify} messages.
                 * @param message UpdateRoutingTableRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IUpdateRoutingTableRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateRoutingTableRequest message, length delimited. Does not implicitly {@link juicetokens.transport.network.UpdateRoutingTableRequest.verify|verify} messages.
                 * @param message UpdateRoutingTableRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IUpdateRoutingTableRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateRoutingTableRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateRoutingTableRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.UpdateRoutingTableRequest;

                /**
                 * Decodes an UpdateRoutingTableRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateRoutingTableRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.UpdateRoutingTableRequest;

                /**
                 * Verifies an UpdateRoutingTableRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateRoutingTableRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateRoutingTableRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.UpdateRoutingTableRequest;

                /**
                 * Creates a plain object from an UpdateRoutingTableRequest message. Also converts values to other types if specified.
                 * @param message UpdateRoutingTableRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.UpdateRoutingTableRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateRoutingTableRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for UpdateRoutingTableRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an UpdateRoutingTableResponse. */
            interface IUpdateRoutingTableResponse {

                /** UpdateRoutingTableResponse success */
                success?: (boolean|null);

                /** UpdateRoutingTableResponse updatedRoutes */
                updatedRoutes?: (number|null);

                /** UpdateRoutingTableResponse errorMessage */
                errorMessage?: (string|null);

                /** UpdateRoutingTableResponse newVersion */
                newVersion?: (number|null);
            }

            /** Represents an UpdateRoutingTableResponse. */
            class UpdateRoutingTableResponse implements IUpdateRoutingTableResponse {

                /**
                 * Constructs a new UpdateRoutingTableResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IUpdateRoutingTableResponse);

                /** UpdateRoutingTableResponse success. */
                public success: boolean;

                /** UpdateRoutingTableResponse updatedRoutes. */
                public updatedRoutes: number;

                /** UpdateRoutingTableResponse errorMessage. */
                public errorMessage: string;

                /** UpdateRoutingTableResponse newVersion. */
                public newVersion: number;

                /**
                 * Creates a new UpdateRoutingTableResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UpdateRoutingTableResponse instance
                 */
                public static create(properties?: juicetokens.transport.network.IUpdateRoutingTableResponse): juicetokens.transport.network.UpdateRoutingTableResponse;

                /**
                 * Encodes the specified UpdateRoutingTableResponse message. Does not implicitly {@link juicetokens.transport.network.UpdateRoutingTableResponse.verify|verify} messages.
                 * @param message UpdateRoutingTableResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IUpdateRoutingTableResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UpdateRoutingTableResponse message, length delimited. Does not implicitly {@link juicetokens.transport.network.UpdateRoutingTableResponse.verify|verify} messages.
                 * @param message UpdateRoutingTableResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IUpdateRoutingTableResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an UpdateRoutingTableResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UpdateRoutingTableResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.UpdateRoutingTableResponse;

                /**
                 * Decodes an UpdateRoutingTableResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UpdateRoutingTableResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.UpdateRoutingTableResponse;

                /**
                 * Verifies an UpdateRoutingTableResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an UpdateRoutingTableResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UpdateRoutingTableResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.UpdateRoutingTableResponse;

                /**
                 * Creates a plain object from an UpdateRoutingTableResponse message. Also converts values to other types if specified.
                 * @param message UpdateRoutingTableResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.UpdateRoutingTableResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UpdateRoutingTableResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for UpdateRoutingTableResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetNetworkHealthRequest. */
            interface IGetNetworkHealthRequest {

                /** GetNetworkHealthRequest detailedMetrics */
                detailedMetrics?: (boolean|null);

                /** GetNetworkHealthRequest targetPeers */
                targetPeers?: (string[]|null);
            }

            /** Represents a GetNetworkHealthRequest. */
            class GetNetworkHealthRequest implements IGetNetworkHealthRequest {

                /**
                 * Constructs a new GetNetworkHealthRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IGetNetworkHealthRequest);

                /** GetNetworkHealthRequest detailedMetrics. */
                public detailedMetrics: boolean;

                /** GetNetworkHealthRequest targetPeers. */
                public targetPeers: string[];

                /**
                 * Creates a new GetNetworkHealthRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetNetworkHealthRequest instance
                 */
                public static create(properties?: juicetokens.transport.network.IGetNetworkHealthRequest): juicetokens.transport.network.GetNetworkHealthRequest;

                /**
                 * Encodes the specified GetNetworkHealthRequest message. Does not implicitly {@link juicetokens.transport.network.GetNetworkHealthRequest.verify|verify} messages.
                 * @param message GetNetworkHealthRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IGetNetworkHealthRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetNetworkHealthRequest message, length delimited. Does not implicitly {@link juicetokens.transport.network.GetNetworkHealthRequest.verify|verify} messages.
                 * @param message GetNetworkHealthRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IGetNetworkHealthRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetNetworkHealthRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetNetworkHealthRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.GetNetworkHealthRequest;

                /**
                 * Decodes a GetNetworkHealthRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetNetworkHealthRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.GetNetworkHealthRequest;

                /**
                 * Verifies a GetNetworkHealthRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetNetworkHealthRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetNetworkHealthRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.GetNetworkHealthRequest;

                /**
                 * Creates a plain object from a GetNetworkHealthRequest message. Also converts values to other types if specified.
                 * @param message GetNetworkHealthRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.GetNetworkHealthRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetNetworkHealthRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetNetworkHealthRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetNetworkHealthResponse. */
            interface IGetNetworkHealthResponse {

                /** GetNetworkHealthResponse metrics */
                metrics?: (juicetokens.transport.network.INetworkHealthMetrics|null);

                /** GetNetworkHealthResponse healthy */
                healthy?: (boolean|null);

                /** GetNetworkHealthResponse statusMessage */
                statusMessage?: (string|null);
            }

            /** Represents a GetNetworkHealthResponse. */
            class GetNetworkHealthResponse implements IGetNetworkHealthResponse {

                /**
                 * Constructs a new GetNetworkHealthResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IGetNetworkHealthResponse);

                /** GetNetworkHealthResponse metrics. */
                public metrics?: (juicetokens.transport.network.INetworkHealthMetrics|null);

                /** GetNetworkHealthResponse healthy. */
                public healthy: boolean;

                /** GetNetworkHealthResponse statusMessage. */
                public statusMessage: string;

                /**
                 * Creates a new GetNetworkHealthResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetNetworkHealthResponse instance
                 */
                public static create(properties?: juicetokens.transport.network.IGetNetworkHealthResponse): juicetokens.transport.network.GetNetworkHealthResponse;

                /**
                 * Encodes the specified GetNetworkHealthResponse message. Does not implicitly {@link juicetokens.transport.network.GetNetworkHealthResponse.verify|verify} messages.
                 * @param message GetNetworkHealthResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IGetNetworkHealthResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetNetworkHealthResponse message, length delimited. Does not implicitly {@link juicetokens.transport.network.GetNetworkHealthResponse.verify|verify} messages.
                 * @param message GetNetworkHealthResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IGetNetworkHealthResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetNetworkHealthResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetNetworkHealthResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.GetNetworkHealthResponse;

                /**
                 * Decodes a GetNetworkHealthResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetNetworkHealthResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.GetNetworkHealthResponse;

                /**
                 * Verifies a GetNetworkHealthResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetNetworkHealthResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetNetworkHealthResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.GetNetworkHealthResponse;

                /**
                 * Creates a plain object from a GetNetworkHealthResponse message. Also converts values to other types if specified.
                 * @param message GetNetworkHealthResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.GetNetworkHealthResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetNetworkHealthResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetNetworkHealthResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StoreAndForwardResponse. */
            interface IStoreAndForwardResponse {

                /** StoreAndForwardResponse success */
                success?: (boolean|null);

                /** StoreAndForwardResponse errorMessage */
                errorMessage?: (string|null);

                /** StoreAndForwardResponse storageId */
                storageId?: (string|null);

                /** StoreAndForwardResponse expiryTimeMs */
                expiryTimeMs?: (number|Long|null);
            }

            /** Represents a StoreAndForwardResponse. */
            class StoreAndForwardResponse implements IStoreAndForwardResponse {

                /**
                 * Constructs a new StoreAndForwardResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IStoreAndForwardResponse);

                /** StoreAndForwardResponse success. */
                public success: boolean;

                /** StoreAndForwardResponse errorMessage. */
                public errorMessage: string;

                /** StoreAndForwardResponse storageId. */
                public storageId: string;

                /** StoreAndForwardResponse expiryTimeMs. */
                public expiryTimeMs: (number|Long);

                /**
                 * Creates a new StoreAndForwardResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StoreAndForwardResponse instance
                 */
                public static create(properties?: juicetokens.transport.network.IStoreAndForwardResponse): juicetokens.transport.network.StoreAndForwardResponse;

                /**
                 * Encodes the specified StoreAndForwardResponse message. Does not implicitly {@link juicetokens.transport.network.StoreAndForwardResponse.verify|verify} messages.
                 * @param message StoreAndForwardResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IStoreAndForwardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StoreAndForwardResponse message, length delimited. Does not implicitly {@link juicetokens.transport.network.StoreAndForwardResponse.verify|verify} messages.
                 * @param message StoreAndForwardResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IStoreAndForwardResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StoreAndForwardResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StoreAndForwardResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.StoreAndForwardResponse;

                /**
                 * Decodes a StoreAndForwardResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StoreAndForwardResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.StoreAndForwardResponse;

                /**
                 * Verifies a StoreAndForwardResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StoreAndForwardResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StoreAndForwardResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.StoreAndForwardResponse;

                /**
                 * Creates a plain object from a StoreAndForwardResponse message. Also converts values to other types if specified.
                 * @param message StoreAndForwardResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.StoreAndForwardResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StoreAndForwardResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StoreAndForwardResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GetConnectionStateRequest. */
            interface IGetConnectionStateRequest {

                /** GetConnectionStateRequest connectionId */
                connectionId?: (string|null);
            }

            /** Represents a GetConnectionStateRequest. */
            class GetConnectionStateRequest implements IGetConnectionStateRequest {

                /**
                 * Constructs a new GetConnectionStateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.IGetConnectionStateRequest);

                /** GetConnectionStateRequest connectionId. */
                public connectionId: string;

                /**
                 * Creates a new GetConnectionStateRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GetConnectionStateRequest instance
                 */
                public static create(properties?: juicetokens.transport.network.IGetConnectionStateRequest): juicetokens.transport.network.GetConnectionStateRequest;

                /**
                 * Encodes the specified GetConnectionStateRequest message. Does not implicitly {@link juicetokens.transport.network.GetConnectionStateRequest.verify|verify} messages.
                 * @param message GetConnectionStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.IGetConnectionStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GetConnectionStateRequest message, length delimited. Does not implicitly {@link juicetokens.transport.network.GetConnectionStateRequest.verify|verify} messages.
                 * @param message GetConnectionStateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.IGetConnectionStateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GetConnectionStateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GetConnectionStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.GetConnectionStateRequest;

                /**
                 * Decodes a GetConnectionStateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GetConnectionStateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.GetConnectionStateRequest;

                /**
                 * Verifies a GetConnectionStateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GetConnectionStateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GetConnectionStateRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.GetConnectionStateRequest;

                /**
                 * Creates a plain object from a GetConnectionStateRequest message. Also converts values to other types if specified.
                 * @param message GetConnectionStateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.GetConnectionStateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GetConnectionStateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GetConnectionStateRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CloseConnectionRequest. */
            interface ICloseConnectionRequest {

                /** CloseConnectionRequest connectionId */
                connectionId?: (string|null);

                /** CloseConnectionRequest force */
                force?: (boolean|null);
            }

            /** Represents a CloseConnectionRequest. */
            class CloseConnectionRequest implements ICloseConnectionRequest {

                /**
                 * Constructs a new CloseConnectionRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.ICloseConnectionRequest);

                /** CloseConnectionRequest connectionId. */
                public connectionId: string;

                /** CloseConnectionRequest force. */
                public force: boolean;

                /**
                 * Creates a new CloseConnectionRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CloseConnectionRequest instance
                 */
                public static create(properties?: juicetokens.transport.network.ICloseConnectionRequest): juicetokens.transport.network.CloseConnectionRequest;

                /**
                 * Encodes the specified CloseConnectionRequest message. Does not implicitly {@link juicetokens.transport.network.CloseConnectionRequest.verify|verify} messages.
                 * @param message CloseConnectionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.ICloseConnectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CloseConnectionRequest message, length delimited. Does not implicitly {@link juicetokens.transport.network.CloseConnectionRequest.verify|verify} messages.
                 * @param message CloseConnectionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.ICloseConnectionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CloseConnectionRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CloseConnectionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.CloseConnectionRequest;

                /**
                 * Decodes a CloseConnectionRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CloseConnectionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.CloseConnectionRequest;

                /**
                 * Verifies a CloseConnectionRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CloseConnectionRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CloseConnectionRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.CloseConnectionRequest;

                /**
                 * Creates a plain object from a CloseConnectionRequest message. Also converts values to other types if specified.
                 * @param message CloseConnectionRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.CloseConnectionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CloseConnectionRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CloseConnectionRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CloseConnectionResponse. */
            interface ICloseConnectionResponse {

                /** CloseConnectionResponse success */
                success?: (boolean|null);

                /** CloseConnectionResponse errorMessage */
                errorMessage?: (string|null);
            }

            /** Represents a CloseConnectionResponse. */
            class CloseConnectionResponse implements ICloseConnectionResponse {

                /**
                 * Constructs a new CloseConnectionResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.network.ICloseConnectionResponse);

                /** CloseConnectionResponse success. */
                public success: boolean;

                /** CloseConnectionResponse errorMessage. */
                public errorMessage: string;

                /**
                 * Creates a new CloseConnectionResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CloseConnectionResponse instance
                 */
                public static create(properties?: juicetokens.transport.network.ICloseConnectionResponse): juicetokens.transport.network.CloseConnectionResponse;

                /**
                 * Encodes the specified CloseConnectionResponse message. Does not implicitly {@link juicetokens.transport.network.CloseConnectionResponse.verify|verify} messages.
                 * @param message CloseConnectionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.network.ICloseConnectionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CloseConnectionResponse message, length delimited. Does not implicitly {@link juicetokens.transport.network.CloseConnectionResponse.verify|verify} messages.
                 * @param message CloseConnectionResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.network.ICloseConnectionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CloseConnectionResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CloseConnectionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.network.CloseConnectionResponse;

                /**
                 * Decodes a CloseConnectionResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CloseConnectionResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.network.CloseConnectionResponse;

                /**
                 * Verifies a CloseConnectionResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CloseConnectionResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CloseConnectionResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.network.CloseConnectionResponse;

                /**
                 * Creates a plain object from a CloseConnectionResponse message. Also converts values to other types if specified.
                 * @param message CloseConnectionResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.network.CloseConnectionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CloseConnectionResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CloseConnectionResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Namespace pipe. */
        namespace pipe {

            /** PipeType enum. */
            enum PipeType {
                QR_KISS = 0,
                BLE = 1,
                NFC = 2,
                WEB = 3
            }

            /** Properties of a PipeConfiguration. */
            interface IPipeConfiguration {

                /** PipeConfiguration pipeType */
                pipeType?: (juicetokens.transport.pipe.PipeType|null);

                /** PipeConfiguration pipeId */
                pipeId?: (string|null);

                /** PipeConfiguration timeoutMs */
                timeoutMs?: (number|null);

                /** PipeConfiguration qrKiss */
                qrKiss?: (juicetokens.transport.pipe.IQrKissConfig|null);

                /** PipeConfiguration ble */
                ble?: (juicetokens.transport.pipe.IBleConfig|null);

                /** PipeConfiguration nfc */
                nfc?: (juicetokens.transport.pipe.INfcConfig|null);

                /** PipeConfiguration web */
                web?: (juicetokens.transport.pipe.IWebConfig|null);
            }

            /** Represents a PipeConfiguration. */
            class PipeConfiguration implements IPipeConfiguration {

                /**
                 * Constructs a new PipeConfiguration.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IPipeConfiguration);

                /** PipeConfiguration pipeType. */
                public pipeType: juicetokens.transport.pipe.PipeType;

                /** PipeConfiguration pipeId. */
                public pipeId: string;

                /** PipeConfiguration timeoutMs. */
                public timeoutMs: number;

                /** PipeConfiguration qrKiss. */
                public qrKiss?: (juicetokens.transport.pipe.IQrKissConfig|null);

                /** PipeConfiguration ble. */
                public ble?: (juicetokens.transport.pipe.IBleConfig|null);

                /** PipeConfiguration nfc. */
                public nfc?: (juicetokens.transport.pipe.INfcConfig|null);

                /** PipeConfiguration web. */
                public web?: (juicetokens.transport.pipe.IWebConfig|null);

                /** PipeConfiguration typeConfig. */
                public typeConfig?: ("qrKiss"|"ble"|"nfc"|"web");

                /**
                 * Creates a new PipeConfiguration instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PipeConfiguration instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IPipeConfiguration): juicetokens.transport.pipe.PipeConfiguration;

                /**
                 * Encodes the specified PipeConfiguration message. Does not implicitly {@link juicetokens.transport.pipe.PipeConfiguration.verify|verify} messages.
                 * @param message PipeConfiguration message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IPipeConfiguration, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PipeConfiguration message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.PipeConfiguration.verify|verify} messages.
                 * @param message PipeConfiguration message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IPipeConfiguration, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PipeConfiguration message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PipeConfiguration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.PipeConfiguration;

                /**
                 * Decodes a PipeConfiguration message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PipeConfiguration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.PipeConfiguration;

                /**
                 * Verifies a PipeConfiguration message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PipeConfiguration message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PipeConfiguration
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.PipeConfiguration;

                /**
                 * Creates a plain object from a PipeConfiguration message. Also converts values to other types if specified.
                 * @param message PipeConfiguration
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.PipeConfiguration, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PipeConfiguration to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PipeConfiguration
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a QrKissConfig. */
            interface IQrKissConfig {

                /** QrKissConfig qrCodeVersion */
                qrCodeVersion?: (number|null);

                /** QrKissConfig errorCorrectionLevel */
                errorCorrectionLevel?: (string|null);

                /** QrKissConfig chunkSizeBytes */
                chunkSizeBytes?: (number|null);

                /** QrKissConfig displaySizePixels */
                displaySizePixels?: (number|null);
            }

            /** Represents a QrKissConfig. */
            class QrKissConfig implements IQrKissConfig {

                /**
                 * Constructs a new QrKissConfig.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IQrKissConfig);

                /** QrKissConfig qrCodeVersion. */
                public qrCodeVersion: number;

                /** QrKissConfig errorCorrectionLevel. */
                public errorCorrectionLevel: string;

                /** QrKissConfig chunkSizeBytes. */
                public chunkSizeBytes: number;

                /** QrKissConfig displaySizePixels. */
                public displaySizePixels: number;

                /**
                 * Creates a new QrKissConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns QrKissConfig instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IQrKissConfig): juicetokens.transport.pipe.QrKissConfig;

                /**
                 * Encodes the specified QrKissConfig message. Does not implicitly {@link juicetokens.transport.pipe.QrKissConfig.verify|verify} messages.
                 * @param message QrKissConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IQrKissConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified QrKissConfig message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.QrKissConfig.verify|verify} messages.
                 * @param message QrKissConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IQrKissConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a QrKissConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns QrKissConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.QrKissConfig;

                /**
                 * Decodes a QrKissConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns QrKissConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.QrKissConfig;

                /**
                 * Verifies a QrKissConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a QrKissConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns QrKissConfig
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.QrKissConfig;

                /**
                 * Creates a plain object from a QrKissConfig message. Also converts values to other types if specified.
                 * @param message QrKissConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.QrKissConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this QrKissConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for QrKissConfig
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a BleConfig. */
            interface IBleConfig {

                /** BleConfig serviceUuid */
                serviceUuid?: (string|null);

                /** BleConfig characteristicUuid */
                characteristicUuid?: (string|null);

                /** BleConfig requireBonding */
                requireBonding?: (boolean|null);

                /** BleConfig mtuSize */
                mtuSize?: (number|null);
            }

            /** Represents a BleConfig. */
            class BleConfig implements IBleConfig {

                /**
                 * Constructs a new BleConfig.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IBleConfig);

                /** BleConfig serviceUuid. */
                public serviceUuid: string;

                /** BleConfig characteristicUuid. */
                public characteristicUuid: string;

                /** BleConfig requireBonding. */
                public requireBonding: boolean;

                /** BleConfig mtuSize. */
                public mtuSize: number;

                /**
                 * Creates a new BleConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns BleConfig instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IBleConfig): juicetokens.transport.pipe.BleConfig;

                /**
                 * Encodes the specified BleConfig message. Does not implicitly {@link juicetokens.transport.pipe.BleConfig.verify|verify} messages.
                 * @param message BleConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IBleConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified BleConfig message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.BleConfig.verify|verify} messages.
                 * @param message BleConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IBleConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a BleConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns BleConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.BleConfig;

                /**
                 * Decodes a BleConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns BleConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.BleConfig;

                /**
                 * Verifies a BleConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a BleConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns BleConfig
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.BleConfig;

                /**
                 * Creates a plain object from a BleConfig message. Also converts values to other types if specified.
                 * @param message BleConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.BleConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this BleConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for BleConfig
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a NfcConfig. */
            interface INfcConfig {

                /** NfcConfig aid */
                aid?: (string|null);

                /** NfcConfig useSecureElement */
                useSecureElement?: (boolean|null);

                /** NfcConfig maxMessageSize */
                maxMessageSize?: (number|null);
            }

            /** Represents a NfcConfig. */
            class NfcConfig implements INfcConfig {

                /**
                 * Constructs a new NfcConfig.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.INfcConfig);

                /** NfcConfig aid. */
                public aid: string;

                /** NfcConfig useSecureElement. */
                public useSecureElement: boolean;

                /** NfcConfig maxMessageSize. */
                public maxMessageSize: number;

                /**
                 * Creates a new NfcConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NfcConfig instance
                 */
                public static create(properties?: juicetokens.transport.pipe.INfcConfig): juicetokens.transport.pipe.NfcConfig;

                /**
                 * Encodes the specified NfcConfig message. Does not implicitly {@link juicetokens.transport.pipe.NfcConfig.verify|verify} messages.
                 * @param message NfcConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.INfcConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NfcConfig message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.NfcConfig.verify|verify} messages.
                 * @param message NfcConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.INfcConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NfcConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NfcConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.NfcConfig;

                /**
                 * Decodes a NfcConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NfcConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.NfcConfig;

                /**
                 * Verifies a NfcConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NfcConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NfcConfig
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.NfcConfig;

                /**
                 * Creates a plain object from a NfcConfig message. Also converts values to other types if specified.
                 * @param message NfcConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.NfcConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NfcConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for NfcConfig
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a WebConfig. */
            interface IWebConfig {

                /** WebConfig endpointUrl */
                endpointUrl?: (string|null);

                /** WebConfig useWebsocket */
                useWebsocket?: (boolean|null);

                /** WebConfig headers */
                headers?: ({ [k: string]: string }|null);

                /** WebConfig useTls */
                useTls?: (boolean|null);
            }

            /** Represents a WebConfig. */
            class WebConfig implements IWebConfig {

                /**
                 * Constructs a new WebConfig.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IWebConfig);

                /** WebConfig endpointUrl. */
                public endpointUrl: string;

                /** WebConfig useWebsocket. */
                public useWebsocket: boolean;

                /** WebConfig headers. */
                public headers: { [k: string]: string };

                /** WebConfig useTls. */
                public useTls: boolean;

                /**
                 * Creates a new WebConfig instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns WebConfig instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IWebConfig): juicetokens.transport.pipe.WebConfig;

                /**
                 * Encodes the specified WebConfig message. Does not implicitly {@link juicetokens.transport.pipe.WebConfig.verify|verify} messages.
                 * @param message WebConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IWebConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified WebConfig message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.WebConfig.verify|verify} messages.
                 * @param message WebConfig message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IWebConfig, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a WebConfig message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns WebConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.WebConfig;

                /**
                 * Decodes a WebConfig message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns WebConfig
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.WebConfig;

                /**
                 * Verifies a WebConfig message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a WebConfig message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns WebConfig
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.WebConfig;

                /**
                 * Creates a plain object from a WebConfig message. Also converts values to other types if specified.
                 * @param message WebConfig
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.WebConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this WebConfig to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for WebConfig
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PipeStatus. */
            interface IPipeStatus {

                /** PipeStatus pipeId */
                pipeId?: (string|null);

                /** PipeStatus pipeType */
                pipeType?: (juicetokens.transport.pipe.PipeType|null);

                /** PipeStatus state */
                state?: (juicetokens.transport.pipe.PipeStatus.State|null);

                /** PipeStatus errorMessage */
                errorMessage?: (string|null);

                /** PipeStatus bytesSent */
                bytesSent?: (number|Long|null);

                /** PipeStatus bytesReceived */
                bytesReceived?: (number|Long|null);

                /** PipeStatus roundTripTimeMs */
                roundTripTimeMs?: (number|null);

                /** PipeStatus uptimeSeconds */
                uptimeSeconds?: (number|null);
            }

            /** Represents a PipeStatus. */
            class PipeStatus implements IPipeStatus {

                /**
                 * Constructs a new PipeStatus.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IPipeStatus);

                /** PipeStatus pipeId. */
                public pipeId: string;

                /** PipeStatus pipeType. */
                public pipeType: juicetokens.transport.pipe.PipeType;

                /** PipeStatus state. */
                public state: juicetokens.transport.pipe.PipeStatus.State;

                /** PipeStatus errorMessage. */
                public errorMessage: string;

                /** PipeStatus bytesSent. */
                public bytesSent: (number|Long);

                /** PipeStatus bytesReceived. */
                public bytesReceived: (number|Long);

                /** PipeStatus roundTripTimeMs. */
                public roundTripTimeMs: number;

                /** PipeStatus uptimeSeconds. */
                public uptimeSeconds: number;

                /**
                 * Creates a new PipeStatus instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PipeStatus instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IPipeStatus): juicetokens.transport.pipe.PipeStatus;

                /**
                 * Encodes the specified PipeStatus message. Does not implicitly {@link juicetokens.transport.pipe.PipeStatus.verify|verify} messages.
                 * @param message PipeStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IPipeStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PipeStatus message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.PipeStatus.verify|verify} messages.
                 * @param message PipeStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IPipeStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PipeStatus message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PipeStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.PipeStatus;

                /**
                 * Decodes a PipeStatus message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PipeStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.PipeStatus;

                /**
                 * Verifies a PipeStatus message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PipeStatus message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PipeStatus
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.PipeStatus;

                /**
                 * Creates a plain object from a PipeStatus message. Also converts values to other types if specified.
                 * @param message PipeStatus
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.PipeStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PipeStatus to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PipeStatus
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace PipeStatus {

                /** State enum. */
                enum State {
                    INITIALIZING = 0,
                    READY = 1,
                    CONNECTED = 2,
                    TRANSFERRING = 3,
                    DISCONNECTED = 4,
                    ERROR = 5
                }
            }

            /** Properties of a PipeCapabilities. */
            interface IPipeCapabilities {

                /** PipeCapabilities pipeType */
                pipeType?: (juicetokens.transport.pipe.PipeType|null);

                /** PipeCapabilities maxMessageSizeBytes */
                maxMessageSizeBytes?: (number|null);

                /** PipeCapabilities maxThroughputBytesPerSecond */
                maxThroughputBytesPerSecond?: (number|null);

                /** PipeCapabilities supportsBidirectional */
                supportsBidirectional?: (boolean|null);

                /** PipeCapabilities requiresUserInteraction */
                requiresUserInteraction?: (boolean|null);

                /** PipeCapabilities supportsBackgroundOperation */
                supportsBackgroundOperation?: (boolean|null);

                /** PipeCapabilities supportedFeatures */
                supportedFeatures?: (string[]|null);
            }

            /** Represents a PipeCapabilities. */
            class PipeCapabilities implements IPipeCapabilities {

                /**
                 * Constructs a new PipeCapabilities.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IPipeCapabilities);

                /** PipeCapabilities pipeType. */
                public pipeType: juicetokens.transport.pipe.PipeType;

                /** PipeCapabilities maxMessageSizeBytes. */
                public maxMessageSizeBytes: number;

                /** PipeCapabilities maxThroughputBytesPerSecond. */
                public maxThroughputBytesPerSecond: number;

                /** PipeCapabilities supportsBidirectional. */
                public supportsBidirectional: boolean;

                /** PipeCapabilities requiresUserInteraction. */
                public requiresUserInteraction: boolean;

                /** PipeCapabilities supportsBackgroundOperation. */
                public supportsBackgroundOperation: boolean;

                /** PipeCapabilities supportedFeatures. */
                public supportedFeatures: string[];

                /**
                 * Creates a new PipeCapabilities instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PipeCapabilities instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IPipeCapabilities): juicetokens.transport.pipe.PipeCapabilities;

                /**
                 * Encodes the specified PipeCapabilities message. Does not implicitly {@link juicetokens.transport.pipe.PipeCapabilities.verify|verify} messages.
                 * @param message PipeCapabilities message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IPipeCapabilities, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PipeCapabilities message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.PipeCapabilities.verify|verify} messages.
                 * @param message PipeCapabilities message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IPipeCapabilities, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PipeCapabilities message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PipeCapabilities
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.PipeCapabilities;

                /**
                 * Decodes a PipeCapabilities message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PipeCapabilities
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.PipeCapabilities;

                /**
                 * Verifies a PipeCapabilities message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PipeCapabilities message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PipeCapabilities
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.PipeCapabilities;

                /**
                 * Creates a plain object from a PipeCapabilities message. Also converts values to other types if specified.
                 * @param message PipeCapabilities
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.PipeCapabilities, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PipeCapabilities to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PipeCapabilities
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PipeCreateRequest. */
            interface IPipeCreateRequest {

                /** PipeCreateRequest configuration */
                configuration?: (juicetokens.transport.pipe.IPipeConfiguration|null);

                /** PipeCreateRequest targetInfo */
                targetInfo?: (string|null);

                /** PipeCreateRequest isInitiator */
                isInitiator?: (boolean|null);
            }

            /** Represents a PipeCreateRequest. */
            class PipeCreateRequest implements IPipeCreateRequest {

                /**
                 * Constructs a new PipeCreateRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IPipeCreateRequest);

                /** PipeCreateRequest configuration. */
                public configuration?: (juicetokens.transport.pipe.IPipeConfiguration|null);

                /** PipeCreateRequest targetInfo. */
                public targetInfo: string;

                /** PipeCreateRequest isInitiator. */
                public isInitiator: boolean;

                /**
                 * Creates a new PipeCreateRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PipeCreateRequest instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IPipeCreateRequest): juicetokens.transport.pipe.PipeCreateRequest;

                /**
                 * Encodes the specified PipeCreateRequest message. Does not implicitly {@link juicetokens.transport.pipe.PipeCreateRequest.verify|verify} messages.
                 * @param message PipeCreateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IPipeCreateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PipeCreateRequest message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.PipeCreateRequest.verify|verify} messages.
                 * @param message PipeCreateRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IPipeCreateRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PipeCreateRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PipeCreateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.PipeCreateRequest;

                /**
                 * Decodes a PipeCreateRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PipeCreateRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.PipeCreateRequest;

                /**
                 * Verifies a PipeCreateRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PipeCreateRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PipeCreateRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.PipeCreateRequest;

                /**
                 * Creates a plain object from a PipeCreateRequest message. Also converts values to other types if specified.
                 * @param message PipeCreateRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.PipeCreateRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PipeCreateRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PipeCreateRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PipeCreateResponse. */
            interface IPipeCreateResponse {

                /** PipeCreateResponse success */
                success?: (boolean|null);

                /** PipeCreateResponse pipeId */
                pipeId?: (string|null);

                /** PipeCreateResponse status */
                status?: (juicetokens.transport.pipe.IPipeStatus|null);

                /** PipeCreateResponse capabilities */
                capabilities?: (juicetokens.transport.pipe.IPipeCapabilities|null);

                /** PipeCreateResponse errorMessage */
                errorMessage?: (string|null);
            }

            /** Represents a PipeCreateResponse. */
            class PipeCreateResponse implements IPipeCreateResponse {

                /**
                 * Constructs a new PipeCreateResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IPipeCreateResponse);

                /** PipeCreateResponse success. */
                public success: boolean;

                /** PipeCreateResponse pipeId. */
                public pipeId: string;

                /** PipeCreateResponse status. */
                public status?: (juicetokens.transport.pipe.IPipeStatus|null);

                /** PipeCreateResponse capabilities. */
                public capabilities?: (juicetokens.transport.pipe.IPipeCapabilities|null);

                /** PipeCreateResponse errorMessage. */
                public errorMessage: string;

                /**
                 * Creates a new PipeCreateResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PipeCreateResponse instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IPipeCreateResponse): juicetokens.transport.pipe.PipeCreateResponse;

                /**
                 * Encodes the specified PipeCreateResponse message. Does not implicitly {@link juicetokens.transport.pipe.PipeCreateResponse.verify|verify} messages.
                 * @param message PipeCreateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IPipeCreateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PipeCreateResponse message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.PipeCreateResponse.verify|verify} messages.
                 * @param message PipeCreateResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IPipeCreateResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PipeCreateResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PipeCreateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.PipeCreateResponse;

                /**
                 * Decodes a PipeCreateResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PipeCreateResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.PipeCreateResponse;

                /**
                 * Verifies a PipeCreateResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PipeCreateResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PipeCreateResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.PipeCreateResponse;

                /**
                 * Creates a plain object from a PipeCreateResponse message. Also converts values to other types if specified.
                 * @param message PipeCreateResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.PipeCreateResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PipeCreateResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PipeCreateResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PipeCloseRequest. */
            interface IPipeCloseRequest {

                /** PipeCloseRequest pipeId */
                pipeId?: (string|null);

                /** PipeCloseRequest force */
                force?: (boolean|null);
            }

            /** Represents a PipeCloseRequest. */
            class PipeCloseRequest implements IPipeCloseRequest {

                /**
                 * Constructs a new PipeCloseRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IPipeCloseRequest);

                /** PipeCloseRequest pipeId. */
                public pipeId: string;

                /** PipeCloseRequest force. */
                public force: boolean;

                /**
                 * Creates a new PipeCloseRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PipeCloseRequest instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IPipeCloseRequest): juicetokens.transport.pipe.PipeCloseRequest;

                /**
                 * Encodes the specified PipeCloseRequest message. Does not implicitly {@link juicetokens.transport.pipe.PipeCloseRequest.verify|verify} messages.
                 * @param message PipeCloseRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IPipeCloseRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PipeCloseRequest message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.PipeCloseRequest.verify|verify} messages.
                 * @param message PipeCloseRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IPipeCloseRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PipeCloseRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PipeCloseRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.PipeCloseRequest;

                /**
                 * Decodes a PipeCloseRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PipeCloseRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.PipeCloseRequest;

                /**
                 * Verifies a PipeCloseRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PipeCloseRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PipeCloseRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.PipeCloseRequest;

                /**
                 * Creates a plain object from a PipeCloseRequest message. Also converts values to other types if specified.
                 * @param message PipeCloseRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.PipeCloseRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PipeCloseRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PipeCloseRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PipeCloseResponse. */
            interface IPipeCloseResponse {

                /** PipeCloseResponse success */
                success?: (boolean|null);

                /** PipeCloseResponse errorMessage */
                errorMessage?: (string|null);
            }

            /** Represents a PipeCloseResponse. */
            class PipeCloseResponse implements IPipeCloseResponse {

                /**
                 * Constructs a new PipeCloseResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IPipeCloseResponse);

                /** PipeCloseResponse success. */
                public success: boolean;

                /** PipeCloseResponse errorMessage. */
                public errorMessage: string;

                /**
                 * Creates a new PipeCloseResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PipeCloseResponse instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IPipeCloseResponse): juicetokens.transport.pipe.PipeCloseResponse;

                /**
                 * Encodes the specified PipeCloseResponse message. Does not implicitly {@link juicetokens.transport.pipe.PipeCloseResponse.verify|verify} messages.
                 * @param message PipeCloseResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IPipeCloseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PipeCloseResponse message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.PipeCloseResponse.verify|verify} messages.
                 * @param message PipeCloseResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IPipeCloseResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PipeCloseResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PipeCloseResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.PipeCloseResponse;

                /**
                 * Decodes a PipeCloseResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PipeCloseResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.PipeCloseResponse;

                /**
                 * Verifies a PipeCloseResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PipeCloseResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PipeCloseResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.PipeCloseResponse;

                /**
                 * Creates a plain object from a PipeCloseResponse message. Also converts values to other types if specified.
                 * @param message PipeCloseResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.PipeCloseResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PipeCloseResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PipeCloseResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PipeStatusRequest. */
            interface IPipeStatusRequest {

                /** PipeStatusRequest pipeId */
                pipeId?: (string|null);
            }

            /** Represents a PipeStatusRequest. */
            class PipeStatusRequest implements IPipeStatusRequest {

                /**
                 * Constructs a new PipeStatusRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IPipeStatusRequest);

                /** PipeStatusRequest pipeId. */
                public pipeId: string;

                /**
                 * Creates a new PipeStatusRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PipeStatusRequest instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IPipeStatusRequest): juicetokens.transport.pipe.PipeStatusRequest;

                /**
                 * Encodes the specified PipeStatusRequest message. Does not implicitly {@link juicetokens.transport.pipe.PipeStatusRequest.verify|verify} messages.
                 * @param message PipeStatusRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IPipeStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PipeStatusRequest message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.PipeStatusRequest.verify|verify} messages.
                 * @param message PipeStatusRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IPipeStatusRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PipeStatusRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PipeStatusRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.PipeStatusRequest;

                /**
                 * Decodes a PipeStatusRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PipeStatusRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.PipeStatusRequest;

                /**
                 * Verifies a PipeStatusRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PipeStatusRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PipeStatusRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.PipeStatusRequest;

                /**
                 * Creates a plain object from a PipeStatusRequest message. Also converts values to other types if specified.
                 * @param message PipeStatusRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.PipeStatusRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PipeStatusRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PipeStatusRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PipeStatusResponse. */
            interface IPipeStatusResponse {

                /** PipeStatusResponse status */
                status?: (juicetokens.transport.pipe.IPipeStatus|null);

                /** PipeStatusResponse metrics */
                metrics?: ({ [k: string]: string }|null);
            }

            /** Represents a PipeStatusResponse. */
            class PipeStatusResponse implements IPipeStatusResponse {

                /**
                 * Constructs a new PipeStatusResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IPipeStatusResponse);

                /** PipeStatusResponse status. */
                public status?: (juicetokens.transport.pipe.IPipeStatus|null);

                /** PipeStatusResponse metrics. */
                public metrics: { [k: string]: string };

                /**
                 * Creates a new PipeStatusResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PipeStatusResponse instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IPipeStatusResponse): juicetokens.transport.pipe.PipeStatusResponse;

                /**
                 * Encodes the specified PipeStatusResponse message. Does not implicitly {@link juicetokens.transport.pipe.PipeStatusResponse.verify|verify} messages.
                 * @param message PipeStatusResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IPipeStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PipeStatusResponse message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.PipeStatusResponse.verify|verify} messages.
                 * @param message PipeStatusResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IPipeStatusResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PipeStatusResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PipeStatusResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.PipeStatusResponse;

                /**
                 * Decodes a PipeStatusResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PipeStatusResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.PipeStatusResponse;

                /**
                 * Verifies a PipeStatusResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PipeStatusResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PipeStatusResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.PipeStatusResponse;

                /**
                 * Creates a plain object from a PipeStatusResponse message. Also converts values to other types if specified.
                 * @param message PipeStatusResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.PipeStatusResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PipeStatusResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PipeStatusResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Represents a PipeService */
            class PipeService extends $protobuf.rpc.Service {

                /**
                 * Constructs a new PipeService service.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 */
                constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

                /**
                 * Creates new PipeService service using the specified rpc implementation.
                 * @param rpcImpl RPC implementation
                 * @param [requestDelimited=false] Whether requests are length-delimited
                 * @param [responseDelimited=false] Whether responses are length-delimited
                 * @returns RPC service. Useful where requests and/or responses are streamed.
                 */
                public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): PipeService;

                /**
                 * Calls CreatePipe.
                 * @param request PipeCreateRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and PipeCreateResponse
                 */
                public createPipe(request: juicetokens.transport.pipe.IPipeCreateRequest, callback: juicetokens.transport.pipe.PipeService.CreatePipeCallback): void;

                /**
                 * Calls CreatePipe.
                 * @param request PipeCreateRequest message or plain object
                 * @returns Promise
                 */
                public createPipe(request: juicetokens.transport.pipe.IPipeCreateRequest): Promise<juicetokens.transport.pipe.PipeCreateResponse>;

                /**
                 * Calls ClosePipe.
                 * @param request PipeCloseRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and PipeCloseResponse
                 */
                public closePipe(request: juicetokens.transport.pipe.IPipeCloseRequest, callback: juicetokens.transport.pipe.PipeService.ClosePipeCallback): void;

                /**
                 * Calls ClosePipe.
                 * @param request PipeCloseRequest message or plain object
                 * @returns Promise
                 */
                public closePipe(request: juicetokens.transport.pipe.IPipeCloseRequest): Promise<juicetokens.transport.pipe.PipeCloseResponse>;

                /**
                 * Calls GetPipeStatus.
                 * @param request PipeStatusRequest message or plain object
                 * @param callback Node-style callback called with the error, if any, and PipeStatusResponse
                 */
                public getPipeStatus(request: juicetokens.transport.pipe.IPipeStatusRequest, callback: juicetokens.transport.pipe.PipeService.GetPipeStatusCallback): void;

                /**
                 * Calls GetPipeStatus.
                 * @param request PipeStatusRequest message or plain object
                 * @returns Promise
                 */
                public getPipeStatus(request: juicetokens.transport.pipe.IPipeStatusRequest): Promise<juicetokens.transport.pipe.PipeStatusResponse>;

                /**
                 * Calls StreamData.
                 * @param request PipeDataChunk message or plain object
                 * @param callback Node-style callback called with the error, if any, and PipeDataChunk
                 */
                public streamData(request: juicetokens.transport.pipe.IPipeDataChunk, callback: juicetokens.transport.pipe.PipeService.StreamDataCallback): void;

                /**
                 * Calls StreamData.
                 * @param request PipeDataChunk message or plain object
                 * @returns Promise
                 */
                public streamData(request: juicetokens.transport.pipe.IPipeDataChunk): Promise<juicetokens.transport.pipe.PipeDataChunk>;
            }

            namespace PipeService {

                /**
                 * Callback as used by {@link juicetokens.transport.pipe.PipeService#createPipe}.
                 * @param error Error, if any
                 * @param [response] PipeCreateResponse
                 */
                type CreatePipeCallback = (error: (Error|null), response?: juicetokens.transport.pipe.PipeCreateResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.pipe.PipeService#closePipe}.
                 * @param error Error, if any
                 * @param [response] PipeCloseResponse
                 */
                type ClosePipeCallback = (error: (Error|null), response?: juicetokens.transport.pipe.PipeCloseResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.pipe.PipeService#getPipeStatus}.
                 * @param error Error, if any
                 * @param [response] PipeStatusResponse
                 */
                type GetPipeStatusCallback = (error: (Error|null), response?: juicetokens.transport.pipe.PipeStatusResponse) => void;

                /**
                 * Callback as used by {@link juicetokens.transport.pipe.PipeService#streamData}.
                 * @param error Error, if any
                 * @param [response] PipeDataChunk
                 */
                type StreamDataCallback = (error: (Error|null), response?: juicetokens.transport.pipe.PipeDataChunk) => void;
            }

            /** Properties of a PipeDataChunk. */
            interface IPipeDataChunk {

                /** PipeDataChunk pipeId */
                pipeId?: (string|null);

                /** PipeDataChunk data */
                data?: (Uint8Array|null);

                /** PipeDataChunk sequenceNumber */
                sequenceNumber?: (number|null);

                /** PipeDataChunk totalChunks */
                totalChunks?: (number|null);

                /** PipeDataChunk isLastChunk */
                isLastChunk?: (boolean|null);

                /** PipeDataChunk messageId */
                messageId?: (string|null);
            }

            /** Represents a PipeDataChunk. */
            class PipeDataChunk implements IPipeDataChunk {

                /**
                 * Constructs a new PipeDataChunk.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.transport.pipe.IPipeDataChunk);

                /** PipeDataChunk pipeId. */
                public pipeId: string;

                /** PipeDataChunk data. */
                public data: Uint8Array;

                /** PipeDataChunk sequenceNumber. */
                public sequenceNumber: number;

                /** PipeDataChunk totalChunks. */
                public totalChunks: number;

                /** PipeDataChunk isLastChunk. */
                public isLastChunk: boolean;

                /** PipeDataChunk messageId. */
                public messageId: string;

                /**
                 * Creates a new PipeDataChunk instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PipeDataChunk instance
                 */
                public static create(properties?: juicetokens.transport.pipe.IPipeDataChunk): juicetokens.transport.pipe.PipeDataChunk;

                /**
                 * Encodes the specified PipeDataChunk message. Does not implicitly {@link juicetokens.transport.pipe.PipeDataChunk.verify|verify} messages.
                 * @param message PipeDataChunk message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.transport.pipe.IPipeDataChunk, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PipeDataChunk message, length delimited. Does not implicitly {@link juicetokens.transport.pipe.PipeDataChunk.verify|verify} messages.
                 * @param message PipeDataChunk message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.transport.pipe.IPipeDataChunk, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PipeDataChunk message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PipeDataChunk
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.transport.pipe.PipeDataChunk;

                /**
                 * Decodes a PipeDataChunk message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PipeDataChunk
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.transport.pipe.PipeDataChunk;

                /**
                 * Verifies a PipeDataChunk message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PipeDataChunk message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PipeDataChunk
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.transport.pipe.PipeDataChunk;

                /**
                 * Creates a plain object from a PipeDataChunk message. Also converts values to other types if specified.
                 * @param message PipeDataChunk
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.transport.pipe.PipeDataChunk, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PipeDataChunk to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PipeDataChunk
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }
    }

    /** Namespace trust. */
    namespace trust {

        /** Namespace attestation. */
        namespace attestation {

            /** Properties of a SystemAttestation. */
            interface ISystemAttestation {

                /** SystemAttestation attestationId */
                attestationId?: (string|null);

                /** SystemAttestation subjectId */
                subjectId?: (string|null);

                /** SystemAttestation attestationType */
                attestationType?: (string|null);

                /** SystemAttestation evidence */
                evidence?: (Uint8Array|null);

                /** SystemAttestation timestampMs */
                timestampMs?: (number|Long|null);

                /** SystemAttestation confidenceScore */
                confidenceScore?: (number|null);

                /** SystemAttestation systemSource */
                systemSource?: (string|null);
            }

            /** Represents a SystemAttestation. */
            class SystemAttestation implements ISystemAttestation {

                /**
                 * Constructs a new SystemAttestation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.ISystemAttestation);

                /** SystemAttestation attestationId. */
                public attestationId: string;

                /** SystemAttestation subjectId. */
                public subjectId: string;

                /** SystemAttestation attestationType. */
                public attestationType: string;

                /** SystemAttestation evidence. */
                public evidence: Uint8Array;

                /** SystemAttestation timestampMs. */
                public timestampMs: (number|Long);

                /** SystemAttestation confidenceScore. */
                public confidenceScore: number;

                /** SystemAttestation systemSource. */
                public systemSource: string;

                /**
                 * Creates a new SystemAttestation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SystemAttestation instance
                 */
                public static create(properties?: juicetokens.trust.attestation.ISystemAttestation): juicetokens.trust.attestation.SystemAttestation;

                /**
                 * Encodes the specified SystemAttestation message. Does not implicitly {@link juicetokens.trust.attestation.SystemAttestation.verify|verify} messages.
                 * @param message SystemAttestation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.ISystemAttestation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SystemAttestation message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.SystemAttestation.verify|verify} messages.
                 * @param message SystemAttestation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.ISystemAttestation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SystemAttestation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SystemAttestation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.SystemAttestation;

                /**
                 * Decodes a SystemAttestation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SystemAttestation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.SystemAttestation;

                /**
                 * Verifies a SystemAttestation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SystemAttestation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SystemAttestation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.SystemAttestation;

                /**
                 * Creates a plain object from a SystemAttestation message. Also converts values to other types if specified.
                 * @param message SystemAttestation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.SystemAttestation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SystemAttestation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SystemAttestation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PeerAttestation. */
            interface IPeerAttestation {

                /** PeerAttestation attestationId */
                attestationId?: (string|null);

                /** PeerAttestation subjectId */
                subjectId?: (string|null);

                /** PeerAttestation attesterId */
                attesterId?: (string|null);

                /** PeerAttestation attestationType */
                attestationType?: (string|null);

                /** PeerAttestation attestationContent */
                attestationContent?: (string|null);

                /** PeerAttestation strength */
                strength?: (number|null);

                /** PeerAttestation timestampMs */
                timestampMs?: (number|Long|null);

                /** PeerAttestation signature */
                signature?: (Uint8Array|null);
            }

            /** Represents a PeerAttestation. */
            class PeerAttestation implements IPeerAttestation {

                /**
                 * Constructs a new PeerAttestation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IPeerAttestation);

                /** PeerAttestation attestationId. */
                public attestationId: string;

                /** PeerAttestation subjectId. */
                public subjectId: string;

                /** PeerAttestation attesterId. */
                public attesterId: string;

                /** PeerAttestation attestationType. */
                public attestationType: string;

                /** PeerAttestation attestationContent. */
                public attestationContent: string;

                /** PeerAttestation strength. */
                public strength: number;

                /** PeerAttestation timestampMs. */
                public timestampMs: (number|Long);

                /** PeerAttestation signature. */
                public signature: Uint8Array;

                /**
                 * Creates a new PeerAttestation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PeerAttestation instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IPeerAttestation): juicetokens.trust.attestation.PeerAttestation;

                /**
                 * Encodes the specified PeerAttestation message. Does not implicitly {@link juicetokens.trust.attestation.PeerAttestation.verify|verify} messages.
                 * @param message PeerAttestation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IPeerAttestation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PeerAttestation message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.PeerAttestation.verify|verify} messages.
                 * @param message PeerAttestation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IPeerAttestation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PeerAttestation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PeerAttestation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.PeerAttestation;

                /**
                 * Decodes a PeerAttestation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PeerAttestation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.PeerAttestation;

                /**
                 * Verifies a PeerAttestation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PeerAttestation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PeerAttestation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.PeerAttestation;

                /**
                 * Creates a plain object from a PeerAttestation message. Also converts values to other types if specified.
                 * @param message PeerAttestation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.PeerAttestation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PeerAttestation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PeerAttestation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a CommunityAttestation. */
            interface ICommunityAttestation {

                /** CommunityAttestation attestationId */
                attestationId?: (string|null);

                /** CommunityAttestation subjectId */
                subjectId?: (string|null);

                /** CommunityAttestation communityId */
                communityId?: (string|null);

                /** CommunityAttestation attestationType */
                attestationType?: (string|null);

                /** CommunityAttestation attestationContent */
                attestationContent?: (string|null);

                /** CommunityAttestation approvalCount */
                approvalCount?: (number|null);

                /** CommunityAttestation threshold */
                threshold?: (number|null);

                /** CommunityAttestation timestampMs */
                timestampMs?: (number|Long|null);

                /** CommunityAttestation communitySignature */
                communitySignature?: (Uint8Array|null);
            }

            /** Represents a CommunityAttestation. */
            class CommunityAttestation implements ICommunityAttestation {

                /**
                 * Constructs a new CommunityAttestation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.ICommunityAttestation);

                /** CommunityAttestation attestationId. */
                public attestationId: string;

                /** CommunityAttestation subjectId. */
                public subjectId: string;

                /** CommunityAttestation communityId. */
                public communityId: string;

                /** CommunityAttestation attestationType. */
                public attestationType: string;

                /** CommunityAttestation attestationContent. */
                public attestationContent: string;

                /** CommunityAttestation approvalCount. */
                public approvalCount: number;

                /** CommunityAttestation threshold. */
                public threshold: number;

                /** CommunityAttestation timestampMs. */
                public timestampMs: (number|Long);

                /** CommunityAttestation communitySignature. */
                public communitySignature: Uint8Array;

                /**
                 * Creates a new CommunityAttestation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CommunityAttestation instance
                 */
                public static create(properties?: juicetokens.trust.attestation.ICommunityAttestation): juicetokens.trust.attestation.CommunityAttestation;

                /**
                 * Encodes the specified CommunityAttestation message. Does not implicitly {@link juicetokens.trust.attestation.CommunityAttestation.verify|verify} messages.
                 * @param message CommunityAttestation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.ICommunityAttestation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CommunityAttestation message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.CommunityAttestation.verify|verify} messages.
                 * @param message CommunityAttestation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.ICommunityAttestation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CommunityAttestation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CommunityAttestation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.CommunityAttestation;

                /**
                 * Decodes a CommunityAttestation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CommunityAttestation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.CommunityAttestation;

                /**
                 * Verifies a CommunityAttestation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CommunityAttestation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CommunityAttestation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.CommunityAttestation;

                /**
                 * Creates a plain object from a CommunityAttestation message. Also converts values to other types if specified.
                 * @param message CommunityAttestation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.CommunityAttestation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CommunityAttestation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CommunityAttestation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AttestationMetadata. */
            interface IAttestationMetadata {

                /** AttestationMetadata context */
                context?: (string|null);

                /** AttestationMetadata geographicRegion */
                geographicRegion?: (string|null);

                /** AttestationMetadata culturalContext */
                culturalContext?: (string|null);

                /** AttestationMetadata validFromMs */
                validFromMs?: (number|Long|null);

                /** AttestationMetadata validUntilMs */
                validUntilMs?: (number|Long|null);

                /** AttestationMetadata tags */
                tags?: (string[]|null);
            }

            /** Represents an AttestationMetadata. */
            class AttestationMetadata implements IAttestationMetadata {

                /**
                 * Constructs a new AttestationMetadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IAttestationMetadata);

                /** AttestationMetadata context. */
                public context: string;

                /** AttestationMetadata geographicRegion. */
                public geographicRegion: string;

                /** AttestationMetadata culturalContext. */
                public culturalContext: string;

                /** AttestationMetadata validFromMs. */
                public validFromMs: (number|Long);

                /** AttestationMetadata validUntilMs. */
                public validUntilMs: (number|Long);

                /** AttestationMetadata tags. */
                public tags: string[];

                /**
                 * Creates a new AttestationMetadata instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttestationMetadata instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IAttestationMetadata): juicetokens.trust.attestation.AttestationMetadata;

                /**
                 * Encodes the specified AttestationMetadata message. Does not implicitly {@link juicetokens.trust.attestation.AttestationMetadata.verify|verify} messages.
                 * @param message AttestationMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IAttestationMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttestationMetadata message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.AttestationMetadata.verify|verify} messages.
                 * @param message AttestationMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IAttestationMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttestationMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttestationMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.AttestationMetadata;

                /**
                 * Decodes an AttestationMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttestationMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.AttestationMetadata;

                /**
                 * Verifies an AttestationMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttestationMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttestationMetadata
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.AttestationMetadata;

                /**
                 * Creates a plain object from an AttestationMetadata message. Also converts values to other types if specified.
                 * @param message AttestationMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.AttestationMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttestationMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttestationMetadata
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AttestationDHTWrapper. */
            interface IAttestationDHTWrapper {

                /** AttestationDHTWrapper systemAttestation */
                systemAttestation?: (juicetokens.trust.attestation.ISystemAttestation|null);

                /** AttestationDHTWrapper peerAttestation */
                peerAttestation?: (juicetokens.trust.attestation.IPeerAttestation|null);

                /** AttestationDHTWrapper communityAttestation */
                communityAttestation?: (juicetokens.trust.attestation.ICommunityAttestation|null);

                /** AttestationDHTWrapper metadata */
                metadata?: (juicetokens.trust.attestation.IAttestationMetadata|null);

                /** AttestationDHTWrapper storageConfig */
                storageConfig?: (juicetokens.trust.attestation.IAttestationStorage|null);

                /** AttestationDHTWrapper entryType */
                entryType?: (string|null);
            }

            /** Represents an AttestationDHTWrapper. */
            class AttestationDHTWrapper implements IAttestationDHTWrapper {

                /**
                 * Constructs a new AttestationDHTWrapper.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IAttestationDHTWrapper);

                /** AttestationDHTWrapper systemAttestation. */
                public systemAttestation?: (juicetokens.trust.attestation.ISystemAttestation|null);

                /** AttestationDHTWrapper peerAttestation. */
                public peerAttestation?: (juicetokens.trust.attestation.IPeerAttestation|null);

                /** AttestationDHTWrapper communityAttestation. */
                public communityAttestation?: (juicetokens.trust.attestation.ICommunityAttestation|null);

                /** AttestationDHTWrapper metadata. */
                public metadata?: (juicetokens.trust.attestation.IAttestationMetadata|null);

                /** AttestationDHTWrapper storageConfig. */
                public storageConfig?: (juicetokens.trust.attestation.IAttestationStorage|null);

                /** AttestationDHTWrapper entryType. */
                public entryType: string;

                /** AttestationDHTWrapper attestation. */
                public attestation?: ("systemAttestation"|"peerAttestation"|"communityAttestation");

                /**
                 * Creates a new AttestationDHTWrapper instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttestationDHTWrapper instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IAttestationDHTWrapper): juicetokens.trust.attestation.AttestationDHTWrapper;

                /**
                 * Encodes the specified AttestationDHTWrapper message. Does not implicitly {@link juicetokens.trust.attestation.AttestationDHTWrapper.verify|verify} messages.
                 * @param message AttestationDHTWrapper message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IAttestationDHTWrapper, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttestationDHTWrapper message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.AttestationDHTWrapper.verify|verify} messages.
                 * @param message AttestationDHTWrapper message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IAttestationDHTWrapper, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttestationDHTWrapper message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttestationDHTWrapper
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.AttestationDHTWrapper;

                /**
                 * Decodes an AttestationDHTWrapper message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttestationDHTWrapper
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.AttestationDHTWrapper;

                /**
                 * Verifies an AttestationDHTWrapper message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttestationDHTWrapper message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttestationDHTWrapper
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.AttestationDHTWrapper;

                /**
                 * Creates a plain object from an AttestationDHTWrapper message. Also converts values to other types if specified.
                 * @param message AttestationDHTWrapper
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.AttestationDHTWrapper, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttestationDHTWrapper to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttestationDHTWrapper
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GeospatialShard. */
            interface IGeospatialShard {

                /** GeospatialShard s2CellId */
                s2CellId?: (string|null);

                /** GeospatialShard level */
                level?: (number|null);

                /** GeospatialShard containedAttestationIds */
                containedAttestationIds?: (string[]|null);

                /** GeospatialShard merkleRoot */
                merkleRoot?: (Uint8Array|null);

                /** GeospatialShard lastUpdatedMs */
                lastUpdatedMs?: (number|Long|null);
            }

            /** Represents a GeospatialShard. */
            class GeospatialShard implements IGeospatialShard {

                /**
                 * Constructs a new GeospatialShard.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IGeospatialShard);

                /** GeospatialShard s2CellId. */
                public s2CellId: string;

                /** GeospatialShard level. */
                public level: number;

                /** GeospatialShard containedAttestationIds. */
                public containedAttestationIds: string[];

                /** GeospatialShard merkleRoot. */
                public merkleRoot: Uint8Array;

                /** GeospatialShard lastUpdatedMs. */
                public lastUpdatedMs: (number|Long);

                /**
                 * Creates a new GeospatialShard instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GeospatialShard instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IGeospatialShard): juicetokens.trust.attestation.GeospatialShard;

                /**
                 * Encodes the specified GeospatialShard message. Does not implicitly {@link juicetokens.trust.attestation.GeospatialShard.verify|verify} messages.
                 * @param message GeospatialShard message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IGeospatialShard, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GeospatialShard message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.GeospatialShard.verify|verify} messages.
                 * @param message GeospatialShard message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IGeospatialShard, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GeospatialShard message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GeospatialShard
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.GeospatialShard;

                /**
                 * Decodes a GeospatialShard message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GeospatialShard
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.GeospatialShard;

                /**
                 * Verifies a GeospatialShard message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GeospatialShard message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GeospatialShard
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.GeospatialShard;

                /**
                 * Creates a plain object from a GeospatialShard message. Also converts values to other types if specified.
                 * @param message GeospatialShard
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.GeospatialShard, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GeospatialShard to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GeospatialShard
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AttestationExpiry. */
            interface IAttestationExpiry {

                /** AttestationExpiry attestationId */
                attestationId?: (string|null);

                /** AttestationExpiry creationMs */
                creationMs?: (number|Long|null);

                /** AttestationExpiry expiryMs */
                expiryMs?: (number|Long|null);

                /** AttestationExpiry autoRenew */
                autoRenew?: (boolean|null);

                /** AttestationExpiry renewalPolicy */
                renewalPolicy?: (string|null);
            }

            /** Represents an AttestationExpiry. */
            class AttestationExpiry implements IAttestationExpiry {

                /**
                 * Constructs a new AttestationExpiry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IAttestationExpiry);

                /** AttestationExpiry attestationId. */
                public attestationId: string;

                /** AttestationExpiry creationMs. */
                public creationMs: (number|Long);

                /** AttestationExpiry expiryMs. */
                public expiryMs: (number|Long);

                /** AttestationExpiry autoRenew. */
                public autoRenew: boolean;

                /** AttestationExpiry renewalPolicy. */
                public renewalPolicy: string;

                /**
                 * Creates a new AttestationExpiry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttestationExpiry instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IAttestationExpiry): juicetokens.trust.attestation.AttestationExpiry;

                /**
                 * Encodes the specified AttestationExpiry message. Does not implicitly {@link juicetokens.trust.attestation.AttestationExpiry.verify|verify} messages.
                 * @param message AttestationExpiry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IAttestationExpiry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttestationExpiry message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.AttestationExpiry.verify|verify} messages.
                 * @param message AttestationExpiry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IAttestationExpiry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttestationExpiry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttestationExpiry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.AttestationExpiry;

                /**
                 * Decodes an AttestationExpiry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttestationExpiry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.AttestationExpiry;

                /**
                 * Verifies an AttestationExpiry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttestationExpiry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttestationExpiry
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.AttestationExpiry;

                /**
                 * Creates a plain object from an AttestationExpiry message. Also converts values to other types if specified.
                 * @param message AttestationExpiry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.AttestationExpiry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttestationExpiry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttestationExpiry
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PrivacyPreservingLookup. */
            interface IPrivacyPreservingLookup {

                /** PrivacyPreservingLookup blindedQuery */
                blindedQuery?: (Uint8Array|null);

                /** PrivacyPreservingLookup queryType */
                queryType?: (string|null);

                /** PrivacyPreservingLookup queryParameters */
                queryParameters?: (Uint8Array|null);

                /** PrivacyPreservingLookup revealMetadata */
                revealMetadata?: (boolean|null);
            }

            /** Represents a PrivacyPreservingLookup. */
            class PrivacyPreservingLookup implements IPrivacyPreservingLookup {

                /**
                 * Constructs a new PrivacyPreservingLookup.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IPrivacyPreservingLookup);

                /** PrivacyPreservingLookup blindedQuery. */
                public blindedQuery: Uint8Array;

                /** PrivacyPreservingLookup queryType. */
                public queryType: string;

                /** PrivacyPreservingLookup queryParameters. */
                public queryParameters: Uint8Array;

                /** PrivacyPreservingLookup revealMetadata. */
                public revealMetadata: boolean;

                /**
                 * Creates a new PrivacyPreservingLookup instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PrivacyPreservingLookup instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IPrivacyPreservingLookup): juicetokens.trust.attestation.PrivacyPreservingLookup;

                /**
                 * Encodes the specified PrivacyPreservingLookup message. Does not implicitly {@link juicetokens.trust.attestation.PrivacyPreservingLookup.verify|verify} messages.
                 * @param message PrivacyPreservingLookup message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IPrivacyPreservingLookup, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PrivacyPreservingLookup message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.PrivacyPreservingLookup.verify|verify} messages.
                 * @param message PrivacyPreservingLookup message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IPrivacyPreservingLookup, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PrivacyPreservingLookup message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PrivacyPreservingLookup
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.PrivacyPreservingLookup;

                /**
                 * Decodes a PrivacyPreservingLookup message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PrivacyPreservingLookup
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.PrivacyPreservingLookup;

                /**
                 * Verifies a PrivacyPreservingLookup message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PrivacyPreservingLookup message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PrivacyPreservingLookup
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.PrivacyPreservingLookup;

                /**
                 * Creates a plain object from a PrivacyPreservingLookup message. Also converts values to other types if specified.
                 * @param message PrivacyPreservingLookup
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.PrivacyPreservingLookup, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PrivacyPreservingLookup to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PrivacyPreservingLookup
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AttestationStorage. */
            interface IAttestationStorage {

                /** AttestationStorage storageType */
                storageType?: (juicetokens.trust.attestation.AttestationStorage.StorageType|null);

                /** AttestationStorage encrypted */
                encrypted?: (boolean|null);

                /** AttestationStorage encryptionScheme */
                encryptionScheme?: (string|null);

                /** AttestationStorage authorizedViewers */
                authorizedViewers?: (string[]|null);
            }

            /** Represents an AttestationStorage. */
            class AttestationStorage implements IAttestationStorage {

                /**
                 * Constructs a new AttestationStorage.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IAttestationStorage);

                /** AttestationStorage storageType. */
                public storageType: juicetokens.trust.attestation.AttestationStorage.StorageType;

                /** AttestationStorage encrypted. */
                public encrypted: boolean;

                /** AttestationStorage encryptionScheme. */
                public encryptionScheme: string;

                /** AttestationStorage authorizedViewers. */
                public authorizedViewers: string[];

                /**
                 * Creates a new AttestationStorage instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttestationStorage instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IAttestationStorage): juicetokens.trust.attestation.AttestationStorage;

                /**
                 * Encodes the specified AttestationStorage message. Does not implicitly {@link juicetokens.trust.attestation.AttestationStorage.verify|verify} messages.
                 * @param message AttestationStorage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IAttestationStorage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttestationStorage message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.AttestationStorage.verify|verify} messages.
                 * @param message AttestationStorage message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IAttestationStorage, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttestationStorage message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttestationStorage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.AttestationStorage;

                /**
                 * Decodes an AttestationStorage message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttestationStorage
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.AttestationStorage;

                /**
                 * Verifies an AttestationStorage message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttestationStorage message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttestationStorage
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.AttestationStorage;

                /**
                 * Creates a plain object from an AttestationStorage message. Also converts values to other types if specified.
                 * @param message AttestationStorage
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.AttestationStorage, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttestationStorage to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttestationStorage
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace AttestationStorage {

                /** StorageType enum. */
                enum StorageType {
                    LOCAL = 0,
                    DHT = 1,
                    BOTH = 2
                }
            }

            /** Properties of an AttestationDHTPublish. */
            interface IAttestationDHTPublish {

                /** AttestationDHTPublish attestationId */
                attestationId?: (string|null);

                /** AttestationDHTPublish attestationData */
                attestationData?: (Uint8Array|null);

                /** AttestationDHTPublish s2CellId */
                s2CellId?: (string|null);

                /** AttestationDHTPublish ttlSeconds */
                ttlSeconds?: (number|null);

                /** AttestationDHTPublish replicate */
                replicate?: (boolean|null);

                /** AttestationDHTPublish replicationFactor */
                replicationFactor?: (number|null);
            }

            /** Represents an AttestationDHTPublish. */
            class AttestationDHTPublish implements IAttestationDHTPublish {

                /**
                 * Constructs a new AttestationDHTPublish.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IAttestationDHTPublish);

                /** AttestationDHTPublish attestationId. */
                public attestationId: string;

                /** AttestationDHTPublish attestationData. */
                public attestationData: Uint8Array;

                /** AttestationDHTPublish s2CellId. */
                public s2CellId: string;

                /** AttestationDHTPublish ttlSeconds. */
                public ttlSeconds: number;

                /** AttestationDHTPublish replicate. */
                public replicate: boolean;

                /** AttestationDHTPublish replicationFactor. */
                public replicationFactor: number;

                /**
                 * Creates a new AttestationDHTPublish instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttestationDHTPublish instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IAttestationDHTPublish): juicetokens.trust.attestation.AttestationDHTPublish;

                /**
                 * Encodes the specified AttestationDHTPublish message. Does not implicitly {@link juicetokens.trust.attestation.AttestationDHTPublish.verify|verify} messages.
                 * @param message AttestationDHTPublish message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IAttestationDHTPublish, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttestationDHTPublish message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.AttestationDHTPublish.verify|verify} messages.
                 * @param message AttestationDHTPublish message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IAttestationDHTPublish, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttestationDHTPublish message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttestationDHTPublish
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.AttestationDHTPublish;

                /**
                 * Decodes an AttestationDHTPublish message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttestationDHTPublish
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.AttestationDHTPublish;

                /**
                 * Verifies an AttestationDHTPublish message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttestationDHTPublish message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttestationDHTPublish
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.AttestationDHTPublish;

                /**
                 * Creates a plain object from an AttestationDHTPublish message. Also converts values to other types if specified.
                 * @param message AttestationDHTPublish
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.AttestationDHTPublish, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttestationDHTPublish to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttestationDHTPublish
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AttestationDHTQuery. */
            interface IAttestationDHTQuery {

                /** AttestationDHTQuery attestationId */
                attestationId?: (string|null);

                /** AttestationDHTQuery subjectId */
                subjectId?: (string|null);

                /** AttestationDHTQuery attesterId */
                attesterId?: (string|null);

                /** AttestationDHTQuery attestationType */
                attestationType?: (string|null);

                /** AttestationDHTQuery s2CellId */
                s2CellId?: (string|null);

                /** AttestationDHTQuery maxResults */
                maxResults?: (number|null);

                /** AttestationDHTQuery includeExpired */
                includeExpired?: (boolean|null);
            }

            /** Represents an AttestationDHTQuery. */
            class AttestationDHTQuery implements IAttestationDHTQuery {

                /**
                 * Constructs a new AttestationDHTQuery.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IAttestationDHTQuery);

                /** AttestationDHTQuery attestationId. */
                public attestationId: string;

                /** AttestationDHTQuery subjectId. */
                public subjectId: string;

                /** AttestationDHTQuery attesterId. */
                public attesterId: string;

                /** AttestationDHTQuery attestationType. */
                public attestationType: string;

                /** AttestationDHTQuery s2CellId. */
                public s2CellId: string;

                /** AttestationDHTQuery maxResults. */
                public maxResults: number;

                /** AttestationDHTQuery includeExpired. */
                public includeExpired: boolean;

                /**
                 * Creates a new AttestationDHTQuery instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttestationDHTQuery instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IAttestationDHTQuery): juicetokens.trust.attestation.AttestationDHTQuery;

                /**
                 * Encodes the specified AttestationDHTQuery message. Does not implicitly {@link juicetokens.trust.attestation.AttestationDHTQuery.verify|verify} messages.
                 * @param message AttestationDHTQuery message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IAttestationDHTQuery, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttestationDHTQuery message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.AttestationDHTQuery.verify|verify} messages.
                 * @param message AttestationDHTQuery message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IAttestationDHTQuery, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttestationDHTQuery message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttestationDHTQuery
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.AttestationDHTQuery;

                /**
                 * Decodes an AttestationDHTQuery message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttestationDHTQuery
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.AttestationDHTQuery;

                /**
                 * Verifies an AttestationDHTQuery message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttestationDHTQuery message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttestationDHTQuery
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.AttestationDHTQuery;

                /**
                 * Creates a plain object from an AttestationDHTQuery message. Also converts values to other types if specified.
                 * @param message AttestationDHTQuery
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.AttestationDHTQuery, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttestationDHTQuery to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttestationDHTQuery
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AttestationDHTQueryResult. */
            interface IAttestationDHTQueryResult {

                /** AttestationDHTQueryResult attestations */
                attestations?: (juicetokens.trust.attestation.IAttestationDHTWrapper[]|null);

                /** AttestationDHTQueryResult totalResults */
                totalResults?: (number|null);

                /** AttestationDHTQueryResult truncated */
                truncated?: (boolean|null);

                /** AttestationDHTQueryResult continuationToken */
                continuationToken?: (string|null);
            }

            /** Represents an AttestationDHTQueryResult. */
            class AttestationDHTQueryResult implements IAttestationDHTQueryResult {

                /**
                 * Constructs a new AttestationDHTQueryResult.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IAttestationDHTQueryResult);

                /** AttestationDHTQueryResult attestations. */
                public attestations: juicetokens.trust.attestation.IAttestationDHTWrapper[];

                /** AttestationDHTQueryResult totalResults. */
                public totalResults: number;

                /** AttestationDHTQueryResult truncated. */
                public truncated: boolean;

                /** AttestationDHTQueryResult continuationToken. */
                public continuationToken: string;

                /**
                 * Creates a new AttestationDHTQueryResult instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttestationDHTQueryResult instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IAttestationDHTQueryResult): juicetokens.trust.attestation.AttestationDHTQueryResult;

                /**
                 * Encodes the specified AttestationDHTQueryResult message. Does not implicitly {@link juicetokens.trust.attestation.AttestationDHTQueryResult.verify|verify} messages.
                 * @param message AttestationDHTQueryResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IAttestationDHTQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttestationDHTQueryResult message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.AttestationDHTQueryResult.verify|verify} messages.
                 * @param message AttestationDHTQueryResult message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IAttestationDHTQueryResult, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttestationDHTQueryResult message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttestationDHTQueryResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.AttestationDHTQueryResult;

                /**
                 * Decodes an AttestationDHTQueryResult message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttestationDHTQueryResult
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.AttestationDHTQueryResult;

                /**
                 * Verifies an AttestationDHTQueryResult message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttestationDHTQueryResult message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttestationDHTQueryResult
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.AttestationDHTQueryResult;

                /**
                 * Creates a plain object from an AttestationDHTQueryResult message. Also converts values to other types if specified.
                 * @param message AttestationDHTQueryResult
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.AttestationDHTQueryResult, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttestationDHTQueryResult to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttestationDHTQueryResult
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AttestationChainEntry. */
            interface IAttestationChainEntry {

                /** AttestationChainEntry attestationId */
                attestationId?: (string|null);

                /** AttestationChainEntry sequenceNumber */
                sequenceNumber?: (number|Long|null);

                /** AttestationChainEntry entryType */
                entryType?: (string|null);

                /** AttestationChainEntry direction */
                direction?: (juicetokens.trust.attestation.AttestationChainEntry.Direction|null);

                /** AttestationChainEntry counterpartyId */
                counterpartyId?: (string|null);

                /** AttestationChainEntry dhtKey */
                dhtKey?: (Uint8Array|null);

                /** AttestationChainEntry attestationHash */
                attestationHash?: (Uint8Array|null);
            }

            /** Represents an AttestationChainEntry. */
            class AttestationChainEntry implements IAttestationChainEntry {

                /**
                 * Constructs a new AttestationChainEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IAttestationChainEntry);

                /** AttestationChainEntry attestationId. */
                public attestationId: string;

                /** AttestationChainEntry sequenceNumber. */
                public sequenceNumber: (number|Long);

                /** AttestationChainEntry entryType. */
                public entryType: string;

                /** AttestationChainEntry direction. */
                public direction: juicetokens.trust.attestation.AttestationChainEntry.Direction;

                /** AttestationChainEntry counterpartyId. */
                public counterpartyId: string;

                /** AttestationChainEntry dhtKey. */
                public dhtKey: Uint8Array;

                /** AttestationChainEntry attestationHash. */
                public attestationHash: Uint8Array;

                /**
                 * Creates a new AttestationChainEntry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttestationChainEntry instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IAttestationChainEntry): juicetokens.trust.attestation.AttestationChainEntry;

                /**
                 * Encodes the specified AttestationChainEntry message. Does not implicitly {@link juicetokens.trust.attestation.AttestationChainEntry.verify|verify} messages.
                 * @param message AttestationChainEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IAttestationChainEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttestationChainEntry message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.AttestationChainEntry.verify|verify} messages.
                 * @param message AttestationChainEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IAttestationChainEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttestationChainEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttestationChainEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.AttestationChainEntry;

                /**
                 * Decodes an AttestationChainEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttestationChainEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.AttestationChainEntry;

                /**
                 * Verifies an AttestationChainEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttestationChainEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttestationChainEntry
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.AttestationChainEntry;

                /**
                 * Creates a plain object from an AttestationChainEntry message. Also converts values to other types if specified.
                 * @param message AttestationChainEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.AttestationChainEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttestationChainEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttestationChainEntry
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace AttestationChainEntry {

                /** Direction enum. */
                enum Direction {
                    GIVEN = 0,
                    RECEIVED = 1,
                    OBSERVED = 2
                }
            }

            /** Properties of a KeyPair. */
            interface IKeyPair {

                /** KeyPair keyId */
                keyId?: (string|null);

                /** KeyPair publicKey */
                publicKey?: (Uint8Array|null);

                /** KeyPair algorithm */
                algorithm?: (string|null);

                /** KeyPair creationMs */
                creationMs?: (number|Long|null);

                /** KeyPair expiryMs */
                expiryMs?: (number|Long|null);
            }

            /** Represents a KeyPair. */
            class KeyPair implements IKeyPair {

                /**
                 * Constructs a new KeyPair.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IKeyPair);

                /** KeyPair keyId. */
                public keyId: string;

                /** KeyPair publicKey. */
                public publicKey: Uint8Array;

                /** KeyPair algorithm. */
                public algorithm: string;

                /** KeyPair creationMs. */
                public creationMs: (number|Long);

                /** KeyPair expiryMs. */
                public expiryMs: (number|Long);

                /**
                 * Creates a new KeyPair instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns KeyPair instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IKeyPair): juicetokens.trust.attestation.KeyPair;

                /**
                 * Encodes the specified KeyPair message. Does not implicitly {@link juicetokens.trust.attestation.KeyPair.verify|verify} messages.
                 * @param message KeyPair message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IKeyPair, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified KeyPair message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.KeyPair.verify|verify} messages.
                 * @param message KeyPair message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IKeyPair, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a KeyPair message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns KeyPair
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.KeyPair;

                /**
                 * Decodes a KeyPair message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns KeyPair
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.KeyPair;

                /**
                 * Verifies a KeyPair message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a KeyPair message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns KeyPair
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.KeyPair;

                /**
                 * Creates a plain object from a KeyPair message. Also converts values to other types if specified.
                 * @param message KeyPair
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.KeyPair, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this KeyPair to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for KeyPair
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an IdentityProof. */
            interface IIdentityProof {

                /** IdentityProof identityId */
                identityId?: (string|null);

                /** IdentityProof challenge */
                challenge?: (Uint8Array|null);

                /** IdentityProof response */
                response?: (Uint8Array|null);

                /** IdentityProof timestampMs */
                timestampMs?: (number|Long|null);

                /** IdentityProof proofType */
                proofType?: (string|null);
            }

            /** Represents an IdentityProof. */
            class IdentityProof implements IIdentityProof {

                /**
                 * Constructs a new IdentityProof.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IIdentityProof);

                /** IdentityProof identityId. */
                public identityId: string;

                /** IdentityProof challenge. */
                public challenge: Uint8Array;

                /** IdentityProof response. */
                public response: Uint8Array;

                /** IdentityProof timestampMs. */
                public timestampMs: (number|Long);

                /** IdentityProof proofType. */
                public proofType: string;

                /**
                 * Creates a new IdentityProof instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns IdentityProof instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IIdentityProof): juicetokens.trust.attestation.IdentityProof;

                /**
                 * Encodes the specified IdentityProof message. Does not implicitly {@link juicetokens.trust.attestation.IdentityProof.verify|verify} messages.
                 * @param message IdentityProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IIdentityProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IdentityProof message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.IdentityProof.verify|verify} messages.
                 * @param message IdentityProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IIdentityProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IdentityProof message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IdentityProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.IdentityProof;

                /**
                 * Decodes an IdentityProof message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IdentityProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.IdentityProof;

                /**
                 * Verifies an IdentityProof message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IdentityProof message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IdentityProof
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.IdentityProof;

                /**
                 * Creates a plain object from an IdentityProof message. Also converts values to other types if specified.
                 * @param message IdentityProof
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.IdentityProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IdentityProof to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for IdentityProof
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a KeyRotation. */
            interface IKeyRotation {

                /** KeyRotation identityId */
                identityId?: (string|null);

                /** KeyRotation oldKeyId */
                oldKeyId?: (string|null);

                /** KeyRotation newKeyId */
                newKeyId?: (string|null);

                /** KeyRotation rotationProof */
                rotationProof?: (Uint8Array|null);

                /** KeyRotation rotationTimestampMs */
                rotationTimestampMs?: (number|Long|null);
            }

            /** Represents a KeyRotation. */
            class KeyRotation implements IKeyRotation {

                /**
                 * Constructs a new KeyRotation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IKeyRotation);

                /** KeyRotation identityId. */
                public identityId: string;

                /** KeyRotation oldKeyId. */
                public oldKeyId: string;

                /** KeyRotation newKeyId. */
                public newKeyId: string;

                /** KeyRotation rotationProof. */
                public rotationProof: Uint8Array;

                /** KeyRotation rotationTimestampMs. */
                public rotationTimestampMs: (number|Long);

                /**
                 * Creates a new KeyRotation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns KeyRotation instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IKeyRotation): juicetokens.trust.attestation.KeyRotation;

                /**
                 * Encodes the specified KeyRotation message. Does not implicitly {@link juicetokens.trust.attestation.KeyRotation.verify|verify} messages.
                 * @param message KeyRotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IKeyRotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified KeyRotation message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.KeyRotation.verify|verify} messages.
                 * @param message KeyRotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IKeyRotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a KeyRotation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns KeyRotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.KeyRotation;

                /**
                 * Decodes a KeyRotation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns KeyRotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.KeyRotation;

                /**
                 * Verifies a KeyRotation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a KeyRotation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns KeyRotation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.KeyRotation;

                /**
                 * Creates a plain object from a KeyRotation message. Also converts values to other types if specified.
                 * @param message KeyRotation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.KeyRotation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this KeyRotation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for KeyRotation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RevocationCertificate. */
            interface IRevocationCertificate {

                /** RevocationCertificate revokedId */
                revokedId?: (string|null);

                /** RevocationCertificate revocationType */
                revocationType?: (juicetokens.trust.attestation.RevocationCertificate.RevocationType|null);

                /** RevocationCertificate reason */
                reason?: (string|null);

                /** RevocationCertificate revocationTimestampMs */
                revocationTimestampMs?: (number|Long|null);

                /** RevocationCertificate authorizingSignature */
                authorizingSignature?: (Uint8Array|null);
            }

            /** Represents a RevocationCertificate. */
            class RevocationCertificate implements IRevocationCertificate {

                /**
                 * Constructs a new RevocationCertificate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.attestation.IRevocationCertificate);

                /** RevocationCertificate revokedId. */
                public revokedId: string;

                /** RevocationCertificate revocationType. */
                public revocationType: juicetokens.trust.attestation.RevocationCertificate.RevocationType;

                /** RevocationCertificate reason. */
                public reason: string;

                /** RevocationCertificate revocationTimestampMs. */
                public revocationTimestampMs: (number|Long);

                /** RevocationCertificate authorizingSignature. */
                public authorizingSignature: Uint8Array;

                /**
                 * Creates a new RevocationCertificate instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RevocationCertificate instance
                 */
                public static create(properties?: juicetokens.trust.attestation.IRevocationCertificate): juicetokens.trust.attestation.RevocationCertificate;

                /**
                 * Encodes the specified RevocationCertificate message. Does not implicitly {@link juicetokens.trust.attestation.RevocationCertificate.verify|verify} messages.
                 * @param message RevocationCertificate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.attestation.IRevocationCertificate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RevocationCertificate message, length delimited. Does not implicitly {@link juicetokens.trust.attestation.RevocationCertificate.verify|verify} messages.
                 * @param message RevocationCertificate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.attestation.IRevocationCertificate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RevocationCertificate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RevocationCertificate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.attestation.RevocationCertificate;

                /**
                 * Decodes a RevocationCertificate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RevocationCertificate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.attestation.RevocationCertificate;

                /**
                 * Verifies a RevocationCertificate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RevocationCertificate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RevocationCertificate
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.attestation.RevocationCertificate;

                /**
                 * Creates a plain object from a RevocationCertificate message. Also converts values to other types if specified.
                 * @param message RevocationCertificate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.attestation.RevocationCertificate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RevocationCertificate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RevocationCertificate
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace RevocationCertificate {

                /** RevocationType enum. */
                enum RevocationType {
                    KEY = 0,
                    ATTESTATION = 1,
                    IDENTITY = 2
                }
            }
        }

        /** Namespace identity. */
        namespace identity {

            /** Properties of an Identity. */
            interface IIdentity {

                /** Identity identityId */
                identityId?: (string|null);

                /** Identity publicKeys */
                publicKeys?: (string[]|null);

                /** Identity activeKeyId */
                activeKeyId?: (string|null);

                /** Identity displayName */
                displayName?: (string|null);

                /** Identity attributes */
                attributes?: (juicetokens.trust.identity.IIdentityAttribute[]|null);

                /** Identity creationTimeMs */
                creationTimeMs?: (number|Long|null);

                /** Identity recoveryMethod */
                recoveryMethod?: (string|null);

                /** Identity status */
                status?: (juicetokens.trust.identity.IdentityStatus|null);
            }

            /** Represents an Identity. */
            class Identity implements IIdentity {

                /**
                 * Constructs a new Identity.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IIdentity);

                /** Identity identityId. */
                public identityId: string;

                /** Identity publicKeys. */
                public publicKeys: string[];

                /** Identity activeKeyId. */
                public activeKeyId: string;

                /** Identity displayName. */
                public displayName: string;

                /** Identity attributes. */
                public attributes: juicetokens.trust.identity.IIdentityAttribute[];

                /** Identity creationTimeMs. */
                public creationTimeMs: (number|Long);

                /** Identity recoveryMethod. */
                public recoveryMethod: string;

                /** Identity status. */
                public status: juicetokens.trust.identity.IdentityStatus;

                /**
                 * Creates a new Identity instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Identity instance
                 */
                public static create(properties?: juicetokens.trust.identity.IIdentity): juicetokens.trust.identity.Identity;

                /**
                 * Encodes the specified Identity message. Does not implicitly {@link juicetokens.trust.identity.Identity.verify|verify} messages.
                 * @param message Identity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IIdentity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Identity message, length delimited. Does not implicitly {@link juicetokens.trust.identity.Identity.verify|verify} messages.
                 * @param message Identity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IIdentity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Identity message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Identity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.Identity;

                /**
                 * Decodes an Identity message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Identity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.Identity;

                /**
                 * Verifies an Identity message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Identity message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Identity
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.Identity;

                /**
                 * Creates a plain object from an Identity message. Also converts values to other types if specified.
                 * @param message Identity
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.Identity, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Identity to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Identity
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** IdentityStatus enum. */
            enum IdentityStatus {
                ACTIVE = 0,
                SUSPENDED = 1,
                REVOKED = 2,
                RECOVERY = 3
            }

            /** Properties of an IdentityAttribute. */
            interface IIdentityAttribute {

                /** IdentityAttribute attributeName */
                attributeName?: (string|null);

                /** IdentityAttribute attributeValue */
                attributeValue?: (string|null);

                /** IdentityAttribute selfAttested */
                selfAttested?: (boolean|null);

                /** IdentityAttribute attestationIds */
                attestationIds?: (string[]|null);

                /** IdentityAttribute public */
                "public"?: (boolean|null);

                /** IdentityAttribute lastUpdatedMs */
                lastUpdatedMs?: (number|Long|null);

                /** IdentityAttribute verificationStatus */
                verificationStatus?: (juicetokens.trust.identity.AttributeVerificationStatus|null);
            }

            /** Represents an IdentityAttribute. */
            class IdentityAttribute implements IIdentityAttribute {

                /**
                 * Constructs a new IdentityAttribute.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IIdentityAttribute);

                /** IdentityAttribute attributeName. */
                public attributeName: string;

                /** IdentityAttribute attributeValue. */
                public attributeValue: string;

                /** IdentityAttribute selfAttested. */
                public selfAttested: boolean;

                /** IdentityAttribute attestationIds. */
                public attestationIds: string[];

                /** IdentityAttribute public. */
                public public: boolean;

                /** IdentityAttribute lastUpdatedMs. */
                public lastUpdatedMs: (number|Long);

                /** IdentityAttribute verificationStatus. */
                public verificationStatus: juicetokens.trust.identity.AttributeVerificationStatus;

                /**
                 * Creates a new IdentityAttribute instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns IdentityAttribute instance
                 */
                public static create(properties?: juicetokens.trust.identity.IIdentityAttribute): juicetokens.trust.identity.IdentityAttribute;

                /**
                 * Encodes the specified IdentityAttribute message. Does not implicitly {@link juicetokens.trust.identity.IdentityAttribute.verify|verify} messages.
                 * @param message IdentityAttribute message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IIdentityAttribute, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IdentityAttribute message, length delimited. Does not implicitly {@link juicetokens.trust.identity.IdentityAttribute.verify|verify} messages.
                 * @param message IdentityAttribute message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IIdentityAttribute, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IdentityAttribute message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IdentityAttribute
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.IdentityAttribute;

                /**
                 * Decodes an IdentityAttribute message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IdentityAttribute
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.IdentityAttribute;

                /**
                 * Verifies an IdentityAttribute message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IdentityAttribute message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IdentityAttribute
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.IdentityAttribute;

                /**
                 * Creates a plain object from an IdentityAttribute message. Also converts values to other types if specified.
                 * @param message IdentityAttribute
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.IdentityAttribute, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IdentityAttribute to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for IdentityAttribute
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** AttributeVerificationStatus enum. */
            enum AttributeVerificationStatus {
                UNVERIFIED = 0,
                PEER_VERIFIED = 1,
                SYSTEM_VERIFIED = 2,
                EXPERT_VERIFIED = 3
            }

            /** Properties of an IdentityCreation. */
            interface IIdentityCreation {

                /** IdentityCreation initialPublicKey */
                initialPublicKey?: (Uint8Array|null);

                /** IdentityCreation displayName */
                displayName?: (string|null);

                /** IdentityCreation initialAttributes */
                initialAttributes?: ({ [k: string]: string }|null);

                /** IdentityCreation signature */
                signature?: (Uint8Array|null);

                /** IdentityCreation recoveryMethod */
                recoveryMethod?: (string|null);

                /** IdentityCreation recoveryData */
                recoveryData?: (Uint8Array|null);
            }

            /** Represents an IdentityCreation. */
            class IdentityCreation implements IIdentityCreation {

                /**
                 * Constructs a new IdentityCreation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IIdentityCreation);

                /** IdentityCreation initialPublicKey. */
                public initialPublicKey: Uint8Array;

                /** IdentityCreation displayName. */
                public displayName: string;

                /** IdentityCreation initialAttributes. */
                public initialAttributes: { [k: string]: string };

                /** IdentityCreation signature. */
                public signature: Uint8Array;

                /** IdentityCreation recoveryMethod. */
                public recoveryMethod: string;

                /** IdentityCreation recoveryData. */
                public recoveryData: Uint8Array;

                /**
                 * Creates a new IdentityCreation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns IdentityCreation instance
                 */
                public static create(properties?: juicetokens.trust.identity.IIdentityCreation): juicetokens.trust.identity.IdentityCreation;

                /**
                 * Encodes the specified IdentityCreation message. Does not implicitly {@link juicetokens.trust.identity.IdentityCreation.verify|verify} messages.
                 * @param message IdentityCreation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IIdentityCreation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IdentityCreation message, length delimited. Does not implicitly {@link juicetokens.trust.identity.IdentityCreation.verify|verify} messages.
                 * @param message IdentityCreation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IIdentityCreation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IdentityCreation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IdentityCreation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.IdentityCreation;

                /**
                 * Decodes an IdentityCreation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IdentityCreation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.IdentityCreation;

                /**
                 * Verifies an IdentityCreation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IdentityCreation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IdentityCreation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.IdentityCreation;

                /**
                 * Creates a plain object from an IdentityCreation message. Also converts values to other types if specified.
                 * @param message IdentityCreation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.IdentityCreation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IdentityCreation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for IdentityCreation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an IdentityUpdate. */
            interface IIdentityUpdate {

                /** IdentityUpdate identityId */
                identityId?: (string|null);

                /** IdentityUpdate updatedField */
                updatedField?: (string|null);

                /** IdentityUpdate newValue */
                newValue?: (Uint8Array|null);

                /** IdentityUpdate timestampMs */
                timestampMs?: (number|Long|null);

                /** IdentityUpdate signature */
                signature?: (Uint8Array|null);

                /** IdentityUpdate updateReason */
                updateReason?: (string|null);

                /** IdentityUpdate sequenceNumber */
                sequenceNumber?: (number|Long|null);
            }

            /** Represents an IdentityUpdate. */
            class IdentityUpdate implements IIdentityUpdate {

                /**
                 * Constructs a new IdentityUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IIdentityUpdate);

                /** IdentityUpdate identityId. */
                public identityId: string;

                /** IdentityUpdate updatedField. */
                public updatedField: string;

                /** IdentityUpdate newValue. */
                public newValue: Uint8Array;

                /** IdentityUpdate timestampMs. */
                public timestampMs: (number|Long);

                /** IdentityUpdate signature. */
                public signature: Uint8Array;

                /** IdentityUpdate updateReason. */
                public updateReason: string;

                /** IdentityUpdate sequenceNumber. */
                public sequenceNumber: (number|Long);

                /**
                 * Creates a new IdentityUpdate instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns IdentityUpdate instance
                 */
                public static create(properties?: juicetokens.trust.identity.IIdentityUpdate): juicetokens.trust.identity.IdentityUpdate;

                /**
                 * Encodes the specified IdentityUpdate message. Does not implicitly {@link juicetokens.trust.identity.IdentityUpdate.verify|verify} messages.
                 * @param message IdentityUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IIdentityUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IdentityUpdate message, length delimited. Does not implicitly {@link juicetokens.trust.identity.IdentityUpdate.verify|verify} messages.
                 * @param message IdentityUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IIdentityUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IdentityUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IdentityUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.IdentityUpdate;

                /**
                 * Decodes an IdentityUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IdentityUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.IdentityUpdate;

                /**
                 * Verifies an IdentityUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IdentityUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IdentityUpdate
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.IdentityUpdate;

                /**
                 * Creates a plain object from an IdentityUpdate message. Also converts values to other types if specified.
                 * @param message IdentityUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.IdentityUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IdentityUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for IdentityUpdate
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an IdentityLink. */
            interface IIdentityLink {

                /** IdentityLink sourceIdentityId */
                sourceIdentityId?: (string|null);

                /** IdentityLink targetIdentityId */
                targetIdentityId?: (string|null);

                /** IdentityLink linkType */
                linkType?: (juicetokens.trust.identity.IdentityLink.LinkType|null);

                /** IdentityLink strength */
                strength?: (number|null);

                /** IdentityLink description */
                description?: (string|null);

                /** IdentityLink timestampMs */
                timestampMs?: (number|Long|null);

                /** IdentityLink signature */
                signature?: (Uint8Array|null);

                /** IdentityLink bidirectional */
                bidirectional?: (boolean|null);
            }

            /** Represents an IdentityLink. */
            class IdentityLink implements IIdentityLink {

                /**
                 * Constructs a new IdentityLink.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IIdentityLink);

                /** IdentityLink sourceIdentityId. */
                public sourceIdentityId: string;

                /** IdentityLink targetIdentityId. */
                public targetIdentityId: string;

                /** IdentityLink linkType. */
                public linkType: juicetokens.trust.identity.IdentityLink.LinkType;

                /** IdentityLink strength. */
                public strength: number;

                /** IdentityLink description. */
                public description: string;

                /** IdentityLink timestampMs. */
                public timestampMs: (number|Long);

                /** IdentityLink signature. */
                public signature: Uint8Array;

                /** IdentityLink bidirectional. */
                public bidirectional: boolean;

                /**
                 * Creates a new IdentityLink instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns IdentityLink instance
                 */
                public static create(properties?: juicetokens.trust.identity.IIdentityLink): juicetokens.trust.identity.IdentityLink;

                /**
                 * Encodes the specified IdentityLink message. Does not implicitly {@link juicetokens.trust.identity.IdentityLink.verify|verify} messages.
                 * @param message IdentityLink message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IIdentityLink, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IdentityLink message, length delimited. Does not implicitly {@link juicetokens.trust.identity.IdentityLink.verify|verify} messages.
                 * @param message IdentityLink message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IIdentityLink, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IdentityLink message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IdentityLink
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.IdentityLink;

                /**
                 * Decodes an IdentityLink message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IdentityLink
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.IdentityLink;

                /**
                 * Verifies an IdentityLink message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IdentityLink message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IdentityLink
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.IdentityLink;

                /**
                 * Creates a plain object from an IdentityLink message. Also converts values to other types if specified.
                 * @param message IdentityLink
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.IdentityLink, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IdentityLink to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for IdentityLink
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace IdentityLink {

                /** LinkType enum. */
                enum LinkType {
                    KNOWS = 0,
                    TRUSTS = 1,
                    ENDORSES = 2,
                    FAMILY = 3,
                    GUARDIAN = 4,
                    RECOVERY = 5
                }
            }

            /** Properties of a RecoveryMethod. */
            interface IRecoveryMethod {

                /** RecoveryMethod methodId */
                methodId?: (string|null);

                /** RecoveryMethod methodType */
                methodType?: (juicetokens.trust.identity.RecoveryMethod.MethodType|null);

                /** RecoveryMethod methodParameters */
                methodParameters?: (Uint8Array|null);

                /** RecoveryMethod active */
                active?: (boolean|null);
            }

            /** Represents a RecoveryMethod. */
            class RecoveryMethod implements IRecoveryMethod {

                /**
                 * Constructs a new RecoveryMethod.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IRecoveryMethod);

                /** RecoveryMethod methodId. */
                public methodId: string;

                /** RecoveryMethod methodType. */
                public methodType: juicetokens.trust.identity.RecoveryMethod.MethodType;

                /** RecoveryMethod methodParameters. */
                public methodParameters: Uint8Array;

                /** RecoveryMethod active. */
                public active: boolean;

                /**
                 * Creates a new RecoveryMethod instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RecoveryMethod instance
                 */
                public static create(properties?: juicetokens.trust.identity.IRecoveryMethod): juicetokens.trust.identity.RecoveryMethod;

                /**
                 * Encodes the specified RecoveryMethod message. Does not implicitly {@link juicetokens.trust.identity.RecoveryMethod.verify|verify} messages.
                 * @param message RecoveryMethod message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IRecoveryMethod, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RecoveryMethod message, length delimited. Does not implicitly {@link juicetokens.trust.identity.RecoveryMethod.verify|verify} messages.
                 * @param message RecoveryMethod message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IRecoveryMethod, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RecoveryMethod message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RecoveryMethod
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.RecoveryMethod;

                /**
                 * Decodes a RecoveryMethod message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RecoveryMethod
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.RecoveryMethod;

                /**
                 * Verifies a RecoveryMethod message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RecoveryMethod message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RecoveryMethod
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.RecoveryMethod;

                /**
                 * Creates a plain object from a RecoveryMethod message. Also converts values to other types if specified.
                 * @param message RecoveryMethod
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.RecoveryMethod, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RecoveryMethod to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RecoveryMethod
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace RecoveryMethod {

                /** MethodType enum. */
                enum MethodType {
                    SOCIAL_RECOVERY = 0,
                    SEED_PHRASE = 1,
                    BACKUP_KEY = 2,
                    KYC_PROVIDER = 3,
                    MULTI_DEVICE = 4
                }
            }

            /** Properties of a SocialRecoveryConfiguration. */
            interface ISocialRecoveryConfiguration {

                /** SocialRecoveryConfiguration identityId */
                identityId?: (string|null);

                /** SocialRecoveryConfiguration trustedRecoveryContacts */
                trustedRecoveryContacts?: (string[]|null);

                /** SocialRecoveryConfiguration threshold */
                threshold?: (number|null);

                /** SocialRecoveryConfiguration challengeDurationHours */
                challengeDurationHours?: (number|null);

                /** SocialRecoveryConfiguration lastUpdatedMs */
                lastUpdatedMs?: (number|Long|null);

                /** SocialRecoveryConfiguration encryptedRecoveryData */
                encryptedRecoveryData?: (Uint8Array|null);

                /** SocialRecoveryConfiguration recoveryVerificationKey */
                recoveryVerificationKey?: (Uint8Array|null);
            }

            /** Represents a SocialRecoveryConfiguration. */
            class SocialRecoveryConfiguration implements ISocialRecoveryConfiguration {

                /**
                 * Constructs a new SocialRecoveryConfiguration.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.ISocialRecoveryConfiguration);

                /** SocialRecoveryConfiguration identityId. */
                public identityId: string;

                /** SocialRecoveryConfiguration trustedRecoveryContacts. */
                public trustedRecoveryContacts: string[];

                /** SocialRecoveryConfiguration threshold. */
                public threshold: number;

                /** SocialRecoveryConfiguration challengeDurationHours. */
                public challengeDurationHours: number;

                /** SocialRecoveryConfiguration lastUpdatedMs. */
                public lastUpdatedMs: (number|Long);

                /** SocialRecoveryConfiguration encryptedRecoveryData. */
                public encryptedRecoveryData: Uint8Array;

                /** SocialRecoveryConfiguration recoveryVerificationKey. */
                public recoveryVerificationKey: Uint8Array;

                /**
                 * Creates a new SocialRecoveryConfiguration instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SocialRecoveryConfiguration instance
                 */
                public static create(properties?: juicetokens.trust.identity.ISocialRecoveryConfiguration): juicetokens.trust.identity.SocialRecoveryConfiguration;

                /**
                 * Encodes the specified SocialRecoveryConfiguration message. Does not implicitly {@link juicetokens.trust.identity.SocialRecoveryConfiguration.verify|verify} messages.
                 * @param message SocialRecoveryConfiguration message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.ISocialRecoveryConfiguration, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SocialRecoveryConfiguration message, length delimited. Does not implicitly {@link juicetokens.trust.identity.SocialRecoveryConfiguration.verify|verify} messages.
                 * @param message SocialRecoveryConfiguration message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.ISocialRecoveryConfiguration, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SocialRecoveryConfiguration message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SocialRecoveryConfiguration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.SocialRecoveryConfiguration;

                /**
                 * Decodes a SocialRecoveryConfiguration message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SocialRecoveryConfiguration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.SocialRecoveryConfiguration;

                /**
                 * Verifies a SocialRecoveryConfiguration message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SocialRecoveryConfiguration message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SocialRecoveryConfiguration
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.SocialRecoveryConfiguration;

                /**
                 * Creates a plain object from a SocialRecoveryConfiguration message. Also converts values to other types if specified.
                 * @param message SocialRecoveryConfiguration
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.SocialRecoveryConfiguration, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SocialRecoveryConfiguration to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SocialRecoveryConfiguration
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RecoveryRequest. */
            interface IRecoveryRequest {

                /** RecoveryRequest identityId */
                identityId?: (string|null);

                /** RecoveryRequest requesterContact */
                requesterContact?: (string|null);

                /** RecoveryRequest proofOfIdentity */
                proofOfIdentity?: (Uint8Array|null);

                /** RecoveryRequest requestTimestampMs */
                requestTimestampMs?: (number|Long|null);

                /** RecoveryRequest challengeResponse */
                challengeResponse?: (Uint8Array|null);

                /** RecoveryRequest recoveryMethodId */
                recoveryMethodId?: (string|null);
            }

            /** Represents a RecoveryRequest. */
            class RecoveryRequest implements IRecoveryRequest {

                /**
                 * Constructs a new RecoveryRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IRecoveryRequest);

                /** RecoveryRequest identityId. */
                public identityId: string;

                /** RecoveryRequest requesterContact. */
                public requesterContact: string;

                /** RecoveryRequest proofOfIdentity. */
                public proofOfIdentity: Uint8Array;

                /** RecoveryRequest requestTimestampMs. */
                public requestTimestampMs: (number|Long);

                /** RecoveryRequest challengeResponse. */
                public challengeResponse: Uint8Array;

                /** RecoveryRequest recoveryMethodId. */
                public recoveryMethodId: string;

                /**
                 * Creates a new RecoveryRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RecoveryRequest instance
                 */
                public static create(properties?: juicetokens.trust.identity.IRecoveryRequest): juicetokens.trust.identity.RecoveryRequest;

                /**
                 * Encodes the specified RecoveryRequest message. Does not implicitly {@link juicetokens.trust.identity.RecoveryRequest.verify|verify} messages.
                 * @param message RecoveryRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IRecoveryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RecoveryRequest message, length delimited. Does not implicitly {@link juicetokens.trust.identity.RecoveryRequest.verify|verify} messages.
                 * @param message RecoveryRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IRecoveryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RecoveryRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RecoveryRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.RecoveryRequest;

                /**
                 * Decodes a RecoveryRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RecoveryRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.RecoveryRequest;

                /**
                 * Verifies a RecoveryRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RecoveryRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RecoveryRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.RecoveryRequest;

                /**
                 * Creates a plain object from a RecoveryRequest message. Also converts values to other types if specified.
                 * @param message RecoveryRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.RecoveryRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RecoveryRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RecoveryRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RecoveryApproval. */
            interface IRecoveryApproval {

                /** RecoveryApproval recoveryRequestId */
                recoveryRequestId?: (string|null);

                /** RecoveryApproval approverId */
                approverId?: (string|null);

                /** RecoveryApproval approved */
                approved?: (boolean|null);

                /** RecoveryApproval comment */
                comment?: (string|null);

                /** RecoveryApproval approvalTimestampMs */
                approvalTimestampMs?: (number|Long|null);

                /** RecoveryApproval signature */
                signature?: (Uint8Array|null);
            }

            /** Represents a RecoveryApproval. */
            class RecoveryApproval implements IRecoveryApproval {

                /**
                 * Constructs a new RecoveryApproval.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IRecoveryApproval);

                /** RecoveryApproval recoveryRequestId. */
                public recoveryRequestId: string;

                /** RecoveryApproval approverId. */
                public approverId: string;

                /** RecoveryApproval approved. */
                public approved: boolean;

                /** RecoveryApproval comment. */
                public comment: string;

                /** RecoveryApproval approvalTimestampMs. */
                public approvalTimestampMs: (number|Long);

                /** RecoveryApproval signature. */
                public signature: Uint8Array;

                /**
                 * Creates a new RecoveryApproval instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RecoveryApproval instance
                 */
                public static create(properties?: juicetokens.trust.identity.IRecoveryApproval): juicetokens.trust.identity.RecoveryApproval;

                /**
                 * Encodes the specified RecoveryApproval message. Does not implicitly {@link juicetokens.trust.identity.RecoveryApproval.verify|verify} messages.
                 * @param message RecoveryApproval message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IRecoveryApproval, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RecoveryApproval message, length delimited. Does not implicitly {@link juicetokens.trust.identity.RecoveryApproval.verify|verify} messages.
                 * @param message RecoveryApproval message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IRecoveryApproval, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RecoveryApproval message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RecoveryApproval
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.RecoveryApproval;

                /**
                 * Decodes a RecoveryApproval message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RecoveryApproval
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.RecoveryApproval;

                /**
                 * Verifies a RecoveryApproval message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RecoveryApproval message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RecoveryApproval
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.RecoveryApproval;

                /**
                 * Creates a plain object from a RecoveryApproval message. Also converts values to other types if specified.
                 * @param message RecoveryApproval
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.RecoveryApproval, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RecoveryApproval to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RecoveryApproval
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DIDDocument. */
            interface IDIDDocument {

                /** DIDDocument id */
                id?: (string|null);

                /** DIDDocument verificationMethods */
                verificationMethods?: (juicetokens.trust.identity.IVerificationMethod[]|null);

                /** DIDDocument authentication */
                authentication?: (string[]|null);

                /** DIDDocument assertionMethod */
                assertionMethod?: (string[]|null);

                /** DIDDocument services */
                services?: (juicetokens.trust.identity.IService[]|null);

                /** DIDDocument controllerIds */
                controllerIds?: (string[]|null);

                /** DIDDocument updatedMs */
                updatedMs?: (number|Long|null);
            }

            /** Represents a DIDDocument. */
            class DIDDocument implements IDIDDocument {

                /**
                 * Constructs a new DIDDocument.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IDIDDocument);

                /** DIDDocument id. */
                public id: string;

                /** DIDDocument verificationMethods. */
                public verificationMethods: juicetokens.trust.identity.IVerificationMethod[];

                /** DIDDocument authentication. */
                public authentication: string[];

                /** DIDDocument assertionMethod. */
                public assertionMethod: string[];

                /** DIDDocument services. */
                public services: juicetokens.trust.identity.IService[];

                /** DIDDocument controllerIds. */
                public controllerIds: string[];

                /** DIDDocument updatedMs. */
                public updatedMs: (number|Long);

                /**
                 * Creates a new DIDDocument instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DIDDocument instance
                 */
                public static create(properties?: juicetokens.trust.identity.IDIDDocument): juicetokens.trust.identity.DIDDocument;

                /**
                 * Encodes the specified DIDDocument message. Does not implicitly {@link juicetokens.trust.identity.DIDDocument.verify|verify} messages.
                 * @param message DIDDocument message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IDIDDocument, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DIDDocument message, length delimited. Does not implicitly {@link juicetokens.trust.identity.DIDDocument.verify|verify} messages.
                 * @param message DIDDocument message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IDIDDocument, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DIDDocument message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DIDDocument
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.DIDDocument;

                /**
                 * Decodes a DIDDocument message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DIDDocument
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.DIDDocument;

                /**
                 * Verifies a DIDDocument message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DIDDocument message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DIDDocument
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.DIDDocument;

                /**
                 * Creates a plain object from a DIDDocument message. Also converts values to other types if specified.
                 * @param message DIDDocument
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.DIDDocument, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DIDDocument to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DIDDocument
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a VerificationMethod. */
            interface IVerificationMethod {

                /** VerificationMethod id */
                id?: (string|null);

                /** VerificationMethod type */
                type?: (string|null);

                /** VerificationMethod controller */
                controller?: (string|null);

                /** VerificationMethod publicKeyMultibase */
                publicKeyMultibase?: (Uint8Array|null);
            }

            /** Represents a VerificationMethod. */
            class VerificationMethod implements IVerificationMethod {

                /**
                 * Constructs a new VerificationMethod.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IVerificationMethod);

                /** VerificationMethod id. */
                public id: string;

                /** VerificationMethod type. */
                public type: string;

                /** VerificationMethod controller. */
                public controller: string;

                /** VerificationMethod publicKeyMultibase. */
                public publicKeyMultibase: Uint8Array;

                /**
                 * Creates a new VerificationMethod instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns VerificationMethod instance
                 */
                public static create(properties?: juicetokens.trust.identity.IVerificationMethod): juicetokens.trust.identity.VerificationMethod;

                /**
                 * Encodes the specified VerificationMethod message. Does not implicitly {@link juicetokens.trust.identity.VerificationMethod.verify|verify} messages.
                 * @param message VerificationMethod message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IVerificationMethod, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified VerificationMethod message, length delimited. Does not implicitly {@link juicetokens.trust.identity.VerificationMethod.verify|verify} messages.
                 * @param message VerificationMethod message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IVerificationMethod, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VerificationMethod message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns VerificationMethod
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.VerificationMethod;

                /**
                 * Decodes a VerificationMethod message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns VerificationMethod
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.VerificationMethod;

                /**
                 * Verifies a VerificationMethod message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a VerificationMethod message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns VerificationMethod
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.VerificationMethod;

                /**
                 * Creates a plain object from a VerificationMethod message. Also converts values to other types if specified.
                 * @param message VerificationMethod
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.VerificationMethod, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this VerificationMethod to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for VerificationMethod
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a Service. */
            interface IService {

                /** Service id */
                id?: (string|null);

                /** Service type */
                type?: (string|null);

                /** Service serviceEndpoint */
                serviceEndpoint?: (string|null);

                /** Service properties */
                properties?: ({ [k: string]: string }|null);
            }

            /** Represents a Service. */
            class Service implements IService {

                /**
                 * Constructs a new Service.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IService);

                /** Service id. */
                public id: string;

                /** Service type. */
                public type: string;

                /** Service serviceEndpoint. */
                public serviceEndpoint: string;

                /** Service properties. */
                public properties: { [k: string]: string };

                /**
                 * Creates a new Service instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Service instance
                 */
                public static create(properties?: juicetokens.trust.identity.IService): juicetokens.trust.identity.Service;

                /**
                 * Encodes the specified Service message. Does not implicitly {@link juicetokens.trust.identity.Service.verify|verify} messages.
                 * @param message Service message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IService, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Service message, length delimited. Does not implicitly {@link juicetokens.trust.identity.Service.verify|verify} messages.
                 * @param message Service message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IService, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Service message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Service
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.Service;

                /**
                 * Decodes a Service message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Service
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.Service;

                /**
                 * Verifies a Service message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Service message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Service
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.Service;

                /**
                 * Creates a plain object from a Service message. Also converts values to other types if specified.
                 * @param message Service
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.Service, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Service to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Service
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an IdentityDHTWrapper. */
            interface IIdentityDHTWrapper {

                /** IdentityDHTWrapper identityData */
                identityData?: (Uint8Array|null);

                /** IdentityDHTWrapper didDocument */
                didDocument?: (Uint8Array|null);

                /** IdentityDHTWrapper identityId */
                identityId?: (string|null);

                /** IdentityDHTWrapper timestampMs */
                timestampMs?: (number|Long|null);

                /** IdentityDHTWrapper signature */
                signature?: (Uint8Array|null);

                /** IdentityDHTWrapper ttlSeconds */
                ttlSeconds?: (number|null);

                /** IdentityDHTWrapper entryType */
                entryType?: (string|null);
            }

            /** Represents an IdentityDHTWrapper. */
            class IdentityDHTWrapper implements IIdentityDHTWrapper {

                /**
                 * Constructs a new IdentityDHTWrapper.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IIdentityDHTWrapper);

                /** IdentityDHTWrapper identityData. */
                public identityData: Uint8Array;

                /** IdentityDHTWrapper didDocument. */
                public didDocument: Uint8Array;

                /** IdentityDHTWrapper identityId. */
                public identityId: string;

                /** IdentityDHTWrapper timestampMs. */
                public timestampMs: (number|Long);

                /** IdentityDHTWrapper signature. */
                public signature: Uint8Array;

                /** IdentityDHTWrapper ttlSeconds. */
                public ttlSeconds: number;

                /** IdentityDHTWrapper entryType. */
                public entryType: string;

                /**
                 * Creates a new IdentityDHTWrapper instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns IdentityDHTWrapper instance
                 */
                public static create(properties?: juicetokens.trust.identity.IIdentityDHTWrapper): juicetokens.trust.identity.IdentityDHTWrapper;

                /**
                 * Encodes the specified IdentityDHTWrapper message. Does not implicitly {@link juicetokens.trust.identity.IdentityDHTWrapper.verify|verify} messages.
                 * @param message IdentityDHTWrapper message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IIdentityDHTWrapper, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IdentityDHTWrapper message, length delimited. Does not implicitly {@link juicetokens.trust.identity.IdentityDHTWrapper.verify|verify} messages.
                 * @param message IdentityDHTWrapper message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IIdentityDHTWrapper, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IdentityDHTWrapper message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IdentityDHTWrapper
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.IdentityDHTWrapper;

                /**
                 * Decodes an IdentityDHTWrapper message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IdentityDHTWrapper
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.IdentityDHTWrapper;

                /**
                 * Verifies an IdentityDHTWrapper message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IdentityDHTWrapper message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IdentityDHTWrapper
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.IdentityDHTWrapper;

                /**
                 * Creates a plain object from an IdentityDHTWrapper message. Also converts values to other types if specified.
                 * @param message IdentityDHTWrapper
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.IdentityDHTWrapper, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IdentityDHTWrapper to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for IdentityDHTWrapper
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an IdentityChainEntry. */
            interface IIdentityChainEntry {

                /** IdentityChainEntry identityId */
                identityId?: (string|null);

                /** IdentityChainEntry identityHash */
                identityHash?: (Uint8Array|null);

                /** IdentityChainEntry sequenceNumber */
                sequenceNumber?: (number|Long|null);

                /** IdentityChainEntry entryType */
                entryType?: (string|null);

                /** IdentityChainEntry eventType */
                eventType?: (juicetokens.trust.identity.IdentityChainEntry.EventType|null);

                /** IdentityChainEntry dhtKey */
                dhtKey?: (Uint8Array|null);

                /** IdentityChainEntry signature */
                signature?: (Uint8Array|null);
            }

            /** Represents an IdentityChainEntry. */
            class IdentityChainEntry implements IIdentityChainEntry {

                /**
                 * Constructs a new IdentityChainEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IIdentityChainEntry);

                /** IdentityChainEntry identityId. */
                public identityId: string;

                /** IdentityChainEntry identityHash. */
                public identityHash: Uint8Array;

                /** IdentityChainEntry sequenceNumber. */
                public sequenceNumber: (number|Long);

                /** IdentityChainEntry entryType. */
                public entryType: string;

                /** IdentityChainEntry eventType. */
                public eventType: juicetokens.trust.identity.IdentityChainEntry.EventType;

                /** IdentityChainEntry dhtKey. */
                public dhtKey: Uint8Array;

                /** IdentityChainEntry signature. */
                public signature: Uint8Array;

                /**
                 * Creates a new IdentityChainEntry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns IdentityChainEntry instance
                 */
                public static create(properties?: juicetokens.trust.identity.IIdentityChainEntry): juicetokens.trust.identity.IdentityChainEntry;

                /**
                 * Encodes the specified IdentityChainEntry message. Does not implicitly {@link juicetokens.trust.identity.IdentityChainEntry.verify|verify} messages.
                 * @param message IdentityChainEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IIdentityChainEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified IdentityChainEntry message, length delimited. Does not implicitly {@link juicetokens.trust.identity.IdentityChainEntry.verify|verify} messages.
                 * @param message IdentityChainEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IIdentityChainEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an IdentityChainEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns IdentityChainEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.IdentityChainEntry;

                /**
                 * Decodes an IdentityChainEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns IdentityChainEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.IdentityChainEntry;

                /**
                 * Verifies an IdentityChainEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an IdentityChainEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns IdentityChainEntry
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.IdentityChainEntry;

                /**
                 * Creates a plain object from an IdentityChainEntry message. Also converts values to other types if specified.
                 * @param message IdentityChainEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.IdentityChainEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this IdentityChainEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for IdentityChainEntry
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace IdentityChainEntry {

                /** EventType enum. */
                enum EventType {
                    CREATION = 0,
                    UPDATE = 1,
                    VERIFICATION = 2,
                    KEY_ROTATION = 3,
                    STATUS_CHANGE = 4
                }
            }

            /** Properties of a DisclosureRequest. */
            interface IDisclosureRequest {

                /** DisclosureRequest requesterId */
                requesterId?: (string|null);

                /** DisclosureRequest subjectId */
                subjectId?: (string|null);

                /** DisclosureRequest requestedAttributes */
                requestedAttributes?: (string[]|null);

                /** DisclosureRequest purpose */
                purpose?: (string|null);

                /** DisclosureRequest timestampMs */
                timestampMs?: (number|Long|null);

                /** DisclosureRequest signature */
                signature?: (Uint8Array|null);

                /** DisclosureRequest validitySeconds */
                validitySeconds?: (number|Long|null);
            }

            /** Represents a DisclosureRequest. */
            class DisclosureRequest implements IDisclosureRequest {

                /**
                 * Constructs a new DisclosureRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IDisclosureRequest);

                /** DisclosureRequest requesterId. */
                public requesterId: string;

                /** DisclosureRequest subjectId. */
                public subjectId: string;

                /** DisclosureRequest requestedAttributes. */
                public requestedAttributes: string[];

                /** DisclosureRequest purpose. */
                public purpose: string;

                /** DisclosureRequest timestampMs. */
                public timestampMs: (number|Long);

                /** DisclosureRequest signature. */
                public signature: Uint8Array;

                /** DisclosureRequest validitySeconds. */
                public validitySeconds: (number|Long);

                /**
                 * Creates a new DisclosureRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DisclosureRequest instance
                 */
                public static create(properties?: juicetokens.trust.identity.IDisclosureRequest): juicetokens.trust.identity.DisclosureRequest;

                /**
                 * Encodes the specified DisclosureRequest message. Does not implicitly {@link juicetokens.trust.identity.DisclosureRequest.verify|verify} messages.
                 * @param message DisclosureRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IDisclosureRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DisclosureRequest message, length delimited. Does not implicitly {@link juicetokens.trust.identity.DisclosureRequest.verify|verify} messages.
                 * @param message DisclosureRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IDisclosureRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DisclosureRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DisclosureRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.DisclosureRequest;

                /**
                 * Decodes a DisclosureRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DisclosureRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.DisclosureRequest;

                /**
                 * Verifies a DisclosureRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DisclosureRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DisclosureRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.DisclosureRequest;

                /**
                 * Creates a plain object from a DisclosureRequest message. Also converts values to other types if specified.
                 * @param message DisclosureRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.DisclosureRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DisclosureRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DisclosureRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AttributeDisclosure. */
            interface IAttributeDisclosure {

                /** AttributeDisclosure disclosureId */
                disclosureId?: (string|null);

                /** AttributeDisclosure subjectId */
                subjectId?: (string|null);

                /** AttributeDisclosure recipientId */
                recipientId?: (string|null);

                /** AttributeDisclosure disclosedAttributes */
                disclosedAttributes?: ({ [k: string]: string }|null);

                /** AttributeDisclosure disclosureSignature */
                disclosureSignature?: (Uint8Array|null);

                /** AttributeDisclosure createdMs */
                createdMs?: (number|Long|null);

                /** AttributeDisclosure expiresMs */
                expiresMs?: (number|Long|null);

                /** AttributeDisclosure purpose */
                purpose?: (string|null);

                /** AttributeDisclosure revocable */
                revocable?: (boolean|null);
            }

            /** Represents an AttributeDisclosure. */
            class AttributeDisclosure implements IAttributeDisclosure {

                /**
                 * Constructs a new AttributeDisclosure.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IAttributeDisclosure);

                /** AttributeDisclosure disclosureId. */
                public disclosureId: string;

                /** AttributeDisclosure subjectId. */
                public subjectId: string;

                /** AttributeDisclosure recipientId. */
                public recipientId: string;

                /** AttributeDisclosure disclosedAttributes. */
                public disclosedAttributes: { [k: string]: string };

                /** AttributeDisclosure disclosureSignature. */
                public disclosureSignature: Uint8Array;

                /** AttributeDisclosure createdMs. */
                public createdMs: (number|Long);

                /** AttributeDisclosure expiresMs. */
                public expiresMs: (number|Long);

                /** AttributeDisclosure purpose. */
                public purpose: string;

                /** AttributeDisclosure revocable. */
                public revocable: boolean;

                /**
                 * Creates a new AttributeDisclosure instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttributeDisclosure instance
                 */
                public static create(properties?: juicetokens.trust.identity.IAttributeDisclosure): juicetokens.trust.identity.AttributeDisclosure;

                /**
                 * Encodes the specified AttributeDisclosure message. Does not implicitly {@link juicetokens.trust.identity.AttributeDisclosure.verify|verify} messages.
                 * @param message AttributeDisclosure message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IAttributeDisclosure, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttributeDisclosure message, length delimited. Does not implicitly {@link juicetokens.trust.identity.AttributeDisclosure.verify|verify} messages.
                 * @param message AttributeDisclosure message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IAttributeDisclosure, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttributeDisclosure message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttributeDisclosure
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.AttributeDisclosure;

                /**
                 * Decodes an AttributeDisclosure message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttributeDisclosure
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.AttributeDisclosure;

                /**
                 * Verifies an AttributeDisclosure message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttributeDisclosure message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttributeDisclosure
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.AttributeDisclosure;

                /**
                 * Creates a plain object from an AttributeDisclosure message. Also converts values to other types if specified.
                 * @param message AttributeDisclosure
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.AttributeDisclosure, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttributeDisclosure to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttributeDisclosure
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ZeroKnowledgeProof. */
            interface IZeroKnowledgeProof {

                /** ZeroKnowledgeProof proofId */
                proofId?: (string|null);

                /** ZeroKnowledgeProof subjectId */
                subjectId?: (string|null);

                /** ZeroKnowledgeProof verifierId */
                verifierId?: (string|null);

                /** ZeroKnowledgeProof proofType */
                proofType?: (string|null);

                /** ZeroKnowledgeProof attributeIdentifier */
                attributeIdentifier?: (string|null);

                /** ZeroKnowledgeProof predicate */
                predicate?: (string|null);

                /** ZeroKnowledgeProof proofData */
                proofData?: (Uint8Array|null);

                /** ZeroKnowledgeProof createdMs */
                createdMs?: (number|Long|null);

                /** ZeroKnowledgeProof expiresMs */
                expiresMs?: (number|Long|null);
            }

            /** Represents a ZeroKnowledgeProof. */
            class ZeroKnowledgeProof implements IZeroKnowledgeProof {

                /**
                 * Constructs a new ZeroKnowledgeProof.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.identity.IZeroKnowledgeProof);

                /** ZeroKnowledgeProof proofId. */
                public proofId: string;

                /** ZeroKnowledgeProof subjectId. */
                public subjectId: string;

                /** ZeroKnowledgeProof verifierId. */
                public verifierId: string;

                /** ZeroKnowledgeProof proofType. */
                public proofType: string;

                /** ZeroKnowledgeProof attributeIdentifier. */
                public attributeIdentifier: string;

                /** ZeroKnowledgeProof predicate. */
                public predicate: string;

                /** ZeroKnowledgeProof proofData. */
                public proofData: Uint8Array;

                /** ZeroKnowledgeProof createdMs. */
                public createdMs: (number|Long);

                /** ZeroKnowledgeProof expiresMs. */
                public expiresMs: (number|Long);

                /**
                 * Creates a new ZeroKnowledgeProof instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ZeroKnowledgeProof instance
                 */
                public static create(properties?: juicetokens.trust.identity.IZeroKnowledgeProof): juicetokens.trust.identity.ZeroKnowledgeProof;

                /**
                 * Encodes the specified ZeroKnowledgeProof message. Does not implicitly {@link juicetokens.trust.identity.ZeroKnowledgeProof.verify|verify} messages.
                 * @param message ZeroKnowledgeProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.identity.IZeroKnowledgeProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ZeroKnowledgeProof message, length delimited. Does not implicitly {@link juicetokens.trust.identity.ZeroKnowledgeProof.verify|verify} messages.
                 * @param message ZeroKnowledgeProof message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.identity.IZeroKnowledgeProof, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ZeroKnowledgeProof message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ZeroKnowledgeProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.identity.ZeroKnowledgeProof;

                /**
                 * Decodes a ZeroKnowledgeProof message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ZeroKnowledgeProof
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.identity.ZeroKnowledgeProof;

                /**
                 * Verifies a ZeroKnowledgeProof message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ZeroKnowledgeProof message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ZeroKnowledgeProof
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.identity.ZeroKnowledgeProof;

                /**
                 * Creates a plain object from a ZeroKnowledgeProof message. Also converts values to other types if specified.
                 * @param message ZeroKnowledgeProof
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.identity.ZeroKnowledgeProof, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ZeroKnowledgeProof to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ZeroKnowledgeProof
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Namespace privacy. */
        namespace privacy {

            /** Properties of a PrivacyPreferences. */
            interface IPrivacyPreferences {

                /** PrivacyPreferences identityId */
                identityId?: (string|null);

                /** PrivacyPreferences attributeVisibility */
                attributeVisibility?: ({ [k: string]: juicetokens.trust.privacy.IAttributeVisibility }|null);

                /** PrivacyPreferences sharingPreferences */
                sharingPreferences?: ({ [k: string]: juicetokens.trust.privacy.ISharingPreference }|null);

                /** PrivacyPreferences activeConsents */
                activeConsents?: (juicetokens.trust.privacy.IConsentRecord[]|null);

                /** PrivacyPreferences lastUpdatedMs */
                lastUpdatedMs?: (number|Long|null);

                /** PrivacyPreferences signature */
                signature?: (Uint8Array|null);
            }

            /** Represents a PrivacyPreferences. */
            class PrivacyPreferences implements IPrivacyPreferences {

                /**
                 * Constructs a new PrivacyPreferences.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IPrivacyPreferences);

                /** PrivacyPreferences identityId. */
                public identityId: string;

                /** PrivacyPreferences attributeVisibility. */
                public attributeVisibility: { [k: string]: juicetokens.trust.privacy.IAttributeVisibility };

                /** PrivacyPreferences sharingPreferences. */
                public sharingPreferences: { [k: string]: juicetokens.trust.privacy.ISharingPreference };

                /** PrivacyPreferences activeConsents. */
                public activeConsents: juicetokens.trust.privacy.IConsentRecord[];

                /** PrivacyPreferences lastUpdatedMs. */
                public lastUpdatedMs: (number|Long);

                /** PrivacyPreferences signature. */
                public signature: Uint8Array;

                /**
                 * Creates a new PrivacyPreferences instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PrivacyPreferences instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IPrivacyPreferences): juicetokens.trust.privacy.PrivacyPreferences;

                /**
                 * Encodes the specified PrivacyPreferences message. Does not implicitly {@link juicetokens.trust.privacy.PrivacyPreferences.verify|verify} messages.
                 * @param message PrivacyPreferences message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IPrivacyPreferences, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PrivacyPreferences message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.PrivacyPreferences.verify|verify} messages.
                 * @param message PrivacyPreferences message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IPrivacyPreferences, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PrivacyPreferences message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PrivacyPreferences
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.PrivacyPreferences;

                /**
                 * Decodes a PrivacyPreferences message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PrivacyPreferences
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.PrivacyPreferences;

                /**
                 * Verifies a PrivacyPreferences message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PrivacyPreferences message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PrivacyPreferences
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.PrivacyPreferences;

                /**
                 * Creates a plain object from a PrivacyPreferences message. Also converts values to other types if specified.
                 * @param message PrivacyPreferences
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.PrivacyPreferences, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PrivacyPreferences to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PrivacyPreferences
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** VisibilityLevel enum. */
            enum VisibilityLevel {
                PUBLIC = 0,
                NETWORK = 1,
                CONNECTIONS = 2,
                TRUSTED = 3,
                PRIVATE = 4
            }

            /** Properties of an AttributeVisibility. */
            interface IAttributeVisibility {

                /** AttributeVisibility attributeName */
                attributeName?: (string|null);

                /** AttributeVisibility visibilityLevel */
                visibilityLevel?: (juicetokens.trust.privacy.VisibilityLevel|null);

                /** AttributeVisibility allowedViewers */
                allowedViewers?: (string[]|null);

                /** AttributeVisibility blockedViewers */
                blockedViewers?: (string[]|null);

                /** AttributeVisibility requireExplicitConsent */
                requireExplicitConsent?: (boolean|null);
            }

            /** Represents an AttributeVisibility. */
            class AttributeVisibility implements IAttributeVisibility {

                /**
                 * Constructs a new AttributeVisibility.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IAttributeVisibility);

                /** AttributeVisibility attributeName. */
                public attributeName: string;

                /** AttributeVisibility visibilityLevel. */
                public visibilityLevel: juicetokens.trust.privacy.VisibilityLevel;

                /** AttributeVisibility allowedViewers. */
                public allowedViewers: string[];

                /** AttributeVisibility blockedViewers. */
                public blockedViewers: string[];

                /** AttributeVisibility requireExplicitConsent. */
                public requireExplicitConsent: boolean;

                /**
                 * Creates a new AttributeVisibility instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AttributeVisibility instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IAttributeVisibility): juicetokens.trust.privacy.AttributeVisibility;

                /**
                 * Encodes the specified AttributeVisibility message. Does not implicitly {@link juicetokens.trust.privacy.AttributeVisibility.verify|verify} messages.
                 * @param message AttributeVisibility message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IAttributeVisibility, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AttributeVisibility message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.AttributeVisibility.verify|verify} messages.
                 * @param message AttributeVisibility message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IAttributeVisibility, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AttributeVisibility message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AttributeVisibility
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.AttributeVisibility;

                /**
                 * Decodes an AttributeVisibility message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AttributeVisibility
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.AttributeVisibility;

                /**
                 * Verifies an AttributeVisibility message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AttributeVisibility message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AttributeVisibility
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.AttributeVisibility;

                /**
                 * Creates a plain object from an AttributeVisibility message. Also converts values to other types if specified.
                 * @param message AttributeVisibility
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.AttributeVisibility, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AttributeVisibility to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AttributeVisibility
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a SharingPreference. */
            interface ISharingPreference {

                /** SharingPreference purpose */
                purpose?: (string|null);

                /** SharingPreference sharingLevel */
                sharingLevel?: (juicetokens.trust.privacy.SharingPreference.SharingLevel|null);

                /** SharingPreference consentDurationSeconds */
                consentDurationSeconds?: (number|Long|null);

                /** SharingPreference allowDelegation */
                allowDelegation?: (boolean|null);

                /** SharingPreference extraRequirements */
                extraRequirements?: (Uint8Array|null);
            }

            /** Represents a SharingPreference. */
            class SharingPreference implements ISharingPreference {

                /**
                 * Constructs a new SharingPreference.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.ISharingPreference);

                /** SharingPreference purpose. */
                public purpose: string;

                /** SharingPreference sharingLevel. */
                public sharingLevel: juicetokens.trust.privacy.SharingPreference.SharingLevel;

                /** SharingPreference consentDurationSeconds. */
                public consentDurationSeconds: (number|Long);

                /** SharingPreference allowDelegation. */
                public allowDelegation: boolean;

                /** SharingPreference extraRequirements. */
                public extraRequirements: Uint8Array;

                /**
                 * Creates a new SharingPreference instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SharingPreference instance
                 */
                public static create(properties?: juicetokens.trust.privacy.ISharingPreference): juicetokens.trust.privacy.SharingPreference;

                /**
                 * Encodes the specified SharingPreference message. Does not implicitly {@link juicetokens.trust.privacy.SharingPreference.verify|verify} messages.
                 * @param message SharingPreference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.ISharingPreference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SharingPreference message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.SharingPreference.verify|verify} messages.
                 * @param message SharingPreference message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.ISharingPreference, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SharingPreference message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SharingPreference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.SharingPreference;

                /**
                 * Decodes a SharingPreference message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SharingPreference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.SharingPreference;

                /**
                 * Verifies a SharingPreference message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SharingPreference message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SharingPreference
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.SharingPreference;

                /**
                 * Creates a plain object from a SharingPreference message. Also converts values to other types if specified.
                 * @param message SharingPreference
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.SharingPreference, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SharingPreference to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SharingPreference
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace SharingPreference {

                /** SharingLevel enum. */
                enum SharingLevel {
                    ALWAYS_SHARE = 0,
                    ASK_EVERY_TIME = 1,
                    SHARE_ONCE = 2,
                    NEVER_SHARE = 3
                }
            }

            /** Properties of a ConsentRequest. */
            interface IConsentRequest {

                /** ConsentRequest requestId */
                requestId?: (string|null);

                /** ConsentRequest requesterId */
                requesterId?: (string|null);

                /** ConsentRequest subjectId */
                subjectId?: (string|null);

                /** ConsentRequest purpose */
                purpose?: (string|null);

                /** ConsentRequest requestedAttributes */
                requestedAttributes?: (string[]|null);

                /** ConsentRequest requestTimestampMs */
                requestTimestampMs?: (number|Long|null);

                /** ConsentRequest consentDurationSeconds */
                consentDurationSeconds?: (number|Long|null);

                /** ConsentRequest dataUsagePolicy */
                dataUsagePolicy?: (string|null);

                /** ConsentRequest allowDelegation */
                allowDelegation?: (boolean|null);

                /** ConsentRequest requestSignature */
                requestSignature?: (Uint8Array|null);
            }

            /** Represents a ConsentRequest. */
            class ConsentRequest implements IConsentRequest {

                /**
                 * Constructs a new ConsentRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IConsentRequest);

                /** ConsentRequest requestId. */
                public requestId: string;

                /** ConsentRequest requesterId. */
                public requesterId: string;

                /** ConsentRequest subjectId. */
                public subjectId: string;

                /** ConsentRequest purpose. */
                public purpose: string;

                /** ConsentRequest requestedAttributes. */
                public requestedAttributes: string[];

                /** ConsentRequest requestTimestampMs. */
                public requestTimestampMs: (number|Long);

                /** ConsentRequest consentDurationSeconds. */
                public consentDurationSeconds: (number|Long);

                /** ConsentRequest dataUsagePolicy. */
                public dataUsagePolicy: string;

                /** ConsentRequest allowDelegation. */
                public allowDelegation: boolean;

                /** ConsentRequest requestSignature. */
                public requestSignature: Uint8Array;

                /**
                 * Creates a new ConsentRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ConsentRequest instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IConsentRequest): juicetokens.trust.privacy.ConsentRequest;

                /**
                 * Encodes the specified ConsentRequest message. Does not implicitly {@link juicetokens.trust.privacy.ConsentRequest.verify|verify} messages.
                 * @param message ConsentRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IConsentRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ConsentRequest message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.ConsentRequest.verify|verify} messages.
                 * @param message ConsentRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IConsentRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ConsentRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ConsentRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.ConsentRequest;

                /**
                 * Decodes a ConsentRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ConsentRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.ConsentRequest;

                /**
                 * Verifies a ConsentRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ConsentRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ConsentRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.ConsentRequest;

                /**
                 * Creates a plain object from a ConsentRequest message. Also converts values to other types if specified.
                 * @param message ConsentRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.ConsentRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ConsentRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ConsentRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ConsentResponse. */
            interface IConsentResponse {

                /** ConsentResponse requestId */
                requestId?: (string|null);

                /** ConsentResponse subjectId */
                subjectId?: (string|null);

                /** ConsentResponse decision */
                decision?: (juicetokens.trust.privacy.ConsentResponse.ConsentDecision|null);

                /** ConsentResponse grantedAttributes */
                grantedAttributes?: (string[]|null);

                /** ConsentResponse responseTimestampMs */
                responseTimestampMs?: (number|Long|null);

                /** ConsentResponse expiryTimestampMs */
                expiryTimestampMs?: (number|Long|null);

                /** ConsentResponse comment */
                comment?: (string|null);

                /** ConsentResponse responseSignature */
                responseSignature?: (Uint8Array|null);
            }

            /** Represents a ConsentResponse. */
            class ConsentResponse implements IConsentResponse {

                /**
                 * Constructs a new ConsentResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IConsentResponse);

                /** ConsentResponse requestId. */
                public requestId: string;

                /** ConsentResponse subjectId. */
                public subjectId: string;

                /** ConsentResponse decision. */
                public decision: juicetokens.trust.privacy.ConsentResponse.ConsentDecision;

                /** ConsentResponse grantedAttributes. */
                public grantedAttributes: string[];

                /** ConsentResponse responseTimestampMs. */
                public responseTimestampMs: (number|Long);

                /** ConsentResponse expiryTimestampMs. */
                public expiryTimestampMs: (number|Long);

                /** ConsentResponse comment. */
                public comment: string;

                /** ConsentResponse responseSignature. */
                public responseSignature: Uint8Array;

                /**
                 * Creates a new ConsentResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ConsentResponse instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IConsentResponse): juicetokens.trust.privacy.ConsentResponse;

                /**
                 * Encodes the specified ConsentResponse message. Does not implicitly {@link juicetokens.trust.privacy.ConsentResponse.verify|verify} messages.
                 * @param message ConsentResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IConsentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ConsentResponse message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.ConsentResponse.verify|verify} messages.
                 * @param message ConsentResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IConsentResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ConsentResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ConsentResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.ConsentResponse;

                /**
                 * Decodes a ConsentResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ConsentResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.ConsentResponse;

                /**
                 * Verifies a ConsentResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ConsentResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ConsentResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.ConsentResponse;

                /**
                 * Creates a plain object from a ConsentResponse message. Also converts values to other types if specified.
                 * @param message ConsentResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.ConsentResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ConsentResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ConsentResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace ConsentResponse {

                /** ConsentDecision enum. */
                enum ConsentDecision {
                    GRANTED = 0,
                    DENIED = 1,
                    PARTIAL = 2,
                    DEFERRED = 3
                }
            }

            /** Properties of a ConsentRecord. */
            interface IConsentRecord {

                /** ConsentRecord consentId */
                consentId?: (string|null);

                /** ConsentRecord requestId */
                requestId?: (string|null);

                /** ConsentRecord requesterId */
                requesterId?: (string|null);

                /** ConsentRecord subjectId */
                subjectId?: (string|null);

                /** ConsentRecord purpose */
                purpose?: (string|null);

                /** ConsentRecord grantedAttributes */
                grantedAttributes?: (string[]|null);

                /** ConsentRecord grantTimestampMs */
                grantTimestampMs?: (number|Long|null);

                /** ConsentRecord expiryTimestampMs */
                expiryTimestampMs?: (number|Long|null);

                /** ConsentRecord subjectSignature */
                subjectSignature?: (Uint8Array|null);

                /** ConsentRecord requesterAcknowledgment */
                requesterAcknowledgment?: (Uint8Array|null);

                /** ConsentRecord revocable */
                revocable?: (boolean|null);

                /** ConsentRecord status */
                status?: (juicetokens.trust.privacy.ConsentStatus|null);
            }

            /** Represents a ConsentRecord. */
            class ConsentRecord implements IConsentRecord {

                /**
                 * Constructs a new ConsentRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IConsentRecord);

                /** ConsentRecord consentId. */
                public consentId: string;

                /** ConsentRecord requestId. */
                public requestId: string;

                /** ConsentRecord requesterId. */
                public requesterId: string;

                /** ConsentRecord subjectId. */
                public subjectId: string;

                /** ConsentRecord purpose. */
                public purpose: string;

                /** ConsentRecord grantedAttributes. */
                public grantedAttributes: string[];

                /** ConsentRecord grantTimestampMs. */
                public grantTimestampMs: (number|Long);

                /** ConsentRecord expiryTimestampMs. */
                public expiryTimestampMs: (number|Long);

                /** ConsentRecord subjectSignature. */
                public subjectSignature: Uint8Array;

                /** ConsentRecord requesterAcknowledgment. */
                public requesterAcknowledgment: Uint8Array;

                /** ConsentRecord revocable. */
                public revocable: boolean;

                /** ConsentRecord status. */
                public status: juicetokens.trust.privacy.ConsentStatus;

                /**
                 * Creates a new ConsentRecord instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ConsentRecord instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IConsentRecord): juicetokens.trust.privacy.ConsentRecord;

                /**
                 * Encodes the specified ConsentRecord message. Does not implicitly {@link juicetokens.trust.privacy.ConsentRecord.verify|verify} messages.
                 * @param message ConsentRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IConsentRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ConsentRecord message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.ConsentRecord.verify|verify} messages.
                 * @param message ConsentRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IConsentRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ConsentRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ConsentRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.ConsentRecord;

                /**
                 * Decodes a ConsentRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ConsentRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.ConsentRecord;

                /**
                 * Verifies a ConsentRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ConsentRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ConsentRecord
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.ConsentRecord;

                /**
                 * Creates a plain object from a ConsentRecord message. Also converts values to other types if specified.
                 * @param message ConsentRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.ConsentRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ConsentRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ConsentRecord
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** ConsentStatus enum. */
            enum ConsentStatus {
                ACTIVE = 0,
                EXPIRED = 1,
                REVOKED = 2,
                SUPERSEDED = 3
            }

            /** Properties of a ConsentRevocation. */
            interface IConsentRevocation {

                /** ConsentRevocation consentId */
                consentId?: (string|null);

                /** ConsentRevocation subjectId */
                subjectId?: (string|null);

                /** ConsentRevocation reason */
                reason?: (string|null);

                /** ConsentRevocation revocationTimestampMs */
                revocationTimestampMs?: (number|Long|null);

                /** ConsentRevocation revocationSignature */
                revocationSignature?: (Uint8Array|null);

                /** ConsentRevocation deleteSharedData */
                deleteSharedData?: (boolean|null);
            }

            /** Represents a ConsentRevocation. */
            class ConsentRevocation implements IConsentRevocation {

                /**
                 * Constructs a new ConsentRevocation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IConsentRevocation);

                /** ConsentRevocation consentId. */
                public consentId: string;

                /** ConsentRevocation subjectId. */
                public subjectId: string;

                /** ConsentRevocation reason. */
                public reason: string;

                /** ConsentRevocation revocationTimestampMs. */
                public revocationTimestampMs: (number|Long);

                /** ConsentRevocation revocationSignature. */
                public revocationSignature: Uint8Array;

                /** ConsentRevocation deleteSharedData. */
                public deleteSharedData: boolean;

                /**
                 * Creates a new ConsentRevocation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ConsentRevocation instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IConsentRevocation): juicetokens.trust.privacy.ConsentRevocation;

                /**
                 * Encodes the specified ConsentRevocation message. Does not implicitly {@link juicetokens.trust.privacy.ConsentRevocation.verify|verify} messages.
                 * @param message ConsentRevocation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IConsentRevocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ConsentRevocation message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.ConsentRevocation.verify|verify} messages.
                 * @param message ConsentRevocation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IConsentRevocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ConsentRevocation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ConsentRevocation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.ConsentRevocation;

                /**
                 * Decodes a ConsentRevocation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ConsentRevocation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.ConsentRevocation;

                /**
                 * Verifies a ConsentRevocation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ConsentRevocation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ConsentRevocation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.ConsentRevocation;

                /**
                 * Creates a plain object from a ConsentRevocation message. Also converts values to other types if specified.
                 * @param message ConsentRevocation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.ConsentRevocation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ConsentRevocation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ConsentRevocation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DataMinimizationRule. */
            interface IDataMinimizationRule {

                /** DataMinimizationRule ruleId */
                ruleId?: (string|null);

                /** DataMinimizationRule attributeName */
                attributeName?: (string|null);

                /** DataMinimizationRule technique */
                technique?: (juicetokens.trust.privacy.DataMinimizationRule.MinimizationTechnique|null);

                /** DataMinimizationRule techniqueParameters */
                techniqueParameters?: (Uint8Array|null);

                /** DataMinimizationRule purpose */
                purpose?: (string|null);
            }

            /** Represents a DataMinimizationRule. */
            class DataMinimizationRule implements IDataMinimizationRule {

                /**
                 * Constructs a new DataMinimizationRule.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IDataMinimizationRule);

                /** DataMinimizationRule ruleId. */
                public ruleId: string;

                /** DataMinimizationRule attributeName. */
                public attributeName: string;

                /** DataMinimizationRule technique. */
                public technique: juicetokens.trust.privacy.DataMinimizationRule.MinimizationTechnique;

                /** DataMinimizationRule techniqueParameters. */
                public techniqueParameters: Uint8Array;

                /** DataMinimizationRule purpose. */
                public purpose: string;

                /**
                 * Creates a new DataMinimizationRule instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DataMinimizationRule instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IDataMinimizationRule): juicetokens.trust.privacy.DataMinimizationRule;

                /**
                 * Encodes the specified DataMinimizationRule message. Does not implicitly {@link juicetokens.trust.privacy.DataMinimizationRule.verify|verify} messages.
                 * @param message DataMinimizationRule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IDataMinimizationRule, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DataMinimizationRule message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.DataMinimizationRule.verify|verify} messages.
                 * @param message DataMinimizationRule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IDataMinimizationRule, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DataMinimizationRule message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DataMinimizationRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.DataMinimizationRule;

                /**
                 * Decodes a DataMinimizationRule message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DataMinimizationRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.DataMinimizationRule;

                /**
                 * Verifies a DataMinimizationRule message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DataMinimizationRule message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DataMinimizationRule
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.DataMinimizationRule;

                /**
                 * Creates a plain object from a DataMinimizationRule message. Also converts values to other types if specified.
                 * @param message DataMinimizationRule
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.DataMinimizationRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DataMinimizationRule to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DataMinimizationRule
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace DataMinimizationRule {

                /** MinimizationTechnique enum. */
                enum MinimizationTechnique {
                    NONE = 0,
                    GENERALIZATION = 1,
                    SUPPRESSION = 2,
                    ANONYMIZATION = 3,
                    PSEUDONYMIZATION = 4,
                    DIFFERENTIAL_PRIVACY = 5
                }
            }

            /** Properties of a MinimizedAttribute. */
            interface IMinimizedAttribute {

                /** MinimizedAttribute originalAttributeName */
                originalAttributeName?: (string|null);

                /** MinimizedAttribute minimizedValue */
                minimizedValue?: (string|null);

                /** MinimizedAttribute appliedRule */
                appliedRule?: (juicetokens.trust.privacy.IDataMinimizationRule|null);

                /** MinimizedAttribute purpose */
                purpose?: (string|null);

                /** MinimizedAttribute minimizationTimestampMs */
                minimizationTimestampMs?: (number|Long|null);
            }

            /** Represents a MinimizedAttribute. */
            class MinimizedAttribute implements IMinimizedAttribute {

                /**
                 * Constructs a new MinimizedAttribute.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IMinimizedAttribute);

                /** MinimizedAttribute originalAttributeName. */
                public originalAttributeName: string;

                /** MinimizedAttribute minimizedValue. */
                public minimizedValue: string;

                /** MinimizedAttribute appliedRule. */
                public appliedRule?: (juicetokens.trust.privacy.IDataMinimizationRule|null);

                /** MinimizedAttribute purpose. */
                public purpose: string;

                /** MinimizedAttribute minimizationTimestampMs. */
                public minimizationTimestampMs: (number|Long);

                /**
                 * Creates a new MinimizedAttribute instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MinimizedAttribute instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IMinimizedAttribute): juicetokens.trust.privacy.MinimizedAttribute;

                /**
                 * Encodes the specified MinimizedAttribute message. Does not implicitly {@link juicetokens.trust.privacy.MinimizedAttribute.verify|verify} messages.
                 * @param message MinimizedAttribute message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IMinimizedAttribute, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MinimizedAttribute message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.MinimizedAttribute.verify|verify} messages.
                 * @param message MinimizedAttribute message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IMinimizedAttribute, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MinimizedAttribute message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MinimizedAttribute
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.MinimizedAttribute;

                /**
                 * Decodes a MinimizedAttribute message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MinimizedAttribute
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.MinimizedAttribute;

                /**
                 * Verifies a MinimizedAttribute message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MinimizedAttribute message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MinimizedAttribute
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.MinimizedAttribute;

                /**
                 * Creates a plain object from a MinimizedAttribute message. Also converts values to other types if specified.
                 * @param message MinimizedAttribute
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.MinimizedAttribute, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MinimizedAttribute to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for MinimizedAttribute
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DeletionRequest. */
            interface IDeletionRequest {

                /** DeletionRequest requestId */
                requestId?: (string|null);

                /** DeletionRequest subjectId */
                subjectId?: (string|null);

                /** DeletionRequest processorId */
                processorId?: (string|null);

                /** DeletionRequest attributesToDelete */
                attributesToDelete?: (string[]|null);

                /** DeletionRequest reason */
                reason?: (string|null);

                /** DeletionRequest requestTimestampMs */
                requestTimestampMs?: (number|Long|null);

                /** DeletionRequest requestSignature */
                requestSignature?: (Uint8Array|null);
            }

            /** Represents a DeletionRequest. */
            class DeletionRequest implements IDeletionRequest {

                /**
                 * Constructs a new DeletionRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IDeletionRequest);

                /** DeletionRequest requestId. */
                public requestId: string;

                /** DeletionRequest subjectId. */
                public subjectId: string;

                /** DeletionRequest processorId. */
                public processorId: string;

                /** DeletionRequest attributesToDelete. */
                public attributesToDelete: string[];

                /** DeletionRequest reason. */
                public reason: string;

                /** DeletionRequest requestTimestampMs. */
                public requestTimestampMs: (number|Long);

                /** DeletionRequest requestSignature. */
                public requestSignature: Uint8Array;

                /**
                 * Creates a new DeletionRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DeletionRequest instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IDeletionRequest): juicetokens.trust.privacy.DeletionRequest;

                /**
                 * Encodes the specified DeletionRequest message. Does not implicitly {@link juicetokens.trust.privacy.DeletionRequest.verify|verify} messages.
                 * @param message DeletionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IDeletionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DeletionRequest message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.DeletionRequest.verify|verify} messages.
                 * @param message DeletionRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IDeletionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DeletionRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DeletionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.DeletionRequest;

                /**
                 * Decodes a DeletionRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DeletionRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.DeletionRequest;

                /**
                 * Verifies a DeletionRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DeletionRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DeletionRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.DeletionRequest;

                /**
                 * Creates a plain object from a DeletionRequest message. Also converts values to other types if specified.
                 * @param message DeletionRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.DeletionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DeletionRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DeletionRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DeletionConfirmation. */
            interface IDeletionConfirmation {

                /** DeletionConfirmation requestId */
                requestId?: (string|null);

                /** DeletionConfirmation processorId */
                processorId?: (string|null);

                /** DeletionConfirmation deletionCompleted */
                deletionCompleted?: (boolean|null);

                /** DeletionConfirmation deletedAttributes */
                deletedAttributes?: (string[]|null);

                /** DeletionConfirmation undeletedAttributes */
                undeletedAttributes?: (string[]|null);

                /** DeletionConfirmation reasonForIncomplete */
                reasonForIncomplete?: (string|null);

                /** DeletionConfirmation confirmationTimestampMs */
                confirmationTimestampMs?: (number|Long|null);

                /** DeletionConfirmation confirmationSignature */
                confirmationSignature?: (Uint8Array|null);
            }

            /** Represents a DeletionConfirmation. */
            class DeletionConfirmation implements IDeletionConfirmation {

                /**
                 * Constructs a new DeletionConfirmation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IDeletionConfirmation);

                /** DeletionConfirmation requestId. */
                public requestId: string;

                /** DeletionConfirmation processorId. */
                public processorId: string;

                /** DeletionConfirmation deletionCompleted. */
                public deletionCompleted: boolean;

                /** DeletionConfirmation deletedAttributes. */
                public deletedAttributes: string[];

                /** DeletionConfirmation undeletedAttributes. */
                public undeletedAttributes: string[];

                /** DeletionConfirmation reasonForIncomplete. */
                public reasonForIncomplete: string;

                /** DeletionConfirmation confirmationTimestampMs. */
                public confirmationTimestampMs: (number|Long);

                /** DeletionConfirmation confirmationSignature. */
                public confirmationSignature: Uint8Array;

                /**
                 * Creates a new DeletionConfirmation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DeletionConfirmation instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IDeletionConfirmation): juicetokens.trust.privacy.DeletionConfirmation;

                /**
                 * Encodes the specified DeletionConfirmation message. Does not implicitly {@link juicetokens.trust.privacy.DeletionConfirmation.verify|verify} messages.
                 * @param message DeletionConfirmation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IDeletionConfirmation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DeletionConfirmation message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.DeletionConfirmation.verify|verify} messages.
                 * @param message DeletionConfirmation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IDeletionConfirmation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DeletionConfirmation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DeletionConfirmation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.DeletionConfirmation;

                /**
                 * Decodes a DeletionConfirmation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DeletionConfirmation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.DeletionConfirmation;

                /**
                 * Verifies a DeletionConfirmation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DeletionConfirmation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DeletionConfirmation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.DeletionConfirmation;

                /**
                 * Creates a plain object from a DeletionConfirmation message. Also converts values to other types if specified.
                 * @param message DeletionConfirmation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.DeletionConfirmation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DeletionConfirmation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DeletionConfirmation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PrivacyDHTEntry. */
            interface IPrivacyDHTEntry {

                /** PrivacyDHTEntry entryId */
                entryId?: (string|null);

                /** PrivacyDHTEntry entryType */
                entryType?: (juicetokens.trust.privacy.PrivacyDHTEntry.EntryType|null);

                /** PrivacyDHTEntry encryptedData */
                encryptedData?: (Uint8Array|null);

                /** PrivacyDHTEntry subjectId */
                subjectId?: (string|null);

                /** PrivacyDHTEntry timestampMs */
                timestampMs?: (number|Long|null);

                /** PrivacyDHTEntry signature */
                signature?: (Uint8Array|null);

                /** PrivacyDHTEntry dhtEntryType */
                dhtEntryType?: (string|null);
            }

            /** Represents a PrivacyDHTEntry. */
            class PrivacyDHTEntry implements IPrivacyDHTEntry {

                /**
                 * Constructs a new PrivacyDHTEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IPrivacyDHTEntry);

                /** PrivacyDHTEntry entryId. */
                public entryId: string;

                /** PrivacyDHTEntry entryType. */
                public entryType: juicetokens.trust.privacy.PrivacyDHTEntry.EntryType;

                /** PrivacyDHTEntry encryptedData. */
                public encryptedData: Uint8Array;

                /** PrivacyDHTEntry subjectId. */
                public subjectId: string;

                /** PrivacyDHTEntry timestampMs. */
                public timestampMs: (number|Long);

                /** PrivacyDHTEntry signature. */
                public signature: Uint8Array;

                /** PrivacyDHTEntry dhtEntryType. */
                public dhtEntryType: string;

                /**
                 * Creates a new PrivacyDHTEntry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PrivacyDHTEntry instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IPrivacyDHTEntry): juicetokens.trust.privacy.PrivacyDHTEntry;

                /**
                 * Encodes the specified PrivacyDHTEntry message. Does not implicitly {@link juicetokens.trust.privacy.PrivacyDHTEntry.verify|verify} messages.
                 * @param message PrivacyDHTEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IPrivacyDHTEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PrivacyDHTEntry message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.PrivacyDHTEntry.verify|verify} messages.
                 * @param message PrivacyDHTEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IPrivacyDHTEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PrivacyDHTEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PrivacyDHTEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.PrivacyDHTEntry;

                /**
                 * Decodes a PrivacyDHTEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PrivacyDHTEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.PrivacyDHTEntry;

                /**
                 * Verifies a PrivacyDHTEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PrivacyDHTEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PrivacyDHTEntry
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.PrivacyDHTEntry;

                /**
                 * Creates a plain object from a PrivacyDHTEntry message. Also converts values to other types if specified.
                 * @param message PrivacyDHTEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.PrivacyDHTEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PrivacyDHTEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PrivacyDHTEntry
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace PrivacyDHTEntry {

                /** EntryType enum. */
                enum EntryType {
                    ENCRYPTED_CONSENT = 0,
                    PROOF_OF_DELETION = 1,
                    PRIVACY_PREFERENCE = 2,
                    REVOCATION_RECORD = 3
                }
            }

            /** Properties of a PrivacyChainEntry. */
            interface IPrivacyChainEntry {

                /** PrivacyChainEntry subjectId */
                subjectId?: (string|null);

                /** PrivacyChainEntry eventType */
                eventType?: (juicetokens.trust.privacy.PrivacyChainEntry.PrivacyEventType|null);

                /** PrivacyChainEntry referenceId */
                referenceId?: (string|null);

                /** PrivacyChainEntry counterpartyId */
                counterpartyId?: (string|null);

                /** PrivacyChainEntry sequenceNumber */
                sequenceNumber?: (number|Long|null);

                /** PrivacyChainEntry timestampMs */
                timestampMs?: (number|Long|null);

                /** PrivacyChainEntry entryType */
                entryType?: (string|null);

                /** PrivacyChainEntry dhtKey */
                dhtKey?: (Uint8Array|null);

                /** PrivacyChainEntry entryHash */
                entryHash?: (Uint8Array|null);
            }

            /** Represents a PrivacyChainEntry. */
            class PrivacyChainEntry implements IPrivacyChainEntry {

                /**
                 * Constructs a new PrivacyChainEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IPrivacyChainEntry);

                /** PrivacyChainEntry subjectId. */
                public subjectId: string;

                /** PrivacyChainEntry eventType. */
                public eventType: juicetokens.trust.privacy.PrivacyChainEntry.PrivacyEventType;

                /** PrivacyChainEntry referenceId. */
                public referenceId: string;

                /** PrivacyChainEntry counterpartyId. */
                public counterpartyId: string;

                /** PrivacyChainEntry sequenceNumber. */
                public sequenceNumber: (number|Long);

                /** PrivacyChainEntry timestampMs. */
                public timestampMs: (number|Long);

                /** PrivacyChainEntry entryType. */
                public entryType: string;

                /** PrivacyChainEntry dhtKey. */
                public dhtKey: Uint8Array;

                /** PrivacyChainEntry entryHash. */
                public entryHash: Uint8Array;

                /**
                 * Creates a new PrivacyChainEntry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PrivacyChainEntry instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IPrivacyChainEntry): juicetokens.trust.privacy.PrivacyChainEntry;

                /**
                 * Encodes the specified PrivacyChainEntry message. Does not implicitly {@link juicetokens.trust.privacy.PrivacyChainEntry.verify|verify} messages.
                 * @param message PrivacyChainEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IPrivacyChainEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PrivacyChainEntry message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.PrivacyChainEntry.verify|verify} messages.
                 * @param message PrivacyChainEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IPrivacyChainEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PrivacyChainEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PrivacyChainEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.PrivacyChainEntry;

                /**
                 * Decodes a PrivacyChainEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PrivacyChainEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.PrivacyChainEntry;

                /**
                 * Verifies a PrivacyChainEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PrivacyChainEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PrivacyChainEntry
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.PrivacyChainEntry;

                /**
                 * Creates a plain object from a PrivacyChainEntry message. Also converts values to other types if specified.
                 * @param message PrivacyChainEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.PrivacyChainEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PrivacyChainEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PrivacyChainEntry
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace PrivacyChainEntry {

                /** PrivacyEventType enum. */
                enum PrivacyEventType {
                    CONSENT_GIVEN = 0,
                    CONSENT_RECEIVED = 1,
                    CONSENT_REVOKED = 2,
                    PRIVACY_UPDATED = 3,
                    DATA_DELETED = 4,
                    ACCESS_GRANTED = 5,
                    ACCESS_REVOKED = 6
                }
            }

            /** Properties of an AccessPolicy. */
            interface IAccessPolicy {

                /** AccessPolicy policyId */
                policyId?: (string|null);

                /** AccessPolicy attributeName */
                attributeName?: (string|null);

                /** AccessPolicy rules */
                rules?: (juicetokens.trust.privacy.IAccessRule[]|null);

                /** AccessPolicy defaultDeny */
                defaultDeny?: (boolean|null);

                /** AccessPolicy subjectId */
                subjectId?: (string|null);

                /** AccessPolicy lastUpdatedMs */
                lastUpdatedMs?: (number|Long|null);

                /** AccessPolicy policySignature */
                policySignature?: (Uint8Array|null);
            }

            /** Represents an AccessPolicy. */
            class AccessPolicy implements IAccessPolicy {

                /**
                 * Constructs a new AccessPolicy.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IAccessPolicy);

                /** AccessPolicy policyId. */
                public policyId: string;

                /** AccessPolicy attributeName. */
                public attributeName: string;

                /** AccessPolicy rules. */
                public rules: juicetokens.trust.privacy.IAccessRule[];

                /** AccessPolicy defaultDeny. */
                public defaultDeny: boolean;

                /** AccessPolicy subjectId. */
                public subjectId: string;

                /** AccessPolicy lastUpdatedMs. */
                public lastUpdatedMs: (number|Long);

                /** AccessPolicy policySignature. */
                public policySignature: Uint8Array;

                /**
                 * Creates a new AccessPolicy instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AccessPolicy instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IAccessPolicy): juicetokens.trust.privacy.AccessPolicy;

                /**
                 * Encodes the specified AccessPolicy message. Does not implicitly {@link juicetokens.trust.privacy.AccessPolicy.verify|verify} messages.
                 * @param message AccessPolicy message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IAccessPolicy, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AccessPolicy message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.AccessPolicy.verify|verify} messages.
                 * @param message AccessPolicy message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IAccessPolicy, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AccessPolicy message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AccessPolicy
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.AccessPolicy;

                /**
                 * Decodes an AccessPolicy message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AccessPolicy
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.AccessPolicy;

                /**
                 * Verifies an AccessPolicy message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AccessPolicy message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AccessPolicy
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.AccessPolicy;

                /**
                 * Creates a plain object from an AccessPolicy message. Also converts values to other types if specified.
                 * @param message AccessPolicy
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.AccessPolicy, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AccessPolicy to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AccessPolicy
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AccessRule. */
            interface IAccessRule {

                /** AccessRule ruleId */
                ruleId?: (string|null);

                /** AccessRule effect */
                effect?: (juicetokens.trust.privacy.AccessRule.Effect|null);

                /** AccessRule conditions */
                conditions?: (juicetokens.trust.privacy.ICondition[]|null);

                /** AccessRule priority */
                priority?: (number|null);
            }

            /** Represents an AccessRule. */
            class AccessRule implements IAccessRule {

                /**
                 * Constructs a new AccessRule.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IAccessRule);

                /** AccessRule ruleId. */
                public ruleId: string;

                /** AccessRule effect. */
                public effect: juicetokens.trust.privacy.AccessRule.Effect;

                /** AccessRule conditions. */
                public conditions: juicetokens.trust.privacy.ICondition[];

                /** AccessRule priority. */
                public priority: number;

                /**
                 * Creates a new AccessRule instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AccessRule instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IAccessRule): juicetokens.trust.privacy.AccessRule;

                /**
                 * Encodes the specified AccessRule message. Does not implicitly {@link juicetokens.trust.privacy.AccessRule.verify|verify} messages.
                 * @param message AccessRule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IAccessRule, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AccessRule message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.AccessRule.verify|verify} messages.
                 * @param message AccessRule message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IAccessRule, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AccessRule message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AccessRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.AccessRule;

                /**
                 * Decodes an AccessRule message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AccessRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.AccessRule;

                /**
                 * Verifies an AccessRule message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AccessRule message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AccessRule
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.AccessRule;

                /**
                 * Creates a plain object from an AccessRule message. Also converts values to other types if specified.
                 * @param message AccessRule
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.AccessRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AccessRule to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AccessRule
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace AccessRule {

                /** Effect enum. */
                enum Effect {
                    ALLOW = 0,
                    DENY = 1
                }
            }

            /** Properties of a Condition. */
            interface ICondition {

                /** Condition conditionId */
                conditionId?: (string|null);

                /** Condition conditionType */
                conditionType?: (juicetokens.trust.privacy.Condition.ConditionType|null);

                /** Condition conditionParameters */
                conditionParameters?: (Uint8Array|null);
            }

            /** Represents a Condition. */
            class Condition implements ICondition {

                /**
                 * Constructs a new Condition.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.ICondition);

                /** Condition conditionId. */
                public conditionId: string;

                /** Condition conditionType. */
                public conditionType: juicetokens.trust.privacy.Condition.ConditionType;

                /** Condition conditionParameters. */
                public conditionParameters: Uint8Array;

                /**
                 * Creates a new Condition instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Condition instance
                 */
                public static create(properties?: juicetokens.trust.privacy.ICondition): juicetokens.trust.privacy.Condition;

                /**
                 * Encodes the specified Condition message. Does not implicitly {@link juicetokens.trust.privacy.Condition.verify|verify} messages.
                 * @param message Condition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.ICondition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Condition message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.Condition.verify|verify} messages.
                 * @param message Condition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.ICondition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Condition message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Condition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.Condition;

                /**
                 * Decodes a Condition message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Condition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.Condition;

                /**
                 * Verifies a Condition message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Condition message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Condition
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.Condition;

                /**
                 * Creates a plain object from a Condition message. Also converts values to other types if specified.
                 * @param message Condition
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.Condition, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Condition to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for Condition
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace Condition {

                /** ConditionType enum. */
                enum ConditionType {
                    IDENTITY = 0,
                    GROUP = 1,
                    TIME = 2,
                    LOCATION = 3,
                    PURPOSE = 4,
                    ATTRIBUTE = 5,
                    CONJUNCTION = 6,
                    DISJUNCTION = 7
                }
            }

            /** Properties of an AccessRequest. */
            interface IAccessRequest {

                /** AccessRequest requestId */
                requestId?: (string|null);

                /** AccessRequest requesterId */
                requesterId?: (string|null);

                /** AccessRequest subjectId */
                subjectId?: (string|null);

                /** AccessRequest requestedAttributes */
                requestedAttributes?: (string[]|null);

                /** AccessRequest purpose */
                purpose?: (string|null);

                /** AccessRequest context */
                context?: (string|null);

                /** AccessRequest requestTimestampMs */
                requestTimestampMs?: (number|Long|null);

                /** AccessRequest requestSignature */
                requestSignature?: (Uint8Array|null);
            }

            /** Represents an AccessRequest. */
            class AccessRequest implements IAccessRequest {

                /**
                 * Constructs a new AccessRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IAccessRequest);

                /** AccessRequest requestId. */
                public requestId: string;

                /** AccessRequest requesterId. */
                public requesterId: string;

                /** AccessRequest subjectId. */
                public subjectId: string;

                /** AccessRequest requestedAttributes. */
                public requestedAttributes: string[];

                /** AccessRequest purpose. */
                public purpose: string;

                /** AccessRequest context. */
                public context: string;

                /** AccessRequest requestTimestampMs. */
                public requestTimestampMs: (number|Long);

                /** AccessRequest requestSignature. */
                public requestSignature: Uint8Array;

                /**
                 * Creates a new AccessRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AccessRequest instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IAccessRequest): juicetokens.trust.privacy.AccessRequest;

                /**
                 * Encodes the specified AccessRequest message. Does not implicitly {@link juicetokens.trust.privacy.AccessRequest.verify|verify} messages.
                 * @param message AccessRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IAccessRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AccessRequest message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.AccessRequest.verify|verify} messages.
                 * @param message AccessRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IAccessRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AccessRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AccessRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.AccessRequest;

                /**
                 * Decodes an AccessRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AccessRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.AccessRequest;

                /**
                 * Verifies an AccessRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AccessRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AccessRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.AccessRequest;

                /**
                 * Creates a plain object from an AccessRequest message. Also converts values to other types if specified.
                 * @param message AccessRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.AccessRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AccessRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AccessRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an AccessResponse. */
            interface IAccessResponse {

                /** AccessResponse requestId */
                requestId?: (string|null);

                /** AccessResponse decision */
                decision?: (juicetokens.trust.privacy.AccessResponse.AccessDecision|null);

                /** AccessResponse grantedAttributes */
                grantedAttributes?: (string[]|null);

                /** AccessResponse responseTimestampMs */
                responseTimestampMs?: (number|Long|null);

                /** AccessResponse accessExpiryMs */
                accessExpiryMs?: (number|Long|null);

                /** AccessResponse responseSignature */
                responseSignature?: (Uint8Array|null);
            }

            /** Represents an AccessResponse. */
            class AccessResponse implements IAccessResponse {

                /**
                 * Constructs a new AccessResponse.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IAccessResponse);

                /** AccessResponse requestId. */
                public requestId: string;

                /** AccessResponse decision. */
                public decision: juicetokens.trust.privacy.AccessResponse.AccessDecision;

                /** AccessResponse grantedAttributes. */
                public grantedAttributes: string[];

                /** AccessResponse responseTimestampMs. */
                public responseTimestampMs: (number|Long);

                /** AccessResponse accessExpiryMs. */
                public accessExpiryMs: (number|Long);

                /** AccessResponse responseSignature. */
                public responseSignature: Uint8Array;

                /**
                 * Creates a new AccessResponse instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns AccessResponse instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IAccessResponse): juicetokens.trust.privacy.AccessResponse;

                /**
                 * Encodes the specified AccessResponse message. Does not implicitly {@link juicetokens.trust.privacy.AccessResponse.verify|verify} messages.
                 * @param message AccessResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IAccessResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified AccessResponse message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.AccessResponse.verify|verify} messages.
                 * @param message AccessResponse message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IAccessResponse, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an AccessResponse message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns AccessResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.AccessResponse;

                /**
                 * Decodes an AccessResponse message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns AccessResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.AccessResponse;

                /**
                 * Verifies an AccessResponse message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an AccessResponse message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns AccessResponse
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.AccessResponse;

                /**
                 * Creates a plain object from an AccessResponse message. Also converts values to other types if specified.
                 * @param message AccessResponse
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.AccessResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this AccessResponse to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for AccessResponse
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace AccessResponse {

                /** AccessDecision enum. */
                enum AccessDecision {
                    GRANTED = 0,
                    DENIED = 1,
                    PARTIAL = 2
                }
            }

            /** Properties of an EncryptedData. */
            interface IEncryptedData {

                /** EncryptedData ciphertext */
                ciphertext?: (Uint8Array|null);

                /** EncryptedData iv */
                iv?: (Uint8Array|null);

                /** EncryptedData encryptionAlgorithm */
                encryptionAlgorithm?: (string|null);

                /** EncryptedData authenticationTag */
                authenticationTag?: (Uint8Array|null);

                /** EncryptedData keyId */
                keyId?: (string|null);

                /** EncryptedData encryptionTimestampMs */
                encryptionTimestampMs?: (number|Long|null);

                /** EncryptedData authorizedDecryptors */
                authorizedDecryptors?: (string[]|null);
            }

            /** Represents an EncryptedData. */
            class EncryptedData implements IEncryptedData {

                /**
                 * Constructs a new EncryptedData.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IEncryptedData);

                /** EncryptedData ciphertext. */
                public ciphertext: Uint8Array;

                /** EncryptedData iv. */
                public iv: Uint8Array;

                /** EncryptedData encryptionAlgorithm. */
                public encryptionAlgorithm: string;

                /** EncryptedData authenticationTag. */
                public authenticationTag: Uint8Array;

                /** EncryptedData keyId. */
                public keyId: string;

                /** EncryptedData encryptionTimestampMs. */
                public encryptionTimestampMs: (number|Long);

                /** EncryptedData authorizedDecryptors. */
                public authorizedDecryptors: string[];

                /**
                 * Creates a new EncryptedData instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns EncryptedData instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IEncryptedData): juicetokens.trust.privacy.EncryptedData;

                /**
                 * Encodes the specified EncryptedData message. Does not implicitly {@link juicetokens.trust.privacy.EncryptedData.verify|verify} messages.
                 * @param message EncryptedData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IEncryptedData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EncryptedData message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.EncryptedData.verify|verify} messages.
                 * @param message EncryptedData message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IEncryptedData, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EncryptedData message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EncryptedData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.EncryptedData;

                /**
                 * Decodes an EncryptedData message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EncryptedData
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.EncryptedData;

                /**
                 * Verifies an EncryptedData message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EncryptedData message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EncryptedData
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.EncryptedData;

                /**
                 * Creates a plain object from an EncryptedData message. Also converts values to other types if specified.
                 * @param message EncryptedData
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.EncryptedData, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EncryptedData to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for EncryptedData
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a KeySharingRecord. */
            interface IKeySharingRecord {

                /** KeySharingRecord recordId */
                recordId?: (string|null);

                /** KeySharingRecord keyId */
                keyId?: (string|null);

                /** KeySharingRecord ownerId */
                ownerId?: (string|null);

                /** KeySharingRecord recipientId */
                recipientId?: (string|null);

                /** KeySharingRecord encryptedKey */
                encryptedKey?: (Uint8Array|null);

                /** KeySharingRecord encryptionMethod */
                encryptionMethod?: (string|null);

                /** KeySharingRecord sharingTimestampMs */
                sharingTimestampMs?: (number|Long|null);

                /** KeySharingRecord accessExpiryMs */
                accessExpiryMs?: (number|Long|null);

                /** KeySharingRecord sharingSignature */
                sharingSignature?: (Uint8Array|null);
            }

            /** Represents a KeySharingRecord. */
            class KeySharingRecord implements IKeySharingRecord {

                /**
                 * Constructs a new KeySharingRecord.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IKeySharingRecord);

                /** KeySharingRecord recordId. */
                public recordId: string;

                /** KeySharingRecord keyId. */
                public keyId: string;

                /** KeySharingRecord ownerId. */
                public ownerId: string;

                /** KeySharingRecord recipientId. */
                public recipientId: string;

                /** KeySharingRecord encryptedKey. */
                public encryptedKey: Uint8Array;

                /** KeySharingRecord encryptionMethod. */
                public encryptionMethod: string;

                /** KeySharingRecord sharingTimestampMs. */
                public sharingTimestampMs: (number|Long);

                /** KeySharingRecord accessExpiryMs. */
                public accessExpiryMs: (number|Long);

                /** KeySharingRecord sharingSignature. */
                public sharingSignature: Uint8Array;

                /**
                 * Creates a new KeySharingRecord instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns KeySharingRecord instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IKeySharingRecord): juicetokens.trust.privacy.KeySharingRecord;

                /**
                 * Encodes the specified KeySharingRecord message. Does not implicitly {@link juicetokens.trust.privacy.KeySharingRecord.verify|verify} messages.
                 * @param message KeySharingRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IKeySharingRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified KeySharingRecord message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.KeySharingRecord.verify|verify} messages.
                 * @param message KeySharingRecord message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IKeySharingRecord, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a KeySharingRecord message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns KeySharingRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.KeySharingRecord;

                /**
                 * Decodes a KeySharingRecord message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns KeySharingRecord
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.KeySharingRecord;

                /**
                 * Verifies a KeySharingRecord message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a KeySharingRecord message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns KeySharingRecord
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.KeySharingRecord;

                /**
                 * Creates a plain object from a KeySharingRecord message. Also converts values to other types if specified.
                 * @param message KeySharingRecord
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.KeySharingRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this KeySharingRecord to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for KeySharingRecord
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PrivacyEventLog. */
            interface IPrivacyEventLog {

                /** PrivacyEventLog logId */
                logId?: (string|null);

                /** PrivacyEventLog subjectId */
                subjectId?: (string|null);

                /** PrivacyEventLog eventType */
                eventType?: (juicetokens.trust.privacy.PrivacyEventLog.EventType|null);

                /** PrivacyEventLog eventDescription */
                eventDescription?: (string|null);

                /** PrivacyEventLog actorId */
                actorId?: (string|null);

                /** PrivacyEventLog eventTimestampMs */
                eventTimestampMs?: (number|Long|null);

                /** PrivacyEventLog referenceId */
                referenceId?: (string|null);

                /** PrivacyEventLog evidence */
                evidence?: (Uint8Array|null);

                /** PrivacyEventLog eventMetadata */
                eventMetadata?: ({ [k: string]: string }|null);
            }

            /** Represents a PrivacyEventLog. */
            class PrivacyEventLog implements IPrivacyEventLog {

                /**
                 * Constructs a new PrivacyEventLog.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.privacy.IPrivacyEventLog);

                /** PrivacyEventLog logId. */
                public logId: string;

                /** PrivacyEventLog subjectId. */
                public subjectId: string;

                /** PrivacyEventLog eventType. */
                public eventType: juicetokens.trust.privacy.PrivacyEventLog.EventType;

                /** PrivacyEventLog eventDescription. */
                public eventDescription: string;

                /** PrivacyEventLog actorId. */
                public actorId: string;

                /** PrivacyEventLog eventTimestampMs. */
                public eventTimestampMs: (number|Long);

                /** PrivacyEventLog referenceId. */
                public referenceId: string;

                /** PrivacyEventLog evidence. */
                public evidence: Uint8Array;

                /** PrivacyEventLog eventMetadata. */
                public eventMetadata: { [k: string]: string };

                /**
                 * Creates a new PrivacyEventLog instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PrivacyEventLog instance
                 */
                public static create(properties?: juicetokens.trust.privacy.IPrivacyEventLog): juicetokens.trust.privacy.PrivacyEventLog;

                /**
                 * Encodes the specified PrivacyEventLog message. Does not implicitly {@link juicetokens.trust.privacy.PrivacyEventLog.verify|verify} messages.
                 * @param message PrivacyEventLog message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.privacy.IPrivacyEventLog, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PrivacyEventLog message, length delimited. Does not implicitly {@link juicetokens.trust.privacy.PrivacyEventLog.verify|verify} messages.
                 * @param message PrivacyEventLog message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.privacy.IPrivacyEventLog, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PrivacyEventLog message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PrivacyEventLog
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.privacy.PrivacyEventLog;

                /**
                 * Decodes a PrivacyEventLog message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PrivacyEventLog
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.privacy.PrivacyEventLog;

                /**
                 * Verifies a PrivacyEventLog message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PrivacyEventLog message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PrivacyEventLog
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.privacy.PrivacyEventLog;

                /**
                 * Creates a plain object from a PrivacyEventLog message. Also converts values to other types if specified.
                 * @param message PrivacyEventLog
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.privacy.PrivacyEventLog, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PrivacyEventLog to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PrivacyEventLog
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace PrivacyEventLog {

                /** EventType enum. */
                enum EventType {
                    CONSENT_CHANGE = 0,
                    ACCESS_ATTEMPT = 1,
                    DATA_TRANSFER = 2,
                    POLICY_CHANGE = 3,
                    KEY_ROTATION = 4,
                    DELETION = 5
                }
            }
        }

        /** Namespace reputation. */
        namespace reputation {

            /** Properties of a ReputationMetric. */
            interface IReputationMetric {

                /** ReputationMetric metricId */
                metricId?: (string|null);

                /** ReputationMetric name */
                name?: (string|null);

                /** ReputationMetric description */
                description?: (string|null);

                /** ReputationMetric value */
                value?: (number|null);

                /** ReputationMetric confidence */
                confidence?: (number|null);

                /** ReputationMetric contributingAttestations */
                contributingAttestations?: (string[]|null);
            }

            /** Represents a ReputationMetric. */
            class ReputationMetric implements IReputationMetric {

                /**
                 * Constructs a new ReputationMetric.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IReputationMetric);

                /** ReputationMetric metricId. */
                public metricId: string;

                /** ReputationMetric name. */
                public name: string;

                /** ReputationMetric description. */
                public description: string;

                /** ReputationMetric value. */
                public value: number;

                /** ReputationMetric confidence. */
                public confidence: number;

                /** ReputationMetric contributingAttestations. */
                public contributingAttestations: string[];

                /**
                 * Creates a new ReputationMetric instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReputationMetric instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IReputationMetric): juicetokens.trust.reputation.ReputationMetric;

                /**
                 * Encodes the specified ReputationMetric message. Does not implicitly {@link juicetokens.trust.reputation.ReputationMetric.verify|verify} messages.
                 * @param message ReputationMetric message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IReputationMetric, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReputationMetric message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ReputationMetric.verify|verify} messages.
                 * @param message ReputationMetric message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IReputationMetric, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReputationMetric message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReputationMetric
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ReputationMetric;

                /**
                 * Decodes a ReputationMetric message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReputationMetric
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ReputationMetric;

                /**
                 * Verifies a ReputationMetric message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReputationMetric message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReputationMetric
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ReputationMetric;

                /**
                 * Creates a plain object from a ReputationMetric message. Also converts values to other types if specified.
                 * @param message ReputationMetric
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.ReputationMetric, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReputationMetric to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ReputationMetric
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ReliabilityScore. */
            interface IReliabilityScore {

                /** ReliabilityScore successfulTransactionsRate */
                successfulTransactionsRate?: (number|null);

                /** ReliabilityScore onTimeCompletionRate */
                onTimeCompletionRate?: (number|null);

                /** ReliabilityScore averageResponseTimeSeconds */
                averageResponseTimeSeconds?: (number|null);

                /** ReliabilityScore transactionCount */
                transactionCount?: (number|null);

                /** ReliabilityScore score */
                score?: (number|null);
            }

            /** Represents a ReliabilityScore. */
            class ReliabilityScore implements IReliabilityScore {

                /**
                 * Constructs a new ReliabilityScore.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IReliabilityScore);

                /** ReliabilityScore successfulTransactionsRate. */
                public successfulTransactionsRate: number;

                /** ReliabilityScore onTimeCompletionRate. */
                public onTimeCompletionRate: number;

                /** ReliabilityScore averageResponseTimeSeconds. */
                public averageResponseTimeSeconds: number;

                /** ReliabilityScore transactionCount. */
                public transactionCount: number;

                /** ReliabilityScore score. */
                public score: number;

                /**
                 * Creates a new ReliabilityScore instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReliabilityScore instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IReliabilityScore): juicetokens.trust.reputation.ReliabilityScore;

                /**
                 * Encodes the specified ReliabilityScore message. Does not implicitly {@link juicetokens.trust.reputation.ReliabilityScore.verify|verify} messages.
                 * @param message ReliabilityScore message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IReliabilityScore, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReliabilityScore message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ReliabilityScore.verify|verify} messages.
                 * @param message ReliabilityScore message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IReliabilityScore, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReliabilityScore message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReliabilityScore
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ReliabilityScore;

                /**
                 * Decodes a ReliabilityScore message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReliabilityScore
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ReliabilityScore;

                /**
                 * Verifies a ReliabilityScore message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReliabilityScore message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReliabilityScore
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ReliabilityScore;

                /**
                 * Creates a plain object from a ReliabilityScore message. Also converts values to other types if specified.
                 * @param message ReliabilityScore
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.ReliabilityScore, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReliabilityScore to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ReliabilityScore
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ContributionScore. */
            interface IContributionScore {

                /** ContributionScore renewalFacilitationRate */
                renewalFacilitationRate?: (number|null);

                /** ContributionScore attestationContributionRate */
                attestationContributionRate?: (number|null);

                /** ContributionScore networkRelayContribution */
                networkRelayContribution?: (number|null);

                /** ContributionScore contributionCount */
                contributionCount?: (number|null);

                /** ContributionScore score */
                score?: (number|null);
            }

            /** Represents a ContributionScore. */
            class ContributionScore implements IContributionScore {

                /**
                 * Constructs a new ContributionScore.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IContributionScore);

                /** ContributionScore renewalFacilitationRate. */
                public renewalFacilitationRate: number;

                /** ContributionScore attestationContributionRate. */
                public attestationContributionRate: number;

                /** ContributionScore networkRelayContribution. */
                public networkRelayContribution: number;

                /** ContributionScore contributionCount. */
                public contributionCount: number;

                /** ContributionScore score. */
                public score: number;

                /**
                 * Creates a new ContributionScore instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ContributionScore instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IContributionScore): juicetokens.trust.reputation.ContributionScore;

                /**
                 * Encodes the specified ContributionScore message. Does not implicitly {@link juicetokens.trust.reputation.ContributionScore.verify|verify} messages.
                 * @param message ContributionScore message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IContributionScore, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ContributionScore message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ContributionScore.verify|verify} messages.
                 * @param message ContributionScore message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IContributionScore, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContributionScore message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ContributionScore
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ContributionScore;

                /**
                 * Decodes a ContributionScore message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ContributionScore
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ContributionScore;

                /**
                 * Verifies a ContributionScore message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ContributionScore message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ContributionScore
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ContributionScore;

                /**
                 * Creates a plain object from a ContributionScore message. Also converts values to other types if specified.
                 * @param message ContributionScore
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.ContributionScore, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ContributionScore to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ContributionScore
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ValidationScore. */
            interface IValidationScore {

                /** ValidationScore communityConsensusAlignment */
                communityConsensusAlignment?: (number|null);

                /** ValidationScore attestationVerificationRate */
                attestationVerificationRate?: (number|null);

                /** ValidationScore falseAttestationRate */
                falseAttestationRate?: (number|null);

                /** ValidationScore validationCount */
                validationCount?: (number|null);

                /** ValidationScore score */
                score?: (number|null);
            }

            /** Represents a ValidationScore. */
            class ValidationScore implements IValidationScore {

                /**
                 * Constructs a new ValidationScore.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IValidationScore);

                /** ValidationScore communityConsensusAlignment. */
                public communityConsensusAlignment: number;

                /** ValidationScore attestationVerificationRate. */
                public attestationVerificationRate: number;

                /** ValidationScore falseAttestationRate. */
                public falseAttestationRate: number;

                /** ValidationScore validationCount. */
                public validationCount: number;

                /** ValidationScore score. */
                public score: number;

                /**
                 * Creates a new ValidationScore instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ValidationScore instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IValidationScore): juicetokens.trust.reputation.ValidationScore;

                /**
                 * Encodes the specified ValidationScore message. Does not implicitly {@link juicetokens.trust.reputation.ValidationScore.verify|verify} messages.
                 * @param message ValidationScore message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IValidationScore, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ValidationScore message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ValidationScore.verify|verify} messages.
                 * @param message ValidationScore message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IValidationScore, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ValidationScore message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ValidationScore
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ValidationScore;

                /**
                 * Decodes a ValidationScore message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ValidationScore
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ValidationScore;

                /**
                 * Verifies a ValidationScore message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ValidationScore message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ValidationScore
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ValidationScore;

                /**
                 * Creates a plain object from a ValidationScore message. Also converts values to other types if specified.
                 * @param message ValidationScore
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.ValidationScore, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ValidationScore to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ValidationScore
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ReputationProfile. */
            interface IReputationProfile {

                /** ReputationProfile userId */
                userId?: (string|null);

                /** ReputationProfile reliability */
                reliability?: (juicetokens.trust.reputation.IReliabilityScore|null);

                /** ReputationProfile contribution */
                contribution?: (juicetokens.trust.reputation.IContributionScore|null);

                /** ReputationProfile validation */
                validation?: (juicetokens.trust.reputation.IValidationScore|null);

                /** ReputationProfile customMetrics */
                customMetrics?: (juicetokens.trust.reputation.IReputationMetric[]|null);

                /** ReputationProfile lastUpdatedMs */
                lastUpdatedMs?: (number|Long|null);

                /** ReputationProfile profileHash */
                profileHash?: (Uint8Array|null);
            }

            /** Represents a ReputationProfile. */
            class ReputationProfile implements IReputationProfile {

                /**
                 * Constructs a new ReputationProfile.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IReputationProfile);

                /** ReputationProfile userId. */
                public userId: string;

                /** ReputationProfile reliability. */
                public reliability?: (juicetokens.trust.reputation.IReliabilityScore|null);

                /** ReputationProfile contribution. */
                public contribution?: (juicetokens.trust.reputation.IContributionScore|null);

                /** ReputationProfile validation. */
                public validation?: (juicetokens.trust.reputation.IValidationScore|null);

                /** ReputationProfile customMetrics. */
                public customMetrics: juicetokens.trust.reputation.IReputationMetric[];

                /** ReputationProfile lastUpdatedMs. */
                public lastUpdatedMs: (number|Long);

                /** ReputationProfile profileHash. */
                public profileHash: Uint8Array;

                /**
                 * Creates a new ReputationProfile instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReputationProfile instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IReputationProfile): juicetokens.trust.reputation.ReputationProfile;

                /**
                 * Encodes the specified ReputationProfile message. Does not implicitly {@link juicetokens.trust.reputation.ReputationProfile.verify|verify} messages.
                 * @param message ReputationProfile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IReputationProfile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReputationProfile message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ReputationProfile.verify|verify} messages.
                 * @param message ReputationProfile message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IReputationProfile, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReputationProfile message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReputationProfile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ReputationProfile;

                /**
                 * Decodes a ReputationProfile message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReputationProfile
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ReputationProfile;

                /**
                 * Verifies a ReputationProfile message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReputationProfile message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReputationProfile
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ReputationProfile;

                /**
                 * Creates a plain object from a ReputationProfile message. Also converts values to other types if specified.
                 * @param message ReputationProfile
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.ReputationProfile, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReputationProfile to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ReputationProfile
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an EnvironmentalContext. */
            interface IEnvironmentalContext {

                /** EnvironmentalContext crisisMode */
                crisisMode?: (boolean|null);

                /** EnvironmentalContext crisisType */
                crisisType?: (string|null);

                /** EnvironmentalContext severity */
                severity?: (number|null);

                /** EnvironmentalContext detectedAtMs */
                detectedAtMs?: (number|Long|null);

                /** EnvironmentalContext adjustedThresholds */
                adjustedThresholds?: ({ [k: string]: number }|null);
            }

            /** Represents an EnvironmentalContext. */
            class EnvironmentalContext implements IEnvironmentalContext {

                /**
                 * Constructs a new EnvironmentalContext.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IEnvironmentalContext);

                /** EnvironmentalContext crisisMode. */
                public crisisMode: boolean;

                /** EnvironmentalContext crisisType. */
                public crisisType: string;

                /** EnvironmentalContext severity. */
                public severity: number;

                /** EnvironmentalContext detectedAtMs. */
                public detectedAtMs: (number|Long);

                /** EnvironmentalContext adjustedThresholds. */
                public adjustedThresholds: { [k: string]: number };

                /**
                 * Creates a new EnvironmentalContext instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns EnvironmentalContext instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IEnvironmentalContext): juicetokens.trust.reputation.EnvironmentalContext;

                /**
                 * Encodes the specified EnvironmentalContext message. Does not implicitly {@link juicetokens.trust.reputation.EnvironmentalContext.verify|verify} messages.
                 * @param message EnvironmentalContext message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IEnvironmentalContext, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EnvironmentalContext message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.EnvironmentalContext.verify|verify} messages.
                 * @param message EnvironmentalContext message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IEnvironmentalContext, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EnvironmentalContext message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EnvironmentalContext
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.EnvironmentalContext;

                /**
                 * Decodes an EnvironmentalContext message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EnvironmentalContext
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.EnvironmentalContext;

                /**
                 * Verifies an EnvironmentalContext message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EnvironmentalContext message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EnvironmentalContext
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.EnvironmentalContext;

                /**
                 * Creates a plain object from an EnvironmentalContext message. Also converts values to other types if specified.
                 * @param message EnvironmentalContext
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.EnvironmentalContext, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EnvironmentalContext to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for EnvironmentalContext
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a GeographicContext. */
            interface IGeographicContext {

                /** GeographicContext s2CellId */
                s2CellId?: (string|null);

                /** GeographicContext regionName */
                regionName?: (string|null);

                /** GeographicContext populationDensity */
                populationDensity?: (number|null);

                /** GeographicContext connectivityIndex */
                connectivityIndex?: (number|null);

                /** GeographicContext regionalFactors */
                regionalFactors?: ({ [k: string]: number }|null);
            }

            /** Represents a GeographicContext. */
            class GeographicContext implements IGeographicContext {

                /**
                 * Constructs a new GeographicContext.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IGeographicContext);

                /** GeographicContext s2CellId. */
                public s2CellId: string;

                /** GeographicContext regionName. */
                public regionName: string;

                /** GeographicContext populationDensity. */
                public populationDensity: number;

                /** GeographicContext connectivityIndex. */
                public connectivityIndex: number;

                /** GeographicContext regionalFactors. */
                public regionalFactors: { [k: string]: number };

                /**
                 * Creates a new GeographicContext instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GeographicContext instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IGeographicContext): juicetokens.trust.reputation.GeographicContext;

                /**
                 * Encodes the specified GeographicContext message. Does not implicitly {@link juicetokens.trust.reputation.GeographicContext.verify|verify} messages.
                 * @param message GeographicContext message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IGeographicContext, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GeographicContext message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.GeographicContext.verify|verify} messages.
                 * @param message GeographicContext message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IGeographicContext, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GeographicContext message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GeographicContext
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.GeographicContext;

                /**
                 * Decodes a GeographicContext message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GeographicContext
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.GeographicContext;

                /**
                 * Verifies a GeographicContext message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GeographicContext message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GeographicContext
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.GeographicContext;

                /**
                 * Creates a plain object from a GeographicContext message. Also converts values to other types if specified.
                 * @param message GeographicContext
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.GeographicContext, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GeographicContext to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GeographicContext
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TemporalPattern. */
            interface ITemporalPattern {

                /** TemporalPattern patternType */
                patternType?: (juicetokens.trust.reputation.TemporalPattern.PatternType|null);

                /** TemporalPattern metricId */
                metricId?: (string|null);

                /** TemporalPattern significance */
                significance?: (number|null);

                /** TemporalPattern description */
                description?: (string|null);

                /** TemporalPattern temporalAdjustmentFactors */
                temporalAdjustmentFactors?: ({ [k: string]: number }|null);
            }

            /** Represents a TemporalPattern. */
            class TemporalPattern implements ITemporalPattern {

                /**
                 * Constructs a new TemporalPattern.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.ITemporalPattern);

                /** TemporalPattern patternType. */
                public patternType: juicetokens.trust.reputation.TemporalPattern.PatternType;

                /** TemporalPattern metricId. */
                public metricId: string;

                /** TemporalPattern significance. */
                public significance: number;

                /** TemporalPattern description. */
                public description: string;

                /** TemporalPattern temporalAdjustmentFactors. */
                public temporalAdjustmentFactors: { [k: string]: number };

                /**
                 * Creates a new TemporalPattern instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TemporalPattern instance
                 */
                public static create(properties?: juicetokens.trust.reputation.ITemporalPattern): juicetokens.trust.reputation.TemporalPattern;

                /**
                 * Encodes the specified TemporalPattern message. Does not implicitly {@link juicetokens.trust.reputation.TemporalPattern.verify|verify} messages.
                 * @param message TemporalPattern message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.ITemporalPattern, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TemporalPattern message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.TemporalPattern.verify|verify} messages.
                 * @param message TemporalPattern message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.ITemporalPattern, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TemporalPattern message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TemporalPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.TemporalPattern;

                /**
                 * Decodes a TemporalPattern message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TemporalPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.TemporalPattern;

                /**
                 * Verifies a TemporalPattern message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TemporalPattern message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TemporalPattern
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.TemporalPattern;

                /**
                 * Creates a plain object from a TemporalPattern message. Also converts values to other types if specified.
                 * @param message TemporalPattern
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.TemporalPattern, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TemporalPattern to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TemporalPattern
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace TemporalPattern {

                /** PatternType enum. */
                enum PatternType {
                    CYCLICAL = 0,
                    TREND = 1,
                    SEASONAL = 2,
                    EVENT = 3
                }
            }

            /** Properties of a ContextualAdjustment. */
            interface IContextualAdjustment {

                /** ContextualAdjustment metricId */
                metricId?: (string|null);

                /** ContextualAdjustment baseValue */
                baseValue?: (number|null);

                /** ContextualAdjustment adjustedValue */
                adjustedValue?: (number|null);

                /** ContextualAdjustment adjustmentFactors */
                adjustmentFactors?: ({ [k: string]: number }|null);

                /** ContextualAdjustment adjustmentRationale */
                adjustmentRationale?: (string|null);
            }

            /** Represents a ContextualAdjustment. */
            class ContextualAdjustment implements IContextualAdjustment {

                /**
                 * Constructs a new ContextualAdjustment.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IContextualAdjustment);

                /** ContextualAdjustment metricId. */
                public metricId: string;

                /** ContextualAdjustment baseValue. */
                public baseValue: number;

                /** ContextualAdjustment adjustedValue. */
                public adjustedValue: number;

                /** ContextualAdjustment adjustmentFactors. */
                public adjustmentFactors: { [k: string]: number };

                /** ContextualAdjustment adjustmentRationale. */
                public adjustmentRationale: string;

                /**
                 * Creates a new ContextualAdjustment instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ContextualAdjustment instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IContextualAdjustment): juicetokens.trust.reputation.ContextualAdjustment;

                /**
                 * Encodes the specified ContextualAdjustment message. Does not implicitly {@link juicetokens.trust.reputation.ContextualAdjustment.verify|verify} messages.
                 * @param message ContextualAdjustment message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IContextualAdjustment, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ContextualAdjustment message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ContextualAdjustment.verify|verify} messages.
                 * @param message ContextualAdjustment message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IContextualAdjustment, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ContextualAdjustment message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ContextualAdjustment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ContextualAdjustment;

                /**
                 * Decodes a ContextualAdjustment message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ContextualAdjustment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ContextualAdjustment;

                /**
                 * Verifies a ContextualAdjustment message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ContextualAdjustment message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ContextualAdjustment
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ContextualAdjustment;

                /**
                 * Creates a plain object from a ContextualAdjustment message. Also converts values to other types if specified.
                 * @param message ContextualAdjustment
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.ContextualAdjustment, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ContextualAdjustment to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ContextualAdjustment
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ReputationUpdate. */
            interface IReputationUpdate {

                /** ReputationUpdate userId */
                userId?: (string|null);

                /** ReputationUpdate updateSource */
                updateSource?: (string|null);

                /** ReputationUpdate updateType */
                updateType?: (juicetokens.trust.reputation.ReputationUpdate.UpdateType|null);

                /** ReputationUpdate metricId */
                metricId?: (string|null);

                /** ReputationUpdate oldValue */
                oldValue?: (number|null);

                /** ReputationUpdate newValue */
                newValue?: (number|null);

                /** ReputationUpdate confidence */
                confidence?: (number|null);

                /** ReputationUpdate evidenceIds */
                evidenceIds?: (string[]|null);

                /** ReputationUpdate timestampMs */
                timestampMs?: (number|Long|null);
            }

            /** Represents a ReputationUpdate. */
            class ReputationUpdate implements IReputationUpdate {

                /**
                 * Constructs a new ReputationUpdate.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IReputationUpdate);

                /** ReputationUpdate userId. */
                public userId: string;

                /** ReputationUpdate updateSource. */
                public updateSource: string;

                /** ReputationUpdate updateType. */
                public updateType: juicetokens.trust.reputation.ReputationUpdate.UpdateType;

                /** ReputationUpdate metricId. */
                public metricId: string;

                /** ReputationUpdate oldValue. */
                public oldValue: number;

                /** ReputationUpdate newValue. */
                public newValue: number;

                /** ReputationUpdate confidence. */
                public confidence: number;

                /** ReputationUpdate evidenceIds. */
                public evidenceIds: string[];

                /** ReputationUpdate timestampMs. */
                public timestampMs: (number|Long);

                /**
                 * Creates a new ReputationUpdate instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReputationUpdate instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IReputationUpdate): juicetokens.trust.reputation.ReputationUpdate;

                /**
                 * Encodes the specified ReputationUpdate message. Does not implicitly {@link juicetokens.trust.reputation.ReputationUpdate.verify|verify} messages.
                 * @param message ReputationUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IReputationUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReputationUpdate message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ReputationUpdate.verify|verify} messages.
                 * @param message ReputationUpdate message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IReputationUpdate, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReputationUpdate message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReputationUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ReputationUpdate;

                /**
                 * Decodes a ReputationUpdate message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReputationUpdate
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ReputationUpdate;

                /**
                 * Verifies a ReputationUpdate message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReputationUpdate message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReputationUpdate
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ReputationUpdate;

                /**
                 * Creates a plain object from a ReputationUpdate message. Also converts values to other types if specified.
                 * @param message ReputationUpdate
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.ReputationUpdate, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReputationUpdate to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ReputationUpdate
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace ReputationUpdate {

                /** UpdateType enum. */
                enum UpdateType {
                    TRANSACTION = 0,
                    ATTESTATION = 1,
                    NETWORK = 2,
                    MANUAL = 3,
                    PERIODIC = 4
                }
            }

            /** Properties of a ReputationHistory. */
            interface IReputationHistory {

                /** ReputationHistory userId */
                userId?: (string|null);

                /** ReputationHistory metricId */
                metricId?: (string|null);

                /** ReputationHistory historyPoints */
                historyPoints?: (juicetokens.trust.reputation.ReputationHistory.IHistoryPoint[]|null);
            }

            /** Represents a ReputationHistory. */
            class ReputationHistory implements IReputationHistory {

                /**
                 * Constructs a new ReputationHistory.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IReputationHistory);

                /** ReputationHistory userId. */
                public userId: string;

                /** ReputationHistory metricId. */
                public metricId: string;

                /** ReputationHistory historyPoints. */
                public historyPoints: juicetokens.trust.reputation.ReputationHistory.IHistoryPoint[];

                /**
                 * Creates a new ReputationHistory instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReputationHistory instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IReputationHistory): juicetokens.trust.reputation.ReputationHistory;

                /**
                 * Encodes the specified ReputationHistory message. Does not implicitly {@link juicetokens.trust.reputation.ReputationHistory.verify|verify} messages.
                 * @param message ReputationHistory message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IReputationHistory, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReputationHistory message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ReputationHistory.verify|verify} messages.
                 * @param message ReputationHistory message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IReputationHistory, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReputationHistory message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReputationHistory
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ReputationHistory;

                /**
                 * Decodes a ReputationHistory message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReputationHistory
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ReputationHistory;

                /**
                 * Verifies a ReputationHistory message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReputationHistory message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReputationHistory
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ReputationHistory;

                /**
                 * Creates a plain object from a ReputationHistory message. Also converts values to other types if specified.
                 * @param message ReputationHistory
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.ReputationHistory, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReputationHistory to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ReputationHistory
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace ReputationHistory {

                /** Properties of a HistoryPoint. */
                interface IHistoryPoint {

                    /** HistoryPoint timestampMs */
                    timestampMs?: (number|Long|null);

                    /** HistoryPoint value */
                    value?: (number|null);

                    /** HistoryPoint confidence */
                    confidence?: (number|null);

                    /** HistoryPoint evidenceId */
                    evidenceId?: (string|null);
                }

                /** Represents a HistoryPoint. */
                class HistoryPoint implements IHistoryPoint {

                    /**
                     * Constructs a new HistoryPoint.
                     * @param [properties] Properties to set
                     */
                    constructor(properties?: juicetokens.trust.reputation.ReputationHistory.IHistoryPoint);

                    /** HistoryPoint timestampMs. */
                    public timestampMs: (number|Long);

                    /** HistoryPoint value. */
                    public value: number;

                    /** HistoryPoint confidence. */
                    public confidence: number;

                    /** HistoryPoint evidenceId. */
                    public evidenceId: string;

                    /**
                     * Creates a new HistoryPoint instance using the specified properties.
                     * @param [properties] Properties to set
                     * @returns HistoryPoint instance
                     */
                    public static create(properties?: juicetokens.trust.reputation.ReputationHistory.IHistoryPoint): juicetokens.trust.reputation.ReputationHistory.HistoryPoint;

                    /**
                     * Encodes the specified HistoryPoint message. Does not implicitly {@link juicetokens.trust.reputation.ReputationHistory.HistoryPoint.verify|verify} messages.
                     * @param message HistoryPoint message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encode(message: juicetokens.trust.reputation.ReputationHistory.IHistoryPoint, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Encodes the specified HistoryPoint message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ReputationHistory.HistoryPoint.verify|verify} messages.
                     * @param message HistoryPoint message or plain object to encode
                     * @param [writer] Writer to encode to
                     * @returns Writer
                     */
                    public static encodeDelimited(message: juicetokens.trust.reputation.ReputationHistory.IHistoryPoint, writer?: $protobuf.Writer): $protobuf.Writer;

                    /**
                     * Decodes a HistoryPoint message from the specified reader or buffer.
                     * @param reader Reader or buffer to decode from
                     * @param [length] Message length if known beforehand
                     * @returns HistoryPoint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ReputationHistory.HistoryPoint;

                    /**
                     * Decodes a HistoryPoint message from the specified reader or buffer, length delimited.
                     * @param reader Reader or buffer to decode from
                     * @returns HistoryPoint
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ReputationHistory.HistoryPoint;

                    /**
                     * Verifies a HistoryPoint message.
                     * @param message Plain object to verify
                     * @returns `null` if valid, otherwise the reason why it is not
                     */
                    public static verify(message: { [k: string]: any }): (string|null);

                    /**
                     * Creates a HistoryPoint message from a plain object. Also converts values to their respective internal types.
                     * @param object Plain object
                     * @returns HistoryPoint
                     */
                    public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ReputationHistory.HistoryPoint;

                    /**
                     * Creates a plain object from a HistoryPoint message. Also converts values to other types if specified.
                     * @param message HistoryPoint
                     * @param [options] Conversion options
                     * @returns Plain object
                     */
                    public static toObject(message: juicetokens.trust.reputation.ReputationHistory.HistoryPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

                    /**
                     * Converts this HistoryPoint to JSON.
                     * @returns JSON object
                     */
                    public toJSON(): { [k: string]: any };

                    /**
                     * Gets the default type url for HistoryPoint
                     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns The default type url
                     */
                    public static getTypeUrl(typeUrlPrefix?: string): string;
                }
            }

            /** Properties of a ReputationDHTEntry. */
            interface IReputationDHTEntry {

                /** ReputationDHTEntry reputationData */
                reputationData?: (Uint8Array|null);

                /** ReputationDHTEntry userId */
                userId?: (string|null);

                /** ReputationDHTEntry timestampMs */
                timestampMs?: (number|Long|null);

                /** ReputationDHTEntry signature */
                signature?: (Uint8Array|null);

                /** ReputationDHTEntry authoritativeSource */
                authoritativeSource?: (string|null);

                /** ReputationDHTEntry ttlSeconds */
                ttlSeconds?: (number|null);

                /** ReputationDHTEntry entryType */
                entryType?: (string|null);
            }

            /** Represents a ReputationDHTEntry. */
            class ReputationDHTEntry implements IReputationDHTEntry {

                /**
                 * Constructs a new ReputationDHTEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IReputationDHTEntry);

                /** ReputationDHTEntry reputationData. */
                public reputationData: Uint8Array;

                /** ReputationDHTEntry userId. */
                public userId: string;

                /** ReputationDHTEntry timestampMs. */
                public timestampMs: (number|Long);

                /** ReputationDHTEntry signature. */
                public signature: Uint8Array;

                /** ReputationDHTEntry authoritativeSource. */
                public authoritativeSource: string;

                /** ReputationDHTEntry ttlSeconds. */
                public ttlSeconds: number;

                /** ReputationDHTEntry entryType. */
                public entryType: string;

                /**
                 * Creates a new ReputationDHTEntry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReputationDHTEntry instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IReputationDHTEntry): juicetokens.trust.reputation.ReputationDHTEntry;

                /**
                 * Encodes the specified ReputationDHTEntry message. Does not implicitly {@link juicetokens.trust.reputation.ReputationDHTEntry.verify|verify} messages.
                 * @param message ReputationDHTEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IReputationDHTEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReputationDHTEntry message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ReputationDHTEntry.verify|verify} messages.
                 * @param message ReputationDHTEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IReputationDHTEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReputationDHTEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReputationDHTEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ReputationDHTEntry;

                /**
                 * Decodes a ReputationDHTEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReputationDHTEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ReputationDHTEntry;

                /**
                 * Verifies a ReputationDHTEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReputationDHTEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReputationDHTEntry
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ReputationDHTEntry;

                /**
                 * Creates a plain object from a ReputationDHTEntry message. Also converts values to other types if specified.
                 * @param message ReputationDHTEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.ReputationDHTEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReputationDHTEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ReputationDHTEntry
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a WitnessSelection. */
            interface IWitnessSelection {

                /** WitnessSelection attestationId */
                attestationId?: (string|null);

                /** WitnessSelection candidateWitnesses */
                candidateWitnesses?: (string[]|null);

                /** WitnessSelection selectedWitnesses */
                selectedWitnesses?: (string[]|null);

                /** WitnessSelection selectionAlgorithm */
                selectionAlgorithm?: (string|null);

                /** WitnessSelection minimumWitnesses */
                minimumWitnesses?: (number|null);

                /** WitnessSelection selectionSeed */
                selectionSeed?: (Uint8Array|null);
            }

            /** Represents a WitnessSelection. */
            class WitnessSelection implements IWitnessSelection {

                /**
                 * Constructs a new WitnessSelection.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IWitnessSelection);

                /** WitnessSelection attestationId. */
                public attestationId: string;

                /** WitnessSelection candidateWitnesses. */
                public candidateWitnesses: string[];

                /** WitnessSelection selectedWitnesses. */
                public selectedWitnesses: string[];

                /** WitnessSelection selectionAlgorithm. */
                public selectionAlgorithm: string;

                /** WitnessSelection minimumWitnesses. */
                public minimumWitnesses: number;

                /** WitnessSelection selectionSeed. */
                public selectionSeed: Uint8Array;

                /**
                 * Creates a new WitnessSelection instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns WitnessSelection instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IWitnessSelection): juicetokens.trust.reputation.WitnessSelection;

                /**
                 * Encodes the specified WitnessSelection message. Does not implicitly {@link juicetokens.trust.reputation.WitnessSelection.verify|verify} messages.
                 * @param message WitnessSelection message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IWitnessSelection, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified WitnessSelection message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.WitnessSelection.verify|verify} messages.
                 * @param message WitnessSelection message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IWitnessSelection, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a WitnessSelection message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns WitnessSelection
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.WitnessSelection;

                /**
                 * Decodes a WitnessSelection message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns WitnessSelection
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.WitnessSelection;

                /**
                 * Verifies a WitnessSelection message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a WitnessSelection message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns WitnessSelection
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.WitnessSelection;

                /**
                 * Creates a plain object from a WitnessSelection message. Also converts values to other types if specified.
                 * @param message WitnessSelection
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.WitnessSelection, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this WitnessSelection to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for WitnessSelection
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ThresholdSignature. */
            interface IThresholdSignature {

                /** ThresholdSignature messageHash */
                messageHash?: (Uint8Array|null);

                /** ThresholdSignature threshold */
                threshold?: (number|null);

                /** ThresholdSignature signatureShares */
                signatureShares?: (Uint8Array[]|null);

                /** ThresholdSignature combinedSignature */
                combinedSignature?: (Uint8Array|null);

                /** ThresholdSignature signers */
                signers?: (string[]|null);
            }

            /** Represents a ThresholdSignature. */
            class ThresholdSignature implements IThresholdSignature {

                /**
                 * Constructs a new ThresholdSignature.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IThresholdSignature);

                /** ThresholdSignature messageHash. */
                public messageHash: Uint8Array;

                /** ThresholdSignature threshold. */
                public threshold: number;

                /** ThresholdSignature signatureShares. */
                public signatureShares: Uint8Array[];

                /** ThresholdSignature combinedSignature. */
                public combinedSignature: Uint8Array;

                /** ThresholdSignature signers. */
                public signers: string[];

                /**
                 * Creates a new ThresholdSignature instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ThresholdSignature instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IThresholdSignature): juicetokens.trust.reputation.ThresholdSignature;

                /**
                 * Encodes the specified ThresholdSignature message. Does not implicitly {@link juicetokens.trust.reputation.ThresholdSignature.verify|verify} messages.
                 * @param message ThresholdSignature message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IThresholdSignature, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ThresholdSignature message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ThresholdSignature.verify|verify} messages.
                 * @param message ThresholdSignature message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IThresholdSignature, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ThresholdSignature message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ThresholdSignature
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ThresholdSignature;

                /**
                 * Decodes a ThresholdSignature message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ThresholdSignature
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ThresholdSignature;

                /**
                 * Verifies a ThresholdSignature message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ThresholdSignature message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ThresholdSignature
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ThresholdSignature;

                /**
                 * Creates a plain object from a ThresholdSignature message. Also converts values to other types if specified.
                 * @param message ThresholdSignature
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.ThresholdSignature, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ThresholdSignature to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ThresholdSignature
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a VerificationCircuit. */
            interface IVerificationCircuit {

                /** VerificationCircuit circuitDescription */
                circuitDescription?: (Uint8Array|null);

                /** VerificationCircuit publicInputs */
                publicInputs?: (Uint8Array|null);

                /** VerificationCircuit proof */
                proof?: (Uint8Array|null);

                /** VerificationCircuit verificationResult */
                verificationResult?: (boolean|null);

                /** VerificationCircuit circuitType */
                circuitType?: (string|null);
            }

            /** Represents a VerificationCircuit. */
            class VerificationCircuit implements IVerificationCircuit {

                /**
                 * Constructs a new VerificationCircuit.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IVerificationCircuit);

                /** VerificationCircuit circuitDescription. */
                public circuitDescription: Uint8Array;

                /** VerificationCircuit publicInputs. */
                public publicInputs: Uint8Array;

                /** VerificationCircuit proof. */
                public proof: Uint8Array;

                /** VerificationCircuit verificationResult. */
                public verificationResult: boolean;

                /** VerificationCircuit circuitType. */
                public circuitType: string;

                /**
                 * Creates a new VerificationCircuit instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns VerificationCircuit instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IVerificationCircuit): juicetokens.trust.reputation.VerificationCircuit;

                /**
                 * Encodes the specified VerificationCircuit message. Does not implicitly {@link juicetokens.trust.reputation.VerificationCircuit.verify|verify} messages.
                 * @param message VerificationCircuit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IVerificationCircuit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified VerificationCircuit message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.VerificationCircuit.verify|verify} messages.
                 * @param message VerificationCircuit message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IVerificationCircuit, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VerificationCircuit message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns VerificationCircuit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.VerificationCircuit;

                /**
                 * Decodes a VerificationCircuit message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns VerificationCircuit
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.VerificationCircuit;

                /**
                 * Verifies a VerificationCircuit message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a VerificationCircuit message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns VerificationCircuit
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.VerificationCircuit;

                /**
                 * Creates a plain object from a VerificationCircuit message. Also converts values to other types if specified.
                 * @param message VerificationCircuit
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.VerificationCircuit, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this VerificationCircuit to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for VerificationCircuit
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TemporalSecurity. */
            interface ITemporalSecurity {

                /** TemporalSecurity attestationTimestampMs */
                attestationTimestampMs?: (number|Long|null);

                /** TemporalSecurity timestampProof */
                timestampProof?: (Uint8Array|null);

                /** TemporalSecurity timeSources */
                timeSources?: (string[]|null);

                /** TemporalSecurity timeConfidence */
                timeConfidence?: (number|null);
            }

            /** Represents a TemporalSecurity. */
            class TemporalSecurity implements ITemporalSecurity {

                /**
                 * Constructs a new TemporalSecurity.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.ITemporalSecurity);

                /** TemporalSecurity attestationTimestampMs. */
                public attestationTimestampMs: (number|Long);

                /** TemporalSecurity timestampProof. */
                public timestampProof: Uint8Array;

                /** TemporalSecurity timeSources. */
                public timeSources: string[];

                /** TemporalSecurity timeConfidence. */
                public timeConfidence: number;

                /**
                 * Creates a new TemporalSecurity instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TemporalSecurity instance
                 */
                public static create(properties?: juicetokens.trust.reputation.ITemporalSecurity): juicetokens.trust.reputation.TemporalSecurity;

                /**
                 * Encodes the specified TemporalSecurity message. Does not implicitly {@link juicetokens.trust.reputation.TemporalSecurity.verify|verify} messages.
                 * @param message TemporalSecurity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.ITemporalSecurity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TemporalSecurity message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.TemporalSecurity.verify|verify} messages.
                 * @param message TemporalSecurity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.ITemporalSecurity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TemporalSecurity message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TemporalSecurity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.TemporalSecurity;

                /**
                 * Decodes a TemporalSecurity message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TemporalSecurity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.TemporalSecurity;

                /**
                 * Verifies a TemporalSecurity message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TemporalSecurity message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TemporalSecurity
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.TemporalSecurity;

                /**
                 * Creates a plain object from a TemporalSecurity message. Also converts values to other types if specified.
                 * @param message TemporalSecurity
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.TemporalSecurity, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TemporalSecurity to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TemporalSecurity
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a ReputationChainEntry. */
            interface IReputationChainEntry {

                /** ReputationChainEntry userId */
                userId?: (string|null);

                /** ReputationChainEntry reputationProfileHash */
                reputationProfileHash?: (Uint8Array|null);

                /** ReputationChainEntry sequenceNumber */
                sequenceNumber?: (number|Long|null);

                /** ReputationChainEntry entryType */
                entryType?: (string|null);

                /** ReputationChainEntry timestampMs */
                timestampMs?: (number|Long|null);

                /** ReputationChainEntry dhtKey */
                dhtKey?: (Uint8Array|null);
            }

            /** Represents a ReputationChainEntry. */
            class ReputationChainEntry implements IReputationChainEntry {

                /**
                 * Constructs a new ReputationChainEntry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.trust.reputation.IReputationChainEntry);

                /** ReputationChainEntry userId. */
                public userId: string;

                /** ReputationChainEntry reputationProfileHash. */
                public reputationProfileHash: Uint8Array;

                /** ReputationChainEntry sequenceNumber. */
                public sequenceNumber: (number|Long);

                /** ReputationChainEntry entryType. */
                public entryType: string;

                /** ReputationChainEntry timestampMs. */
                public timestampMs: (number|Long);

                /** ReputationChainEntry dhtKey. */
                public dhtKey: Uint8Array;

                /**
                 * Creates a new ReputationChainEntry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReputationChainEntry instance
                 */
                public static create(properties?: juicetokens.trust.reputation.IReputationChainEntry): juicetokens.trust.reputation.ReputationChainEntry;

                /**
                 * Encodes the specified ReputationChainEntry message. Does not implicitly {@link juicetokens.trust.reputation.ReputationChainEntry.verify|verify} messages.
                 * @param message ReputationChainEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.trust.reputation.IReputationChainEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReputationChainEntry message, length delimited. Does not implicitly {@link juicetokens.trust.reputation.ReputationChainEntry.verify|verify} messages.
                 * @param message ReputationChainEntry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.trust.reputation.IReputationChainEntry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReputationChainEntry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReputationChainEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.trust.reputation.ReputationChainEntry;

                /**
                 * Decodes a ReputationChainEntry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReputationChainEntry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.trust.reputation.ReputationChainEntry;

                /**
                 * Verifies a ReputationChainEntry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReputationChainEntry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReputationChainEntry
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.trust.reputation.ReputationChainEntry;

                /**
                 * Creates a plain object from a ReputationChainEntry message. Also converts values to other types if specified.
                 * @param message ReputationChainEntry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.trust.reputation.ReputationChainEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReputationChainEntry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ReputationChainEntry
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }
    }

    /** Namespace lifecycle. */
    namespace lifecycle {

        /** Namespace creation. */
        namespace creation {

            /** Properties of an EggGeneration. */
            interface IEggGeneration {

                /** EggGeneration eggId */
                eggId?: (string|null);

                /** EggGeneration batchReference */
                batchReference?: (string|null);

                /** EggGeneration denomination */
                denomination?: (number|null);

                /** EggGeneration count */
                count?: (number|null);

                /** EggGeneration generatorIds */
                generatorIds?: (string[]|null);

                /** EggGeneration entropyCommitment */
                entropyCommitment?: (Uint8Array|null);

                /** EggGeneration generationTimestampMs */
                generationTimestampMs?: (number|Long|null);
            }

            /** Represents an EggGeneration. */
            class EggGeneration implements IEggGeneration {

                /**
                 * Constructs a new EggGeneration.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.creation.IEggGeneration);

                /** EggGeneration eggId. */
                public eggId: string;

                /** EggGeneration batchReference. */
                public batchReference: string;

                /** EggGeneration denomination. */
                public denomination: number;

                /** EggGeneration count. */
                public count: number;

                /** EggGeneration generatorIds. */
                public generatorIds: string[];

                /** EggGeneration entropyCommitment. */
                public entropyCommitment: Uint8Array;

                /** EggGeneration generationTimestampMs. */
                public generationTimestampMs: (number|Long);

                /**
                 * Creates a new EggGeneration instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns EggGeneration instance
                 */
                public static create(properties?: juicetokens.lifecycle.creation.IEggGeneration): juicetokens.lifecycle.creation.EggGeneration;

                /**
                 * Encodes the specified EggGeneration message. Does not implicitly {@link juicetokens.lifecycle.creation.EggGeneration.verify|verify} messages.
                 * @param message EggGeneration message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.creation.IEggGeneration, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EggGeneration message, length delimited. Does not implicitly {@link juicetokens.lifecycle.creation.EggGeneration.verify|verify} messages.
                 * @param message EggGeneration message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.creation.IEggGeneration, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EggGeneration message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EggGeneration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.creation.EggGeneration;

                /**
                 * Decodes an EggGeneration message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EggGeneration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.creation.EggGeneration;

                /**
                 * Verifies an EggGeneration message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EggGeneration message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EggGeneration
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.creation.EggGeneration;

                /**
                 * Creates a plain object from an EggGeneration message. Also converts values to other types if specified.
                 * @param message EggGeneration
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.creation.EggGeneration, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EggGeneration to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for EggGeneration
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a HatchingCondition. */
            interface IHatchingCondition {

                /** HatchingCondition eggId */
                eggId?: (string|null);

                /** HatchingCondition conditionType */
                conditionType?: (juicetokens.lifecycle.creation.HatchingCondition.ConditionType|null);

                /** HatchingCondition conditionParameters */
                conditionParameters?: (Uint8Array|null);

                /** HatchingCondition expiryMs */
                expiryMs?: (number|Long|null);
            }

            /** Represents a HatchingCondition. */
            class HatchingCondition implements IHatchingCondition {

                /**
                 * Constructs a new HatchingCondition.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.creation.IHatchingCondition);

                /** HatchingCondition eggId. */
                public eggId: string;

                /** HatchingCondition conditionType. */
                public conditionType: juicetokens.lifecycle.creation.HatchingCondition.ConditionType;

                /** HatchingCondition conditionParameters. */
                public conditionParameters: Uint8Array;

                /** HatchingCondition expiryMs. */
                public expiryMs: (number|Long);

                /**
                 * Creates a new HatchingCondition instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns HatchingCondition instance
                 */
                public static create(properties?: juicetokens.lifecycle.creation.IHatchingCondition): juicetokens.lifecycle.creation.HatchingCondition;

                /**
                 * Encodes the specified HatchingCondition message. Does not implicitly {@link juicetokens.lifecycle.creation.HatchingCondition.verify|verify} messages.
                 * @param message HatchingCondition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.creation.IHatchingCondition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified HatchingCondition message, length delimited. Does not implicitly {@link juicetokens.lifecycle.creation.HatchingCondition.verify|verify} messages.
                 * @param message HatchingCondition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.creation.IHatchingCondition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a HatchingCondition message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns HatchingCondition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.creation.HatchingCondition;

                /**
                 * Decodes a HatchingCondition message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns HatchingCondition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.creation.HatchingCondition;

                /**
                 * Verifies a HatchingCondition message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a HatchingCondition message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns HatchingCondition
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.creation.HatchingCondition;

                /**
                 * Creates a plain object from a HatchingCondition message. Also converts values to other types if specified.
                 * @param message HatchingCondition
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.creation.HatchingCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this HatchingCondition to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for HatchingCondition
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace HatchingCondition {

                /** ConditionType enum. */
                enum ConditionType {
                    ATTESTATION_THRESHOLD = 0,
                    ACTIVITY_COMPLETION = 1,
                    TEMPORAL_TRIGGER = 2,
                    MULTI_PARTY_AGREEMENT = 3
                }
            }

            /** Properties of a TokenDistribution. */
            interface ITokenDistribution {

                /** TokenDistribution batchId */
                batchId?: (string|null);

                /** TokenDistribution strategy */
                strategy?: (juicetokens.lifecycle.creation.TokenDistribution.DistributionStrategy|null);

                /** TokenDistribution recipientWeights */
                recipientWeights?: ({ [k: string]: number }|null);

                /** TokenDistribution tokens */
                tokens?: (juicetokens.token.model.IToken[]|null);
            }

            /** Represents a TokenDistribution. */
            class TokenDistribution implements ITokenDistribution {

                /**
                 * Constructs a new TokenDistribution.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.creation.ITokenDistribution);

                /** TokenDistribution batchId. */
                public batchId: string;

                /** TokenDistribution strategy. */
                public strategy: juicetokens.lifecycle.creation.TokenDistribution.DistributionStrategy;

                /** TokenDistribution recipientWeights. */
                public recipientWeights: { [k: string]: number };

                /** TokenDistribution tokens. */
                public tokens: juicetokens.token.model.IToken[];

                /**
                 * Creates a new TokenDistribution instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TokenDistribution instance
                 */
                public static create(properties?: juicetokens.lifecycle.creation.ITokenDistribution): juicetokens.lifecycle.creation.TokenDistribution;

                /**
                 * Encodes the specified TokenDistribution message. Does not implicitly {@link juicetokens.lifecycle.creation.TokenDistribution.verify|verify} messages.
                 * @param message TokenDistribution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.creation.ITokenDistribution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TokenDistribution message, length delimited. Does not implicitly {@link juicetokens.lifecycle.creation.TokenDistribution.verify|verify} messages.
                 * @param message TokenDistribution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.creation.ITokenDistribution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TokenDistribution message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TokenDistribution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.creation.TokenDistribution;

                /**
                 * Decodes a TokenDistribution message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TokenDistribution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.creation.TokenDistribution;

                /**
                 * Verifies a TokenDistribution message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TokenDistribution message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TokenDistribution
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.creation.TokenDistribution;

                /**
                 * Creates a plain object from a TokenDistribution message. Also converts values to other types if specified.
                 * @param message TokenDistribution
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.creation.TokenDistribution, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TokenDistribution to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TokenDistribution
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace TokenDistribution {

                /** DistributionStrategy enum. */
                enum DistributionStrategy {
                    EQUAL = 0,
                    WEIGHTED = 1,
                    MERIT_BASED = 2,
                    NEED_BASED = 3
                }
            }

            /** Properties of a GenesisPool. */
            interface IGenesisPool {

                /** GenesisPool poolId */
                poolId?: (string|null);

                /** GenesisPool memberIds */
                memberIds?: (string[]|null);

                /** GenesisPool attestationStrengths */
                attestationStrengths?: ({ [k: string]: number }|null);

                /** GenesisPool combinedStrength */
                combinedStrength?: (number|null);

                /** GenesisPool formationTimestampMs */
                formationTimestampMs?: (number|Long|null);
            }

            /** Represents a GenesisPool. */
            class GenesisPool implements IGenesisPool {

                /**
                 * Constructs a new GenesisPool.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.creation.IGenesisPool);

                /** GenesisPool poolId. */
                public poolId: string;

                /** GenesisPool memberIds. */
                public memberIds: string[];

                /** GenesisPool attestationStrengths. */
                public attestationStrengths: { [k: string]: number };

                /** GenesisPool combinedStrength. */
                public combinedStrength: number;

                /** GenesisPool formationTimestampMs. */
                public formationTimestampMs: (number|Long);

                /**
                 * Creates a new GenesisPool instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GenesisPool instance
                 */
                public static create(properties?: juicetokens.lifecycle.creation.IGenesisPool): juicetokens.lifecycle.creation.GenesisPool;

                /**
                 * Encodes the specified GenesisPool message. Does not implicitly {@link juicetokens.lifecycle.creation.GenesisPool.verify|verify} messages.
                 * @param message GenesisPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.creation.IGenesisPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GenesisPool message, length delimited. Does not implicitly {@link juicetokens.lifecycle.creation.GenesisPool.verify|verify} messages.
                 * @param message GenesisPool message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.creation.IGenesisPool, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GenesisPool message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GenesisPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.creation.GenesisPool;

                /**
                 * Decodes a GenesisPool message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GenesisPool
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.creation.GenesisPool;

                /**
                 * Verifies a GenesisPool message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GenesisPool message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GenesisPool
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.creation.GenesisPool;

                /**
                 * Creates a plain object from a GenesisPool message. Also converts values to other types if specified.
                 * @param message GenesisPool
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.creation.GenesisPool, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GenesisPool to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GenesisPool
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DormantEgg. */
            interface IDormantEgg {

                /** DormantEgg eggId */
                eggId?: (string|null);

                /** DormantEgg denomination */
                denomination?: (number|null);

                /** DormantEgg ownerId */
                ownerId?: (string|null);

                /** DormantEgg dormancySeal */
                dormancySeal?: (Uint8Array|null);

                /** DormantEgg hatchingCondition */
                hatchingCondition?: (juicetokens.lifecycle.creation.IHatchingCondition|null);

                /** DormantEgg creationTimestampMs */
                creationTimestampMs?: (number|Long|null);

                /** DormantEgg dormancyExpiresMs */
                dormancyExpiresMs?: (number|Long|null);
            }

            /** Represents a DormantEgg. */
            class DormantEgg implements IDormantEgg {

                /**
                 * Constructs a new DormantEgg.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.creation.IDormantEgg);

                /** DormantEgg eggId. */
                public eggId: string;

                /** DormantEgg denomination. */
                public denomination: number;

                /** DormantEgg ownerId. */
                public ownerId: string;

                /** DormantEgg dormancySeal. */
                public dormancySeal: Uint8Array;

                /** DormantEgg hatchingCondition. */
                public hatchingCondition?: (juicetokens.lifecycle.creation.IHatchingCondition|null);

                /** DormantEgg creationTimestampMs. */
                public creationTimestampMs: (number|Long);

                /** DormantEgg dormancyExpiresMs. */
                public dormancyExpiresMs: (number|Long);

                /**
                 * Creates a new DormantEgg instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DormantEgg instance
                 */
                public static create(properties?: juicetokens.lifecycle.creation.IDormantEgg): juicetokens.lifecycle.creation.DormantEgg;

                /**
                 * Encodes the specified DormantEgg message. Does not implicitly {@link juicetokens.lifecycle.creation.DormantEgg.verify|verify} messages.
                 * @param message DormantEgg message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.creation.IDormantEgg, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DormantEgg message, length delimited. Does not implicitly {@link juicetokens.lifecycle.creation.DormantEgg.verify|verify} messages.
                 * @param message DormantEgg message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.creation.IDormantEgg, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DormantEgg message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DormantEgg
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.creation.DormantEgg;

                /**
                 * Decodes a DormantEgg message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DormantEgg
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.creation.DormantEgg;

                /**
                 * Verifies a DormantEgg message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DormantEgg message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DormantEgg
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.creation.DormantEgg;

                /**
                 * Creates a plain object from a DormantEgg message. Also converts values to other types if specified.
                 * @param message DormantEgg
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.creation.DormantEgg, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DormantEgg to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DormantEgg
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a FertilizationTrigger. */
            interface IFertilizationTrigger {

                /** FertilizationTrigger eggId */
                eggId?: (string|null);

                /** FertilizationTrigger activatorId */
                activatorId?: (string|null);

                /** FertilizationTrigger activityReference */
                activityReference?: (string|null);

                /** FertilizationTrigger proofOfActivity */
                proofOfActivity?: (Uint8Array|null);

                /** FertilizationTrigger triggerTimestampMs */
                triggerTimestampMs?: (number|Long|null);
            }

            /** Represents a FertilizationTrigger. */
            class FertilizationTrigger implements IFertilizationTrigger {

                /**
                 * Constructs a new FertilizationTrigger.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.creation.IFertilizationTrigger);

                /** FertilizationTrigger eggId. */
                public eggId: string;

                /** FertilizationTrigger activatorId. */
                public activatorId: string;

                /** FertilizationTrigger activityReference. */
                public activityReference: string;

                /** FertilizationTrigger proofOfActivity. */
                public proofOfActivity: Uint8Array;

                /** FertilizationTrigger triggerTimestampMs. */
                public triggerTimestampMs: (number|Long);

                /**
                 * Creates a new FertilizationTrigger instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FertilizationTrigger instance
                 */
                public static create(properties?: juicetokens.lifecycle.creation.IFertilizationTrigger): juicetokens.lifecycle.creation.FertilizationTrigger;

                /**
                 * Encodes the specified FertilizationTrigger message. Does not implicitly {@link juicetokens.lifecycle.creation.FertilizationTrigger.verify|verify} messages.
                 * @param message FertilizationTrigger message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.creation.IFertilizationTrigger, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FertilizationTrigger message, length delimited. Does not implicitly {@link juicetokens.lifecycle.creation.FertilizationTrigger.verify|verify} messages.
                 * @param message FertilizationTrigger message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.creation.IFertilizationTrigger, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FertilizationTrigger message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FertilizationTrigger
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.creation.FertilizationTrigger;

                /**
                 * Decodes a FertilizationTrigger message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FertilizationTrigger
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.creation.FertilizationTrigger;

                /**
                 * Verifies a FertilizationTrigger message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FertilizationTrigger message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FertilizationTrigger
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.creation.FertilizationTrigger;

                /**
                 * Creates a plain object from a FertilizationTrigger message. Also converts values to other types if specified.
                 * @param message FertilizationTrigger
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.creation.FertilizationTrigger, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FertilizationTrigger to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for FertilizationTrigger
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a MaturationPath. */
            interface IMaturationPath {

                /** MaturationPath eggId */
                eggId?: (string|null);

                /** MaturationPath currentStage */
                currentStage?: (juicetokens.lifecycle.creation.MaturationPath.MaturationStage|null);

                /** MaturationPath stageEnteredMs */
                stageEnteredMs?: (number|Long|null);

                /** MaturationPath estimatedCompletionMs */
                estimatedCompletionMs?: (number|Long|null);

                /** MaturationPath completionPercentage */
                completionPercentage?: (number|null);
            }

            /** Represents a MaturationPath. */
            class MaturationPath implements IMaturationPath {

                /**
                 * Constructs a new MaturationPath.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.creation.IMaturationPath);

                /** MaturationPath eggId. */
                public eggId: string;

                /** MaturationPath currentStage. */
                public currentStage: juicetokens.lifecycle.creation.MaturationPath.MaturationStage;

                /** MaturationPath stageEnteredMs. */
                public stageEnteredMs: (number|Long);

                /** MaturationPath estimatedCompletionMs. */
                public estimatedCompletionMs: (number|Long);

                /** MaturationPath completionPercentage. */
                public completionPercentage: number;

                /**
                 * Creates a new MaturationPath instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MaturationPath instance
                 */
                public static create(properties?: juicetokens.lifecycle.creation.IMaturationPath): juicetokens.lifecycle.creation.MaturationPath;

                /**
                 * Encodes the specified MaturationPath message. Does not implicitly {@link juicetokens.lifecycle.creation.MaturationPath.verify|verify} messages.
                 * @param message MaturationPath message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.creation.IMaturationPath, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MaturationPath message, length delimited. Does not implicitly {@link juicetokens.lifecycle.creation.MaturationPath.verify|verify} messages.
                 * @param message MaturationPath message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.creation.IMaturationPath, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MaturationPath message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MaturationPath
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.creation.MaturationPath;

                /**
                 * Decodes a MaturationPath message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MaturationPath
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.creation.MaturationPath;

                /**
                 * Verifies a MaturationPath message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MaturationPath message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MaturationPath
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.creation.MaturationPath;

                /**
                 * Creates a plain object from a MaturationPath message. Also converts values to other types if specified.
                 * @param message MaturationPath
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.creation.MaturationPath, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MaturationPath to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for MaturationPath
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace MaturationPath {

                /** MaturationStage enum. */
                enum MaturationStage {
                    DORMANT = 0,
                    FERTILIZED = 1,
                    INCUBATING = 2,
                    HATCHING = 3,
                    ACTIVE = 4
                }
            }

            /** Properties of an EggComponent. */
            interface IEggComponent {

                /** EggComponent componentId */
                componentId?: (string|null);

                /** EggComponent denomination */
                denomination?: (number|null);

                /** EggComponent issuerId */
                issuerId?: (string|null);

                /** EggComponent issuerCommitment */
                issuerCommitment?: (Uint8Array|null);

                /** EggComponent creationTimestampMs */
                creationTimestampMs?: (number|Long|null);

                /** EggComponent authorizedFertilizers */
                authorizedFertilizers?: (string[]|null);
            }

            /** Represents an EggComponent. */
            class EggComponent implements IEggComponent {

                /**
                 * Constructs a new EggComponent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.creation.IEggComponent);

                /** EggComponent componentId. */
                public componentId: string;

                /** EggComponent denomination. */
                public denomination: number;

                /** EggComponent issuerId. */
                public issuerId: string;

                /** EggComponent issuerCommitment. */
                public issuerCommitment: Uint8Array;

                /** EggComponent creationTimestampMs. */
                public creationTimestampMs: (number|Long);

                /** EggComponent authorizedFertilizers. */
                public authorizedFertilizers: string[];

                /**
                 * Creates a new EggComponent instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns EggComponent instance
                 */
                public static create(properties?: juicetokens.lifecycle.creation.IEggComponent): juicetokens.lifecycle.creation.EggComponent;

                /**
                 * Encodes the specified EggComponent message. Does not implicitly {@link juicetokens.lifecycle.creation.EggComponent.verify|verify} messages.
                 * @param message EggComponent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.creation.IEggComponent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EggComponent message, length delimited. Does not implicitly {@link juicetokens.lifecycle.creation.EggComponent.verify|verify} messages.
                 * @param message EggComponent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.creation.IEggComponent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EggComponent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EggComponent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.creation.EggComponent;

                /**
                 * Decodes an EggComponent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EggComponent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.creation.EggComponent;

                /**
                 * Verifies an EggComponent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EggComponent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EggComponent
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.creation.EggComponent;

                /**
                 * Creates a plain object from an EggComponent message. Also converts values to other types if specified.
                 * @param message EggComponent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.creation.EggComponent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EggComponent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for EggComponent
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a SpermComponent. */
            interface ISpermComponent {

                /** SpermComponent componentId */
                componentId?: (string|null);

                /** SpermComponent activityType */
                activityType?: (string|null);

                /** SpermComponent potencyLevel */
                potencyLevel?: (number|null);

                /** SpermComponent generatorId */
                generatorId?: (string|null);

                /** SpermComponent activityProof */
                activityProof?: (Uint8Array|null);

                /** SpermComponent generationTimestampMs */
                generationTimestampMs?: (number|Long|null);

                /** SpermComponent viabilityExpiresMs */
                viabilityExpiresMs?: (number|Long|null);
            }

            /** Represents a SpermComponent. */
            class SpermComponent implements ISpermComponent {

                /**
                 * Constructs a new SpermComponent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.creation.ISpermComponent);

                /** SpermComponent componentId. */
                public componentId: string;

                /** SpermComponent activityType. */
                public activityType: string;

                /** SpermComponent potencyLevel. */
                public potencyLevel: number;

                /** SpermComponent generatorId. */
                public generatorId: string;

                /** SpermComponent activityProof. */
                public activityProof: Uint8Array;

                /** SpermComponent generationTimestampMs. */
                public generationTimestampMs: (number|Long);

                /** SpermComponent viabilityExpiresMs. */
                public viabilityExpiresMs: (number|Long);

                /**
                 * Creates a new SpermComponent instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns SpermComponent instance
                 */
                public static create(properties?: juicetokens.lifecycle.creation.ISpermComponent): juicetokens.lifecycle.creation.SpermComponent;

                /**
                 * Encodes the specified SpermComponent message. Does not implicitly {@link juicetokens.lifecycle.creation.SpermComponent.verify|verify} messages.
                 * @param message SpermComponent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.creation.ISpermComponent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified SpermComponent message, length delimited. Does not implicitly {@link juicetokens.lifecycle.creation.SpermComponent.verify|verify} messages.
                 * @param message SpermComponent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.creation.ISpermComponent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a SpermComponent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns SpermComponent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.creation.SpermComponent;

                /**
                 * Decodes a SpermComponent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns SpermComponent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.creation.SpermComponent;

                /**
                 * Verifies a SpermComponent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a SpermComponent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns SpermComponent
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.creation.SpermComponent;

                /**
                 * Creates a plain object from a SpermComponent message. Also converts values to other types if specified.
                 * @param message SpermComponent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.creation.SpermComponent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this SpermComponent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for SpermComponent
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a FertilizationEvent. */
            interface IFertilizationEvent {

                /** FertilizationEvent fertilizationId */
                fertilizationId?: (string|null);

                /** FertilizationEvent eggComponentId */
                eggComponentId?: (string|null);

                /** FertilizationEvent spermComponentId */
                spermComponentId?: (string|null);

                /** FertilizationEvent compatibilityProof */
                compatibilityProof?: (Uint8Array|null);

                /** FertilizationEvent fertilizationTimestampMs */
                fertilizationTimestampMs?: (number|Long|null);

                /** FertilizationEvent maturationPeriodHours */
                maturationPeriodHours?: (number|null);

                /** FertilizationEvent witnesses */
                witnesses?: (string[]|null);
            }

            /** Represents a FertilizationEvent. */
            class FertilizationEvent implements IFertilizationEvent {

                /**
                 * Constructs a new FertilizationEvent.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.creation.IFertilizationEvent);

                /** FertilizationEvent fertilizationId. */
                public fertilizationId: string;

                /** FertilizationEvent eggComponentId. */
                public eggComponentId: string;

                /** FertilizationEvent spermComponentId. */
                public spermComponentId: string;

                /** FertilizationEvent compatibilityProof. */
                public compatibilityProof: Uint8Array;

                /** FertilizationEvent fertilizationTimestampMs. */
                public fertilizationTimestampMs: (number|Long);

                /** FertilizationEvent maturationPeriodHours. */
                public maturationPeriodHours: number;

                /** FertilizationEvent witnesses. */
                public witnesses: string[];

                /**
                 * Creates a new FertilizationEvent instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FertilizationEvent instance
                 */
                public static create(properties?: juicetokens.lifecycle.creation.IFertilizationEvent): juicetokens.lifecycle.creation.FertilizationEvent;

                /**
                 * Encodes the specified FertilizationEvent message. Does not implicitly {@link juicetokens.lifecycle.creation.FertilizationEvent.verify|verify} messages.
                 * @param message FertilizationEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.creation.IFertilizationEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FertilizationEvent message, length delimited. Does not implicitly {@link juicetokens.lifecycle.creation.FertilizationEvent.verify|verify} messages.
                 * @param message FertilizationEvent message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.creation.IFertilizationEvent, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FertilizationEvent message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FertilizationEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.creation.FertilizationEvent;

                /**
                 * Decodes a FertilizationEvent message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FertilizationEvent
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.creation.FertilizationEvent;

                /**
                 * Verifies a FertilizationEvent message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FertilizationEvent message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FertilizationEvent
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.creation.FertilizationEvent;

                /**
                 * Creates a plain object from a FertilizationEvent message. Also converts values to other types if specified.
                 * @param message FertilizationEvent
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.creation.FertilizationEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FertilizationEvent to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for FertilizationEvent
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Namespace developmental_stage. */
        namespace developmental_stage {

            /** DevelopmentalStageLevel enum. */
            enum DevelopmentalStageLevel {
                TRUST = 0,
                AUTONOMY = 1,
                IMAGINATION = 2,
                COMPETENCE = 3,
                IDENTITY = 4,
                CONNECTION = 5,
                GENERATIVITY = 6
            }

            /** Properties of a UserDevelopmentalStageStatus. */
            interface IUserDevelopmentalStageStatus {

                /** UserDevelopmentalStageStatus userId */
                userId?: (string|null);

                /** UserDevelopmentalStageStatus stageMetrics */
                stageMetrics?: ({ [k: string]: juicetokens.lifecycle.developmental_stage.IStageMetric }|null);

                /** UserDevelopmentalStageStatus currentPrimaryStage */
                currentPrimaryStage?: (juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel|null);

                /** UserDevelopmentalStageStatus currentSecondaryStage */
                currentSecondaryStage?: (juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel|null);

                /** UserDevelopmentalStageStatus lastTransitionMs */
                lastTransitionMs?: (number|Long|null);

                /** UserDevelopmentalStageStatus stageHistory */
                stageHistory?: (juicetokens.lifecycle.developmental_stage.IStageTransition[]|null);
            }

            /** Represents a UserDevelopmentalStageStatus. */
            class UserDevelopmentalStageStatus implements IUserDevelopmentalStageStatus {

                /**
                 * Constructs a new UserDevelopmentalStageStatus.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.developmental_stage.IUserDevelopmentalStageStatus);

                /** UserDevelopmentalStageStatus userId. */
                public userId: string;

                /** UserDevelopmentalStageStatus stageMetrics. */
                public stageMetrics: { [k: string]: juicetokens.lifecycle.developmental_stage.IStageMetric };

                /** UserDevelopmentalStageStatus currentPrimaryStage. */
                public currentPrimaryStage: juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel;

                /** UserDevelopmentalStageStatus currentSecondaryStage. */
                public currentSecondaryStage: juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel;

                /** UserDevelopmentalStageStatus lastTransitionMs. */
                public lastTransitionMs: (number|Long);

                /** UserDevelopmentalStageStatus stageHistory. */
                public stageHistory: juicetokens.lifecycle.developmental_stage.IStageTransition[];

                /**
                 * Creates a new UserDevelopmentalStageStatus instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns UserDevelopmentalStageStatus instance
                 */
                public static create(properties?: juicetokens.lifecycle.developmental_stage.IUserDevelopmentalStageStatus): juicetokens.lifecycle.developmental_stage.UserDevelopmentalStageStatus;

                /**
                 * Encodes the specified UserDevelopmentalStageStatus message. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.UserDevelopmentalStageStatus.verify|verify} messages.
                 * @param message UserDevelopmentalStageStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.developmental_stage.IUserDevelopmentalStageStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified UserDevelopmentalStageStatus message, length delimited. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.UserDevelopmentalStageStatus.verify|verify} messages.
                 * @param message UserDevelopmentalStageStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.developmental_stage.IUserDevelopmentalStageStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a UserDevelopmentalStageStatus message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns UserDevelopmentalStageStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.developmental_stage.UserDevelopmentalStageStatus;

                /**
                 * Decodes a UserDevelopmentalStageStatus message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns UserDevelopmentalStageStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.developmental_stage.UserDevelopmentalStageStatus;

                /**
                 * Verifies a UserDevelopmentalStageStatus message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a UserDevelopmentalStageStatus message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns UserDevelopmentalStageStatus
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.developmental_stage.UserDevelopmentalStageStatus;

                /**
                 * Creates a plain object from a UserDevelopmentalStageStatus message. Also converts values to other types if specified.
                 * @param message UserDevelopmentalStageStatus
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.developmental_stage.UserDevelopmentalStageStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this UserDevelopmentalStageStatus to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for UserDevelopmentalStageStatus
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StageMetric. */
            interface IStageMetric {

                /** StageMetric stage */
                stage?: (juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel|null);

                /** StageMetric progress */
                progress?: (number|null);

                /** StageMetric experiencePoints */
                experiencePoints?: (number|null);

                /** StageMetric activitiesCompleted */
                activitiesCompleted?: (number|null);

                /** StageMetric timeInStageMs */
                timeInStageMs?: (number|Long|null);

                /** StageMetric completedMilestones */
                completedMilestones?: (string[]|null);

                /** StageMetric masteryScore */
                masteryScore?: (number|null);
            }

            /** Represents a StageMetric. */
            class StageMetric implements IStageMetric {

                /**
                 * Constructs a new StageMetric.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.developmental_stage.IStageMetric);

                /** StageMetric stage. */
                public stage: juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel;

                /** StageMetric progress. */
                public progress: number;

                /** StageMetric experiencePoints. */
                public experiencePoints: number;

                /** StageMetric activitiesCompleted. */
                public activitiesCompleted: number;

                /** StageMetric timeInStageMs. */
                public timeInStageMs: (number|Long);

                /** StageMetric completedMilestones. */
                public completedMilestones: string[];

                /** StageMetric masteryScore. */
                public masteryScore: number;

                /**
                 * Creates a new StageMetric instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StageMetric instance
                 */
                public static create(properties?: juicetokens.lifecycle.developmental_stage.IStageMetric): juicetokens.lifecycle.developmental_stage.StageMetric;

                /**
                 * Encodes the specified StageMetric message. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.StageMetric.verify|verify} messages.
                 * @param message StageMetric message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.developmental_stage.IStageMetric, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StageMetric message, length delimited. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.StageMetric.verify|verify} messages.
                 * @param message StageMetric message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.developmental_stage.IStageMetric, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StageMetric message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StageMetric
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.developmental_stage.StageMetric;

                /**
                 * Decodes a StageMetric message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StageMetric
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.developmental_stage.StageMetric;

                /**
                 * Verifies a StageMetric message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StageMetric message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StageMetric
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.developmental_stage.StageMetric;

                /**
                 * Creates a plain object from a StageMetric message. Also converts values to other types if specified.
                 * @param message StageMetric
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.developmental_stage.StageMetric, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StageMetric to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StageMetric
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StageTransition. */
            interface IStageTransition {

                /** StageTransition fromStage */
                fromStage?: (juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel|null);

                /** StageTransition toStage */
                toStage?: (juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel|null);

                /** StageTransition transitionTimeMs */
                transitionTimeMs?: (number|Long|null);

                /** StageTransition transitionTrigger */
                transitionTrigger?: (string|null);

                /** StageTransition fromStageMastery */
                fromStageMastery?: (number|null);

                /** StageTransition transitionSignature */
                transitionSignature?: (Uint8Array|null);

                /** StageTransition witnessIds */
                witnessIds?: (string[]|null);
            }

            /** Represents a StageTransition. */
            class StageTransition implements IStageTransition {

                /**
                 * Constructs a new StageTransition.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.developmental_stage.IStageTransition);

                /** StageTransition fromStage. */
                public fromStage: juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel;

                /** StageTransition toStage. */
                public toStage: juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel;

                /** StageTransition transitionTimeMs. */
                public transitionTimeMs: (number|Long);

                /** StageTransition transitionTrigger. */
                public transitionTrigger: string;

                /** StageTransition fromStageMastery. */
                public fromStageMastery: number;

                /** StageTransition transitionSignature. */
                public transitionSignature: Uint8Array;

                /** StageTransition witnessIds. */
                public witnessIds: string[];

                /**
                 * Creates a new StageTransition instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StageTransition instance
                 */
                public static create(properties?: juicetokens.lifecycle.developmental_stage.IStageTransition): juicetokens.lifecycle.developmental_stage.StageTransition;

                /**
                 * Encodes the specified StageTransition message. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.StageTransition.verify|verify} messages.
                 * @param message StageTransition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.developmental_stage.IStageTransition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StageTransition message, length delimited. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.StageTransition.verify|verify} messages.
                 * @param message StageTransition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.developmental_stage.IStageTransition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StageTransition message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StageTransition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.developmental_stage.StageTransition;

                /**
                 * Decodes a StageTransition message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StageTransition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.developmental_stage.StageTransition;

                /**
                 * Verifies a StageTransition message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StageTransition message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StageTransition
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.developmental_stage.StageTransition;

                /**
                 * Creates a plain object from a StageTransition message. Also converts values to other types if specified.
                 * @param message StageTransition
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.developmental_stage.StageTransition, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StageTransition to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StageTransition
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DevelopmentalStageActivity. */
            interface IDevelopmentalStageActivity {

                /** DevelopmentalStageActivity activityId */
                activityId?: (string|null);

                /** DevelopmentalStageActivity activityName */
                activityName?: (string|null);

                /** DevelopmentalStageActivity description */
                description?: (string|null);

                /** DevelopmentalStageActivity primaryStage */
                primaryStage?: (juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel|null);

                /** DevelopmentalStageActivity secondaryStages */
                secondaryStages?: (juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel[]|null);

                /** DevelopmentalStageActivity experiencePoints */
                experiencePoints?: (number|null);

                /** DevelopmentalStageActivity repeatable */
                repeatable?: (boolean|null);

                /** DevelopmentalStageActivity cooldownHours */
                cooldownHours?: (number|null);

                /** DevelopmentalStageActivity attributeMultipliers */
                attributeMultipliers?: ({ [k: string]: number }|null);
            }

            /** Represents a DevelopmentalStageActivity. */
            class DevelopmentalStageActivity implements IDevelopmentalStageActivity {

                /**
                 * Constructs a new DevelopmentalStageActivity.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.developmental_stage.IDevelopmentalStageActivity);

                /** DevelopmentalStageActivity activityId. */
                public activityId: string;

                /** DevelopmentalStageActivity activityName. */
                public activityName: string;

                /** DevelopmentalStageActivity description. */
                public description: string;

                /** DevelopmentalStageActivity primaryStage. */
                public primaryStage: juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel;

                /** DevelopmentalStageActivity secondaryStages. */
                public secondaryStages: juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel[];

                /** DevelopmentalStageActivity experiencePoints. */
                public experiencePoints: number;

                /** DevelopmentalStageActivity repeatable. */
                public repeatable: boolean;

                /** DevelopmentalStageActivity cooldownHours. */
                public cooldownHours: number;

                /** DevelopmentalStageActivity attributeMultipliers. */
                public attributeMultipliers: { [k: string]: number };

                /**
                 * Creates a new DevelopmentalStageActivity instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DevelopmentalStageActivity instance
                 */
                public static create(properties?: juicetokens.lifecycle.developmental_stage.IDevelopmentalStageActivity): juicetokens.lifecycle.developmental_stage.DevelopmentalStageActivity;

                /**
                 * Encodes the specified DevelopmentalStageActivity message. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.DevelopmentalStageActivity.verify|verify} messages.
                 * @param message DevelopmentalStageActivity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.developmental_stage.IDevelopmentalStageActivity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DevelopmentalStageActivity message, length delimited. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.DevelopmentalStageActivity.verify|verify} messages.
                 * @param message DevelopmentalStageActivity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.developmental_stage.IDevelopmentalStageActivity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DevelopmentalStageActivity message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DevelopmentalStageActivity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.developmental_stage.DevelopmentalStageActivity;

                /**
                 * Decodes a DevelopmentalStageActivity message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DevelopmentalStageActivity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.developmental_stage.DevelopmentalStageActivity;

                /**
                 * Verifies a DevelopmentalStageActivity message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DevelopmentalStageActivity message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DevelopmentalStageActivity
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.developmental_stage.DevelopmentalStageActivity;

                /**
                 * Creates a plain object from a DevelopmentalStageActivity message. Also converts values to other types if specified.
                 * @param message DevelopmentalStageActivity
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.developmental_stage.DevelopmentalStageActivity, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DevelopmentalStageActivity to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DevelopmentalStageActivity
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an ActivityCompletion. */
            interface IActivityCompletion {

                /** ActivityCompletion completionId */
                completionId?: (string|null);

                /** ActivityCompletion activityId */
                activityId?: (string|null);

                /** ActivityCompletion userId */
                userId?: (string|null);

                /** ActivityCompletion completionTimeMs */
                completionTimeMs?: (number|Long|null);

                /** ActivityCompletion awardedExperience */
                awardedExperience?: (number|null);

                /** ActivityCompletion progressContribution */
                progressContribution?: (number|null);

                /** ActivityCompletion evidence */
                evidence?: (Uint8Array|null);

                /** ActivityCompletion validatorIds */
                validatorIds?: (string[]|null);
            }

            /** Represents an ActivityCompletion. */
            class ActivityCompletion implements IActivityCompletion {

                /**
                 * Constructs a new ActivityCompletion.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.developmental_stage.IActivityCompletion);

                /** ActivityCompletion completionId. */
                public completionId: string;

                /** ActivityCompletion activityId. */
                public activityId: string;

                /** ActivityCompletion userId. */
                public userId: string;

                /** ActivityCompletion completionTimeMs. */
                public completionTimeMs: (number|Long);

                /** ActivityCompletion awardedExperience. */
                public awardedExperience: number;

                /** ActivityCompletion progressContribution. */
                public progressContribution: number;

                /** ActivityCompletion evidence. */
                public evidence: Uint8Array;

                /** ActivityCompletion validatorIds. */
                public validatorIds: string[];

                /**
                 * Creates a new ActivityCompletion instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ActivityCompletion instance
                 */
                public static create(properties?: juicetokens.lifecycle.developmental_stage.IActivityCompletion): juicetokens.lifecycle.developmental_stage.ActivityCompletion;

                /**
                 * Encodes the specified ActivityCompletion message. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.ActivityCompletion.verify|verify} messages.
                 * @param message ActivityCompletion message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.developmental_stage.IActivityCompletion, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ActivityCompletion message, length delimited. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.ActivityCompletion.verify|verify} messages.
                 * @param message ActivityCompletion message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.developmental_stage.IActivityCompletion, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ActivityCompletion message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ActivityCompletion
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.developmental_stage.ActivityCompletion;

                /**
                 * Decodes an ActivityCompletion message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ActivityCompletion
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.developmental_stage.ActivityCompletion;

                /**
                 * Verifies an ActivityCompletion message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ActivityCompletion message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ActivityCompletion
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.developmental_stage.ActivityCompletion;

                /**
                 * Creates a plain object from an ActivityCompletion message. Also converts values to other types if specified.
                 * @param message ActivityCompletion
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.developmental_stage.ActivityCompletion, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ActivityCompletion to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ActivityCompletion
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StageProgressionRecommendation. */
            interface IStageProgressionRecommendation {

                /** StageProgressionRecommendation userId */
                userId?: (string|null);

                /** StageProgressionRecommendation currentStage */
                currentStage?: (juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel|null);

                /** StageProgressionRecommendation currentProgress */
                currentProgress?: (number|null);

                /** StageProgressionRecommendation recommendedActivities */
                recommendedActivities?: (string[]|null);

                /** StageProgressionRecommendation recommendedConnections */
                recommendedConnections?: (string[]|null);

                /** StageProgressionRecommendation estimatedTimeToNextStageHours */
                estimatedTimeToNextStageHours?: (number|null);

                /** StageProgressionRecommendation personalizedGuidance */
                personalizedGuidance?: (string|null);
            }

            /** Represents a StageProgressionRecommendation. */
            class StageProgressionRecommendation implements IStageProgressionRecommendation {

                /**
                 * Constructs a new StageProgressionRecommendation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.developmental_stage.IStageProgressionRecommendation);

                /** StageProgressionRecommendation userId. */
                public userId: string;

                /** StageProgressionRecommendation currentStage. */
                public currentStage: juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel;

                /** StageProgressionRecommendation currentProgress. */
                public currentProgress: number;

                /** StageProgressionRecommendation recommendedActivities. */
                public recommendedActivities: string[];

                /** StageProgressionRecommendation recommendedConnections. */
                public recommendedConnections: string[];

                /** StageProgressionRecommendation estimatedTimeToNextStageHours. */
                public estimatedTimeToNextStageHours: number;

                /** StageProgressionRecommendation personalizedGuidance. */
                public personalizedGuidance: string;

                /**
                 * Creates a new StageProgressionRecommendation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StageProgressionRecommendation instance
                 */
                public static create(properties?: juicetokens.lifecycle.developmental_stage.IStageProgressionRecommendation): juicetokens.lifecycle.developmental_stage.StageProgressionRecommendation;

                /**
                 * Encodes the specified StageProgressionRecommendation message. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.StageProgressionRecommendation.verify|verify} messages.
                 * @param message StageProgressionRecommendation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.developmental_stage.IStageProgressionRecommendation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StageProgressionRecommendation message, length delimited. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.StageProgressionRecommendation.verify|verify} messages.
                 * @param message StageProgressionRecommendation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.developmental_stage.IStageProgressionRecommendation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StageProgressionRecommendation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StageProgressionRecommendation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.developmental_stage.StageProgressionRecommendation;

                /**
                 * Decodes a StageProgressionRecommendation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StageProgressionRecommendation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.developmental_stage.StageProgressionRecommendation;

                /**
                 * Verifies a StageProgressionRecommendation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StageProgressionRecommendation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StageProgressionRecommendation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.developmental_stage.StageProgressionRecommendation;

                /**
                 * Creates a plain object from a StageProgressionRecommendation message. Also converts values to other types if specified.
                 * @param message StageProgressionRecommendation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.developmental_stage.StageProgressionRecommendation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StageProgressionRecommendation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StageProgressionRecommendation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a DevelopmentalStageChallenge. */
            interface IDevelopmentalStageChallenge {

                /** DevelopmentalStageChallenge challengeId */
                challengeId?: (string|null);

                /** DevelopmentalStageChallenge challengeName */
                challengeName?: (string|null);

                /** DevelopmentalStageChallenge description */
                description?: (string|null);

                /** DevelopmentalStageChallenge targetStage */
                targetStage?: (juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel|null);

                /** DevelopmentalStageChallenge difficulty */
                difficulty?: (number|null);

                /** DevelopmentalStageChallenge experienceReward */
                experienceReward?: (number|null);

                /** DevelopmentalStageChallenge prerequisiteChallenges */
                prerequisiteChallenges?: (string[]|null);

                /** DevelopmentalStageChallenge requiredSkills */
                requiredSkills?: (string[]|null);

                /** DevelopmentalStageChallenge completionCriteria */
                completionCriteria?: ({ [k: string]: number }|null);
            }

            /** Represents a DevelopmentalStageChallenge. */
            class DevelopmentalStageChallenge implements IDevelopmentalStageChallenge {

                /**
                 * Constructs a new DevelopmentalStageChallenge.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.developmental_stage.IDevelopmentalStageChallenge);

                /** DevelopmentalStageChallenge challengeId. */
                public challengeId: string;

                /** DevelopmentalStageChallenge challengeName. */
                public challengeName: string;

                /** DevelopmentalStageChallenge description. */
                public description: string;

                /** DevelopmentalStageChallenge targetStage. */
                public targetStage: juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel;

                /** DevelopmentalStageChallenge difficulty. */
                public difficulty: number;

                /** DevelopmentalStageChallenge experienceReward. */
                public experienceReward: number;

                /** DevelopmentalStageChallenge prerequisiteChallenges. */
                public prerequisiteChallenges: string[];

                /** DevelopmentalStageChallenge requiredSkills. */
                public requiredSkills: string[];

                /** DevelopmentalStageChallenge completionCriteria. */
                public completionCriteria: { [k: string]: number };

                /**
                 * Creates a new DevelopmentalStageChallenge instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns DevelopmentalStageChallenge instance
                 */
                public static create(properties?: juicetokens.lifecycle.developmental_stage.IDevelopmentalStageChallenge): juicetokens.lifecycle.developmental_stage.DevelopmentalStageChallenge;

                /**
                 * Encodes the specified DevelopmentalStageChallenge message. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.DevelopmentalStageChallenge.verify|verify} messages.
                 * @param message DevelopmentalStageChallenge message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.developmental_stage.IDevelopmentalStageChallenge, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified DevelopmentalStageChallenge message, length delimited. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.DevelopmentalStageChallenge.verify|verify} messages.
                 * @param message DevelopmentalStageChallenge message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.developmental_stage.IDevelopmentalStageChallenge, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a DevelopmentalStageChallenge message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns DevelopmentalStageChallenge
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.developmental_stage.DevelopmentalStageChallenge;

                /**
                 * Decodes a DevelopmentalStageChallenge message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns DevelopmentalStageChallenge
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.developmental_stage.DevelopmentalStageChallenge;

                /**
                 * Verifies a DevelopmentalStageChallenge message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a DevelopmentalStageChallenge message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns DevelopmentalStageChallenge
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.developmental_stage.DevelopmentalStageChallenge;

                /**
                 * Creates a plain object from a DevelopmentalStageChallenge message. Also converts values to other types if specified.
                 * @param message DevelopmentalStageChallenge
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.developmental_stage.DevelopmentalStageChallenge, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this DevelopmentalStageChallenge to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for DevelopmentalStageChallenge
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a StageMilestone. */
            interface IStageMilestone {

                /** StageMilestone milestoneId */
                milestoneId?: (string|null);

                /** StageMilestone milestoneName */
                milestoneName?: (string|null);

                /** StageMilestone description */
                description?: (string|null);

                /** StageMilestone stage */
                stage?: (juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel|null);

                /** StageMilestone stageProgressThreshold */
                stageProgressThreshold?: (number|null);

                /** StageMilestone experienceReward */
                experienceReward?: (number|null);

                /** StageMilestone isStageTransition */
                isStageTransition?: (boolean|null);

                /** StageMilestone prerequisiteMilestones */
                prerequisiteMilestones?: (string[]|null);

                /** StageMilestone achievementProof */
                achievementProof?: (Uint8Array|null);
            }

            /** Represents a StageMilestone. */
            class StageMilestone implements IStageMilestone {

                /**
                 * Constructs a new StageMilestone.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.developmental_stage.IStageMilestone);

                /** StageMilestone milestoneId. */
                public milestoneId: string;

                /** StageMilestone milestoneName. */
                public milestoneName: string;

                /** StageMilestone description. */
                public description: string;

                /** StageMilestone stage. */
                public stage: juicetokens.lifecycle.developmental_stage.DevelopmentalStageLevel;

                /** StageMilestone stageProgressThreshold. */
                public stageProgressThreshold: number;

                /** StageMilestone experienceReward. */
                public experienceReward: number;

                /** StageMilestone isStageTransition. */
                public isStageTransition: boolean;

                /** StageMilestone prerequisiteMilestones. */
                public prerequisiteMilestones: string[];

                /** StageMilestone achievementProof. */
                public achievementProof: Uint8Array;

                /**
                 * Creates a new StageMilestone instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns StageMilestone instance
                 */
                public static create(properties?: juicetokens.lifecycle.developmental_stage.IStageMilestone): juicetokens.lifecycle.developmental_stage.StageMilestone;

                /**
                 * Encodes the specified StageMilestone message. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.StageMilestone.verify|verify} messages.
                 * @param message StageMilestone message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.developmental_stage.IStageMilestone, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified StageMilestone message, length delimited. Does not implicitly {@link juicetokens.lifecycle.developmental_stage.StageMilestone.verify|verify} messages.
                 * @param message StageMilestone message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.developmental_stage.IStageMilestone, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a StageMilestone message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns StageMilestone
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.developmental_stage.StageMilestone;

                /**
                 * Decodes a StageMilestone message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns StageMilestone
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.developmental_stage.StageMilestone;

                /**
                 * Verifies a StageMilestone message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a StageMilestone message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns StageMilestone
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.developmental_stage.StageMilestone;

                /**
                 * Creates a plain object from a StageMilestone message. Also converts values to other types if specified.
                 * @param message StageMilestone
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.developmental_stage.StageMilestone, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this StageMilestone to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for StageMilestone
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Namespace future. */
        namespace future {

            /** Properties of a PromiseCreation. */
            interface IPromiseCreation {

                /** PromiseCreation promiseId */
                promiseId?: (string|null);

                /** PromiseCreation creatorId */
                creatorId?: (string|null);

                /** PromiseCreation beneficiaryId */
                beneficiaryId?: (string|null);

                /** PromiseCreation promiseDescription */
                promiseDescription?: (string|null);

                /** PromiseCreation valueAmount */
                valueAmount?: (number|Long|null);

                /** PromiseCreation dueDateMs */
                dueDateMs?: (number|Long|null);

                /** PromiseCreation verificationRequirements */
                verificationRequirements?: (juicetokens.lifecycle.future.IVerificationRequirement[]|null);

                /** PromiseCreation creatorSignature */
                creatorSignature?: (Uint8Array|null);
            }

            /** Represents a PromiseCreation. */
            class PromiseCreation implements IPromiseCreation {

                /**
                 * Constructs a new PromiseCreation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IPromiseCreation);

                /** PromiseCreation promiseId. */
                public promiseId: string;

                /** PromiseCreation creatorId. */
                public creatorId: string;

                /** PromiseCreation beneficiaryId. */
                public beneficiaryId: string;

                /** PromiseCreation promiseDescription. */
                public promiseDescription: string;

                /** PromiseCreation valueAmount. */
                public valueAmount: (number|Long);

                /** PromiseCreation dueDateMs. */
                public dueDateMs: (number|Long);

                /** PromiseCreation verificationRequirements. */
                public verificationRequirements: juicetokens.lifecycle.future.IVerificationRequirement[];

                /** PromiseCreation creatorSignature. */
                public creatorSignature: Uint8Array;

                /**
                 * Creates a new PromiseCreation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PromiseCreation instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IPromiseCreation): juicetokens.lifecycle.future.PromiseCreation;

                /**
                 * Encodes the specified PromiseCreation message. Does not implicitly {@link juicetokens.lifecycle.future.PromiseCreation.verify|verify} messages.
                 * @param message PromiseCreation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IPromiseCreation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PromiseCreation message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.PromiseCreation.verify|verify} messages.
                 * @param message PromiseCreation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IPromiseCreation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PromiseCreation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PromiseCreation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.PromiseCreation;

                /**
                 * Decodes a PromiseCreation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PromiseCreation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.PromiseCreation;

                /**
                 * Verifies a PromiseCreation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PromiseCreation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PromiseCreation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.PromiseCreation;

                /**
                 * Creates a plain object from a PromiseCreation message. Also converts values to other types if specified.
                 * @param message PromiseCreation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.PromiseCreation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PromiseCreation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PromiseCreation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a VerificationRequirement. */
            interface IVerificationRequirement {

                /** VerificationRequirement requirementId */
                requirementId?: (string|null);

                /** VerificationRequirement description */
                description?: (string|null);

                /** VerificationRequirement requirementType */
                requirementType?: (juicetokens.lifecycle.future.VerificationRequirement.RequirementType|null);

                /** VerificationRequirement requirementParameters */
                requirementParameters?: (Uint8Array|null);

                /** VerificationRequirement optional */
                optional?: (boolean|null);

                /** VerificationRequirement weight */
                weight?: (number|null);
            }

            /** Represents a VerificationRequirement. */
            class VerificationRequirement implements IVerificationRequirement {

                /**
                 * Constructs a new VerificationRequirement.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IVerificationRequirement);

                /** VerificationRequirement requirementId. */
                public requirementId: string;

                /** VerificationRequirement description. */
                public description: string;

                /** VerificationRequirement requirementType. */
                public requirementType: juicetokens.lifecycle.future.VerificationRequirement.RequirementType;

                /** VerificationRequirement requirementParameters. */
                public requirementParameters: Uint8Array;

                /** VerificationRequirement optional. */
                public optional: boolean;

                /** VerificationRequirement weight. */
                public weight: number;

                /**
                 * Creates a new VerificationRequirement instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns VerificationRequirement instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IVerificationRequirement): juicetokens.lifecycle.future.VerificationRequirement;

                /**
                 * Encodes the specified VerificationRequirement message. Does not implicitly {@link juicetokens.lifecycle.future.VerificationRequirement.verify|verify} messages.
                 * @param message VerificationRequirement message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IVerificationRequirement, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified VerificationRequirement message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.VerificationRequirement.verify|verify} messages.
                 * @param message VerificationRequirement message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IVerificationRequirement, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VerificationRequirement message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns VerificationRequirement
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.VerificationRequirement;

                /**
                 * Decodes a VerificationRequirement message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns VerificationRequirement
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.VerificationRequirement;

                /**
                 * Verifies a VerificationRequirement message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a VerificationRequirement message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns VerificationRequirement
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.VerificationRequirement;

                /**
                 * Creates a plain object from a VerificationRequirement message. Also converts values to other types if specified.
                 * @param message VerificationRequirement
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.VerificationRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this VerificationRequirement to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for VerificationRequirement
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace VerificationRequirement {

                /** RequirementType enum. */
                enum RequirementType {
                    ATTESTATION = 0,
                    EVIDENCE = 1,
                    TIMELOCK = 2,
                    CONDITIONAL = 3
                }
            }

            /** Properties of a FulfillmentTracking. */
            interface IFulfillmentTracking {

                /** FulfillmentTracking promiseId */
                promiseId?: (string|null);

                /** FulfillmentTracking requirementStatuses */
                requirementStatuses?: (juicetokens.lifecycle.future.IRequirementStatus[]|null);

                /** FulfillmentTracking overallCompletionPercentage */
                overallCompletionPercentage?: (number|null);

                /** FulfillmentTracking lastUpdateMs */
                lastUpdateMs?: (number|Long|null);

                /** FulfillmentTracking state */
                state?: (juicetokens.lifecycle.future.FulfillmentTracking.FulfillmentState|null);
            }

            /** Represents a FulfillmentTracking. */
            class FulfillmentTracking implements IFulfillmentTracking {

                /**
                 * Constructs a new FulfillmentTracking.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IFulfillmentTracking);

                /** FulfillmentTracking promiseId. */
                public promiseId: string;

                /** FulfillmentTracking requirementStatuses. */
                public requirementStatuses: juicetokens.lifecycle.future.IRequirementStatus[];

                /** FulfillmentTracking overallCompletionPercentage. */
                public overallCompletionPercentage: number;

                /** FulfillmentTracking lastUpdateMs. */
                public lastUpdateMs: (number|Long);

                /** FulfillmentTracking state. */
                public state: juicetokens.lifecycle.future.FulfillmentTracking.FulfillmentState;

                /**
                 * Creates a new FulfillmentTracking instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns FulfillmentTracking instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IFulfillmentTracking): juicetokens.lifecycle.future.FulfillmentTracking;

                /**
                 * Encodes the specified FulfillmentTracking message. Does not implicitly {@link juicetokens.lifecycle.future.FulfillmentTracking.verify|verify} messages.
                 * @param message FulfillmentTracking message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IFulfillmentTracking, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified FulfillmentTracking message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.FulfillmentTracking.verify|verify} messages.
                 * @param message FulfillmentTracking message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IFulfillmentTracking, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a FulfillmentTracking message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns FulfillmentTracking
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.FulfillmentTracking;

                /**
                 * Decodes a FulfillmentTracking message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns FulfillmentTracking
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.FulfillmentTracking;

                /**
                 * Verifies a FulfillmentTracking message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a FulfillmentTracking message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns FulfillmentTracking
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.FulfillmentTracking;

                /**
                 * Creates a plain object from a FulfillmentTracking message. Also converts values to other types if specified.
                 * @param message FulfillmentTracking
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.FulfillmentTracking, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this FulfillmentTracking to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for FulfillmentTracking
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace FulfillmentTracking {

                /** FulfillmentState enum. */
                enum FulfillmentState {
                    NOT_STARTED = 0,
                    IN_PROGRESS = 1,
                    PARTIALLY_FULFILLED = 2,
                    FULFILLED = 3,
                    DISPUTED = 4,
                    CANCELED = 5
                }
            }

            /** Properties of a RequirementStatus. */
            interface IRequirementStatus {

                /** RequirementStatus requirementId */
                requirementId?: (string|null);

                /** RequirementStatus completionPercentage */
                completionPercentage?: (number|null);

                /** RequirementStatus statusDescription */
                statusDescription?: (string|null);

                /** RequirementStatus evidenceReferences */
                evidenceReferences?: (string[]|null);

                /** RequirementStatus lastUpdateMs */
                lastUpdateMs?: (number|Long|null);
            }

            /** Represents a RequirementStatus. */
            class RequirementStatus implements IRequirementStatus {

                /**
                 * Constructs a new RequirementStatus.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IRequirementStatus);

                /** RequirementStatus requirementId. */
                public requirementId: string;

                /** RequirementStatus completionPercentage. */
                public completionPercentage: number;

                /** RequirementStatus statusDescription. */
                public statusDescription: string;

                /** RequirementStatus evidenceReferences. */
                public evidenceReferences: string[];

                /** RequirementStatus lastUpdateMs. */
                public lastUpdateMs: (number|Long);

                /**
                 * Creates a new RequirementStatus instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RequirementStatus instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IRequirementStatus): juicetokens.lifecycle.future.RequirementStatus;

                /**
                 * Encodes the specified RequirementStatus message. Does not implicitly {@link juicetokens.lifecycle.future.RequirementStatus.verify|verify} messages.
                 * @param message RequirementStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IRequirementStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RequirementStatus message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.RequirementStatus.verify|verify} messages.
                 * @param message RequirementStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IRequirementStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RequirementStatus message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RequirementStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.RequirementStatus;

                /**
                 * Decodes a RequirementStatus message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RequirementStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.RequirementStatus;

                /**
                 * Verifies a RequirementStatus message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RequirementStatus message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RequirementStatus
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.RequirementStatus;

                /**
                 * Creates a plain object from a RequirementStatus message. Also converts values to other types if specified.
                 * @param message RequirementStatus
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.RequirementStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RequirementStatus to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RequirementStatus
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PromiseMetadata. */
            interface IPromiseMetadata {

                /** PromiseMetadata promiseId */
                promiseId?: (string|null);

                /** PromiseMetadata category */
                category?: (string|null);

                /** PromiseMetadata context */
                context?: (string|null);

                /** PromiseMetadata tags */
                tags?: (string[]|null);

                /** PromiseMetadata public */
                "public"?: (boolean|null);

                /** PromiseMetadata customAttributes */
                customAttributes?: ({ [k: string]: string }|null);
            }

            /** Represents a PromiseMetadata. */
            class PromiseMetadata implements IPromiseMetadata {

                /**
                 * Constructs a new PromiseMetadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IPromiseMetadata);

                /** PromiseMetadata promiseId. */
                public promiseId: string;

                /** PromiseMetadata category. */
                public category: string;

                /** PromiseMetadata context. */
                public context: string;

                /** PromiseMetadata tags. */
                public tags: string[];

                /** PromiseMetadata public. */
                public public: boolean;

                /** PromiseMetadata customAttributes. */
                public customAttributes: { [k: string]: string };

                /**
                 * Creates a new PromiseMetadata instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PromiseMetadata instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IPromiseMetadata): juicetokens.lifecycle.future.PromiseMetadata;

                /**
                 * Encodes the specified PromiseMetadata message. Does not implicitly {@link juicetokens.lifecycle.future.PromiseMetadata.verify|verify} messages.
                 * @param message PromiseMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IPromiseMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PromiseMetadata message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.PromiseMetadata.verify|verify} messages.
                 * @param message PromiseMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IPromiseMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PromiseMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PromiseMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.PromiseMetadata;

                /**
                 * Decodes a PromiseMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PromiseMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.PromiseMetadata;

                /**
                 * Verifies a PromiseMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PromiseMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PromiseMetadata
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.PromiseMetadata;

                /**
                 * Creates a plain object from a PromiseMetadata message. Also converts values to other types if specified.
                 * @param message PromiseMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.PromiseMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PromiseMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PromiseMetadata
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an EscrowCondition. */
            interface IEscrowCondition {

                /** EscrowCondition conditionId */
                conditionId?: (string|null);

                /** EscrowCondition description */
                description?: (string|null);

                /** EscrowCondition conditionType */
                conditionType?: (juicetokens.lifecycle.future.EscrowCondition.ConditionType|null);

                /** EscrowCondition conditionParameters */
                conditionParameters?: (Uint8Array|null);

                /** EscrowCondition negated */
                negated?: (boolean|null);
            }

            /** Represents an EscrowCondition. */
            class EscrowCondition implements IEscrowCondition {

                /**
                 * Constructs a new EscrowCondition.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IEscrowCondition);

                /** EscrowCondition conditionId. */
                public conditionId: string;

                /** EscrowCondition description. */
                public description: string;

                /** EscrowCondition conditionType. */
                public conditionType: juicetokens.lifecycle.future.EscrowCondition.ConditionType;

                /** EscrowCondition conditionParameters. */
                public conditionParameters: Uint8Array;

                /** EscrowCondition negated. */
                public negated: boolean;

                /**
                 * Creates a new EscrowCondition instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns EscrowCondition instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IEscrowCondition): juicetokens.lifecycle.future.EscrowCondition;

                /**
                 * Encodes the specified EscrowCondition message. Does not implicitly {@link juicetokens.lifecycle.future.EscrowCondition.verify|verify} messages.
                 * @param message EscrowCondition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IEscrowCondition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EscrowCondition message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.EscrowCondition.verify|verify} messages.
                 * @param message EscrowCondition message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IEscrowCondition, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EscrowCondition message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EscrowCondition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.EscrowCondition;

                /**
                 * Decodes an EscrowCondition message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EscrowCondition
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.EscrowCondition;

                /**
                 * Verifies an EscrowCondition message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EscrowCondition message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EscrowCondition
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.EscrowCondition;

                /**
                 * Creates a plain object from an EscrowCondition message. Also converts values to other types if specified.
                 * @param message EscrowCondition
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.EscrowCondition, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EscrowCondition to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for EscrowCondition
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace EscrowCondition {

                /** ConditionType enum. */
                enum ConditionType {
                    TIME_BASED = 0,
                    EVENT_BASED = 1,
                    MULTI_SIG = 2,
                    ORACLE_BASED = 3
                }
            }

            /** Properties of a MultiSignatureRequirement. */
            interface IMultiSignatureRequirement {

                /** MultiSignatureRequirement requirementId */
                requirementId?: (string|null);

                /** MultiSignatureRequirement requiredSigners */
                requiredSigners?: (string[]|null);

                /** MultiSignatureRequirement threshold */
                threshold?: (number|null);

                /** MultiSignatureRequirement timeoutHours */
                timeoutHours?: (number|null);

                /** MultiSignatureRequirement allowDelegation */
                allowDelegation?: (boolean|null);
            }

            /** Represents a MultiSignatureRequirement. */
            class MultiSignatureRequirement implements IMultiSignatureRequirement {

                /**
                 * Constructs a new MultiSignatureRequirement.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IMultiSignatureRequirement);

                /** MultiSignatureRequirement requirementId. */
                public requirementId: string;

                /** MultiSignatureRequirement requiredSigners. */
                public requiredSigners: string[];

                /** MultiSignatureRequirement threshold. */
                public threshold: number;

                /** MultiSignatureRequirement timeoutHours. */
                public timeoutHours: number;

                /** MultiSignatureRequirement allowDelegation. */
                public allowDelegation: boolean;

                /**
                 * Creates a new MultiSignatureRequirement instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns MultiSignatureRequirement instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IMultiSignatureRequirement): juicetokens.lifecycle.future.MultiSignatureRequirement;

                /**
                 * Encodes the specified MultiSignatureRequirement message. Does not implicitly {@link juicetokens.lifecycle.future.MultiSignatureRequirement.verify|verify} messages.
                 * @param message MultiSignatureRequirement message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IMultiSignatureRequirement, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified MultiSignatureRequirement message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.MultiSignatureRequirement.verify|verify} messages.
                 * @param message MultiSignatureRequirement message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IMultiSignatureRequirement, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a MultiSignatureRequirement message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns MultiSignatureRequirement
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.MultiSignatureRequirement;

                /**
                 * Decodes a MultiSignatureRequirement message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns MultiSignatureRequirement
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.MultiSignatureRequirement;

                /**
                 * Verifies a MultiSignatureRequirement message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a MultiSignatureRequirement message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns MultiSignatureRequirement
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.MultiSignatureRequirement;

                /**
                 * Creates a plain object from a MultiSignatureRequirement message. Also converts values to other types if specified.
                 * @param message MultiSignatureRequirement
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.MultiSignatureRequirement, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this MultiSignatureRequirement to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for MultiSignatureRequirement
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TimeBasedTrigger. */
            interface ITimeBasedTrigger {

                /** TimeBasedTrigger triggerId */
                triggerId?: (string|null);

                /** TimeBasedTrigger triggerTimeMs */
                triggerTimeMs?: (number|Long|null);

                /** TimeBasedTrigger releaseOnTrigger */
                releaseOnTrigger?: (boolean|null);

                /** TimeBasedTrigger recurring */
                recurring?: (boolean|null);

                /** TimeBasedTrigger recurrenceIntervalHours */
                recurrenceIntervalHours?: (number|null);

                /** TimeBasedTrigger maxRecurrences */
                maxRecurrences?: (number|null);
            }

            /** Represents a TimeBasedTrigger. */
            class TimeBasedTrigger implements ITimeBasedTrigger {

                /**
                 * Constructs a new TimeBasedTrigger.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.ITimeBasedTrigger);

                /** TimeBasedTrigger triggerId. */
                public triggerId: string;

                /** TimeBasedTrigger triggerTimeMs. */
                public triggerTimeMs: (number|Long);

                /** TimeBasedTrigger releaseOnTrigger. */
                public releaseOnTrigger: boolean;

                /** TimeBasedTrigger recurring. */
                public recurring: boolean;

                /** TimeBasedTrigger recurrenceIntervalHours. */
                public recurrenceIntervalHours: number;

                /** TimeBasedTrigger maxRecurrences. */
                public maxRecurrences: number;

                /**
                 * Creates a new TimeBasedTrigger instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TimeBasedTrigger instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.ITimeBasedTrigger): juicetokens.lifecycle.future.TimeBasedTrigger;

                /**
                 * Encodes the specified TimeBasedTrigger message. Does not implicitly {@link juicetokens.lifecycle.future.TimeBasedTrigger.verify|verify} messages.
                 * @param message TimeBasedTrigger message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.ITimeBasedTrigger, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TimeBasedTrigger message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.TimeBasedTrigger.verify|verify} messages.
                 * @param message TimeBasedTrigger message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.ITimeBasedTrigger, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TimeBasedTrigger message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TimeBasedTrigger
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.TimeBasedTrigger;

                /**
                 * Decodes a TimeBasedTrigger message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TimeBasedTrigger
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.TimeBasedTrigger;

                /**
                 * Verifies a TimeBasedTrigger message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TimeBasedTrigger message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TimeBasedTrigger
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.TimeBasedTrigger;

                /**
                 * Creates a plain object from a TimeBasedTrigger message. Also converts values to other types if specified.
                 * @param message TimeBasedTrigger
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.TimeBasedTrigger, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TimeBasedTrigger to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TimeBasedTrigger
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of an EscrowStatus. */
            interface IEscrowStatus {

                /** EscrowStatus escrowId */
                escrowId?: (string|null);

                /** EscrowStatus escrowedTokens */
                escrowedTokens?: (juicetokens.token.model.ITokenId[]|null);

                /** EscrowStatus depositorId */
                depositorId?: (string|null);

                /** EscrowStatus recipientId */
                recipientId?: (string|null);

                /** EscrowStatus conditions */
                conditions?: (juicetokens.lifecycle.future.IEscrowCondition[]|null);

                /** EscrowStatus status */
                status?: (juicetokens.lifecycle.future.EscrowStatus.Status|null);

                /** EscrowStatus creationMs */
                creationMs?: (number|Long|null);

                /** EscrowStatus lastUpdateMs */
                lastUpdateMs?: (number|Long|null);
            }

            /** Represents an EscrowStatus. */
            class EscrowStatus implements IEscrowStatus {

                /**
                 * Constructs a new EscrowStatus.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IEscrowStatus);

                /** EscrowStatus escrowId. */
                public escrowId: string;

                /** EscrowStatus escrowedTokens. */
                public escrowedTokens: juicetokens.token.model.ITokenId[];

                /** EscrowStatus depositorId. */
                public depositorId: string;

                /** EscrowStatus recipientId. */
                public recipientId: string;

                /** EscrowStatus conditions. */
                public conditions: juicetokens.lifecycle.future.IEscrowCondition[];

                /** EscrowStatus status. */
                public status: juicetokens.lifecycle.future.EscrowStatus.Status;

                /** EscrowStatus creationMs. */
                public creationMs: (number|Long);

                /** EscrowStatus lastUpdateMs. */
                public lastUpdateMs: (number|Long);

                /**
                 * Creates a new EscrowStatus instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns EscrowStatus instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IEscrowStatus): juicetokens.lifecycle.future.EscrowStatus;

                /**
                 * Encodes the specified EscrowStatus message. Does not implicitly {@link juicetokens.lifecycle.future.EscrowStatus.verify|verify} messages.
                 * @param message EscrowStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IEscrowStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified EscrowStatus message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.EscrowStatus.verify|verify} messages.
                 * @param message EscrowStatus message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IEscrowStatus, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an EscrowStatus message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns EscrowStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.EscrowStatus;

                /**
                 * Decodes an EscrowStatus message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns EscrowStatus
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.EscrowStatus;

                /**
                 * Verifies an EscrowStatus message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an EscrowStatus message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns EscrowStatus
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.EscrowStatus;

                /**
                 * Creates a plain object from an EscrowStatus message. Also converts values to other types if specified.
                 * @param message EscrowStatus
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.EscrowStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this EscrowStatus to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for EscrowStatus
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace EscrowStatus {

                /** Status enum. */
                enum Status {
                    ACTIVE = 0,
                    FULFILLED = 1,
                    REFUNDED = 2,
                    DISPUTED = 3,
                    EXPIRED = 4
                }
            }

            /** Properties of a GroupCommitment. */
            interface IGroupCommitment {

                /** GroupCommitment commitmentId */
                commitmentId?: (string|null);

                /** GroupCommitment groupId */
                groupId?: (string|null);

                /** GroupCommitment commitmentPurpose */
                commitmentPurpose?: (string|null);

                /** GroupCommitment participantIds */
                participantIds?: (string[]|null);

                /** GroupCommitment contributions */
                contributions?: ({ [k: string]: (number|Long) }|null);

                /** GroupCommitment totalValue */
                totalValue?: (number|Long|null);

                /** GroupCommitment creationMs */
                creationMs?: (number|Long|null);

                /** GroupCommitment fulfillmentDeadlineMs */
                fulfillmentDeadlineMs?: (number|Long|null);
            }

            /** Represents a GroupCommitment. */
            class GroupCommitment implements IGroupCommitment {

                /**
                 * Constructs a new GroupCommitment.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IGroupCommitment);

                /** GroupCommitment commitmentId. */
                public commitmentId: string;

                /** GroupCommitment groupId. */
                public groupId: string;

                /** GroupCommitment commitmentPurpose. */
                public commitmentPurpose: string;

                /** GroupCommitment participantIds. */
                public participantIds: string[];

                /** GroupCommitment contributions. */
                public contributions: { [k: string]: (number|Long) };

                /** GroupCommitment totalValue. */
                public totalValue: (number|Long);

                /** GroupCommitment creationMs. */
                public creationMs: (number|Long);

                /** GroupCommitment fulfillmentDeadlineMs. */
                public fulfillmentDeadlineMs: (number|Long);

                /**
                 * Creates a new GroupCommitment instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns GroupCommitment instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IGroupCommitment): juicetokens.lifecycle.future.GroupCommitment;

                /**
                 * Encodes the specified GroupCommitment message. Does not implicitly {@link juicetokens.lifecycle.future.GroupCommitment.verify|verify} messages.
                 * @param message GroupCommitment message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IGroupCommitment, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified GroupCommitment message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.GroupCommitment.verify|verify} messages.
                 * @param message GroupCommitment message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IGroupCommitment, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a GroupCommitment message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns GroupCommitment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.GroupCommitment;

                /**
                 * Decodes a GroupCommitment message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns GroupCommitment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.GroupCommitment;

                /**
                 * Verifies a GroupCommitment message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a GroupCommitment message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns GroupCommitment
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.GroupCommitment;

                /**
                 * Creates a plain object from a GroupCommitment message. Also converts values to other types if specified.
                 * @param message GroupCommitment
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.GroupCommitment, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this GroupCommitment to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for GroupCommitment
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RiskDistribution. */
            interface IRiskDistribution {

                /** RiskDistribution distributionId */
                distributionId?: (string|null);

                /** RiskDistribution parentCommitmentId */
                parentCommitmentId?: (string|null);

                /** RiskDistribution riskWeights */
                riskWeights?: ({ [k: string]: number }|null);

                /** RiskDistribution strategy */
                strategy?: (juicetokens.lifecycle.future.RiskDistribution.RiskStrategy|null);

                /** RiskDistribution distributionRules */
                distributionRules?: (Uint8Array|null);
            }

            /** Represents a RiskDistribution. */
            class RiskDistribution implements IRiskDistribution {

                /**
                 * Constructs a new RiskDistribution.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IRiskDistribution);

                /** RiskDistribution distributionId. */
                public distributionId: string;

                /** RiskDistribution parentCommitmentId. */
                public parentCommitmentId: string;

                /** RiskDistribution riskWeights. */
                public riskWeights: { [k: string]: number };

                /** RiskDistribution strategy. */
                public strategy: juicetokens.lifecycle.future.RiskDistribution.RiskStrategy;

                /** RiskDistribution distributionRules. */
                public distributionRules: Uint8Array;

                /**
                 * Creates a new RiskDistribution instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RiskDistribution instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IRiskDistribution): juicetokens.lifecycle.future.RiskDistribution;

                /**
                 * Encodes the specified RiskDistribution message. Does not implicitly {@link juicetokens.lifecycle.future.RiskDistribution.verify|verify} messages.
                 * @param message RiskDistribution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IRiskDistribution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RiskDistribution message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.RiskDistribution.verify|verify} messages.
                 * @param message RiskDistribution message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IRiskDistribution, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RiskDistribution message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RiskDistribution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.RiskDistribution;

                /**
                 * Decodes a RiskDistribution message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RiskDistribution
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.RiskDistribution;

                /**
                 * Verifies a RiskDistribution message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RiskDistribution message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RiskDistribution
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.RiskDistribution;

                /**
                 * Creates a plain object from a RiskDistribution message. Also converts values to other types if specified.
                 * @param message RiskDistribution
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.RiskDistribution, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RiskDistribution to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RiskDistribution
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace RiskDistribution {

                /** RiskStrategy enum. */
                enum RiskStrategy {
                    EQUAL = 0,
                    PROPORTIONAL = 1,
                    CUSTOM = 2
                }
            }

            /** Properties of a CollectiveFulfillment. */
            interface ICollectiveFulfillment {

                /** CollectiveFulfillment fulfillmentId */
                fulfillmentId?: (string|null);

                /** CollectiveFulfillment parentCommitmentId */
                parentCommitmentId?: (string|null);

                /** CollectiveFulfillment verifierIds */
                verifierIds?: (string[]|null);

                /** CollectiveFulfillment verificationThreshold */
                verificationThreshold?: (number|null);

                /** CollectiveFulfillment votes */
                votes?: (juicetokens.lifecycle.future.IVerificationVote[]|null);

                /** CollectiveFulfillment status */
                status?: (juicetokens.lifecycle.future.CollectiveFulfillment.FulfillmentStatus|null);

                /** CollectiveFulfillment lastUpdateMs */
                lastUpdateMs?: (number|Long|null);
            }

            /** Represents a CollectiveFulfillment. */
            class CollectiveFulfillment implements ICollectiveFulfillment {

                /**
                 * Constructs a new CollectiveFulfillment.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.ICollectiveFulfillment);

                /** CollectiveFulfillment fulfillmentId. */
                public fulfillmentId: string;

                /** CollectiveFulfillment parentCommitmentId. */
                public parentCommitmentId: string;

                /** CollectiveFulfillment verifierIds. */
                public verifierIds: string[];

                /** CollectiveFulfillment verificationThreshold. */
                public verificationThreshold: number;

                /** CollectiveFulfillment votes. */
                public votes: juicetokens.lifecycle.future.IVerificationVote[];

                /** CollectiveFulfillment status. */
                public status: juicetokens.lifecycle.future.CollectiveFulfillment.FulfillmentStatus;

                /** CollectiveFulfillment lastUpdateMs. */
                public lastUpdateMs: (number|Long);

                /**
                 * Creates a new CollectiveFulfillment instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns CollectiveFulfillment instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.ICollectiveFulfillment): juicetokens.lifecycle.future.CollectiveFulfillment;

                /**
                 * Encodes the specified CollectiveFulfillment message. Does not implicitly {@link juicetokens.lifecycle.future.CollectiveFulfillment.verify|verify} messages.
                 * @param message CollectiveFulfillment message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.ICollectiveFulfillment, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified CollectiveFulfillment message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.CollectiveFulfillment.verify|verify} messages.
                 * @param message CollectiveFulfillment message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.ICollectiveFulfillment, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a CollectiveFulfillment message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns CollectiveFulfillment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.CollectiveFulfillment;

                /**
                 * Decodes a CollectiveFulfillment message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns CollectiveFulfillment
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.CollectiveFulfillment;

                /**
                 * Verifies a CollectiveFulfillment message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a CollectiveFulfillment message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns CollectiveFulfillment
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.CollectiveFulfillment;

                /**
                 * Creates a plain object from a CollectiveFulfillment message. Also converts values to other types if specified.
                 * @param message CollectiveFulfillment
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.CollectiveFulfillment, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this CollectiveFulfillment to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for CollectiveFulfillment
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            namespace CollectiveFulfillment {

                /** FulfillmentStatus enum. */
                enum FulfillmentStatus {
                    PENDING = 0,
                    VERIFIED = 1,
                    REJECTED = 2,
                    DISPUTED = 3
                }
            }

            /** Properties of a VerificationVote. */
            interface IVerificationVote {

                /** VerificationVote verifierId */
                verifierId?: (string|null);

                /** VerificationVote approved */
                approved?: (boolean|null);

                /** VerificationVote comment */
                comment?: (string|null);

                /** VerificationVote voteTimestampMs */
                voteTimestampMs?: (number|Long|null);

                /** VerificationVote signature */
                signature?: (Uint8Array|null);
            }

            /** Represents a VerificationVote. */
            class VerificationVote implements IVerificationVote {

                /**
                 * Constructs a new VerificationVote.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IVerificationVote);

                /** VerificationVote verifierId. */
                public verifierId: string;

                /** VerificationVote approved. */
                public approved: boolean;

                /** VerificationVote comment. */
                public comment: string;

                /** VerificationVote voteTimestampMs. */
                public voteTimestampMs: (number|Long);

                /** VerificationVote signature. */
                public signature: Uint8Array;

                /**
                 * Creates a new VerificationVote instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns VerificationVote instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IVerificationVote): juicetokens.lifecycle.future.VerificationVote;

                /**
                 * Encodes the specified VerificationVote message. Does not implicitly {@link juicetokens.lifecycle.future.VerificationVote.verify|verify} messages.
                 * @param message VerificationVote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IVerificationVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified VerificationVote message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.VerificationVote.verify|verify} messages.
                 * @param message VerificationVote message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IVerificationVote, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a VerificationVote message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns VerificationVote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.VerificationVote;

                /**
                 * Decodes a VerificationVote message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns VerificationVote
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.VerificationVote;

                /**
                 * Verifies a VerificationVote message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a VerificationVote message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns VerificationVote
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.VerificationVote;

                /**
                 * Creates a plain object from a VerificationVote message. Also converts values to other types if specified.
                 * @param message VerificationVote
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.VerificationVote, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this VerificationVote to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for VerificationVote
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a PoolMetadata. */
            interface IPoolMetadata {

                /** PoolMetadata poolId */
                poolId?: (string|null);

                /** PoolMetadata name */
                name?: (string|null);

                /** PoolMetadata description */
                description?: (string|null);

                /** PoolMetadata category */
                category?: (string|null);

                /** PoolMetadata tags */
                tags?: (string[]|null);

                /** PoolMetadata public */
                "public"?: (boolean|null);

                /** PoolMetadata customAttributes */
                customAttributes?: ({ [k: string]: string }|null);
            }

            /** Represents a PoolMetadata. */
            class PoolMetadata implements IPoolMetadata {

                /**
                 * Constructs a new PoolMetadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.future.IPoolMetadata);

                /** PoolMetadata poolId. */
                public poolId: string;

                /** PoolMetadata name. */
                public name: string;

                /** PoolMetadata description. */
                public description: string;

                /** PoolMetadata category. */
                public category: string;

                /** PoolMetadata tags. */
                public tags: string[];

                /** PoolMetadata public. */
                public public: boolean;

                /** PoolMetadata customAttributes. */
                public customAttributes: { [k: string]: string };

                /**
                 * Creates a new PoolMetadata instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns PoolMetadata instance
                 */
                public static create(properties?: juicetokens.lifecycle.future.IPoolMetadata): juicetokens.lifecycle.future.PoolMetadata;

                /**
                 * Encodes the specified PoolMetadata message. Does not implicitly {@link juicetokens.lifecycle.future.PoolMetadata.verify|verify} messages.
                 * @param message PoolMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.future.IPoolMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified PoolMetadata message, length delimited. Does not implicitly {@link juicetokens.lifecycle.future.PoolMetadata.verify|verify} messages.
                 * @param message PoolMetadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.future.IPoolMetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a PoolMetadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns PoolMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.future.PoolMetadata;

                /**
                 * Decodes a PoolMetadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns PoolMetadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.future.PoolMetadata;

                /**
                 * Verifies a PoolMetadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a PoolMetadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns PoolMetadata
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.future.PoolMetadata;

                /**
                 * Creates a plain object from a PoolMetadata message. Also converts values to other types if specified.
                 * @param message PoolMetadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.future.PoolMetadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this PoolMetadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for PoolMetadata
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }

        /** Namespace renewal. */
        namespace renewal {

            /** Properties of an ExpiryNotification. */
            interface IExpiryNotification {

                /** ExpiryNotification expiringTokens */
                expiringTokens?: (juicetokens.token.model.ITokenId[]|null);

                /** ExpiryNotification expiryTimestampMs */
                expiryTimestampMs?: (number|Long|null);

                /** ExpiryNotification notificationTimestampMs */
                notificationTimestampMs?: (number|Long|null);

                /** ExpiryNotification daysRemaining */
                daysRemaining?: (number|null);

                /** ExpiryNotification requiresAction */
                requiresAction?: (boolean|null);
            }

            /** Represents an ExpiryNotification. */
            class ExpiryNotification implements IExpiryNotification {

                /**
                 * Constructs a new ExpiryNotification.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.renewal.IExpiryNotification);

                /** ExpiryNotification expiringTokens. */
                public expiringTokens: juicetokens.token.model.ITokenId[];

                /** ExpiryNotification expiryTimestampMs. */
                public expiryTimestampMs: (number|Long);

                /** ExpiryNotification notificationTimestampMs. */
                public notificationTimestampMs: (number|Long);

                /** ExpiryNotification daysRemaining. */
                public daysRemaining: number;

                /** ExpiryNotification requiresAction. */
                public requiresAction: boolean;

                /**
                 * Creates a new ExpiryNotification instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExpiryNotification instance
                 */
                public static create(properties?: juicetokens.lifecycle.renewal.IExpiryNotification): juicetokens.lifecycle.renewal.ExpiryNotification;

                /**
                 * Encodes the specified ExpiryNotification message. Does not implicitly {@link juicetokens.lifecycle.renewal.ExpiryNotification.verify|verify} messages.
                 * @param message ExpiryNotification message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.renewal.IExpiryNotification, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExpiryNotification message, length delimited. Does not implicitly {@link juicetokens.lifecycle.renewal.ExpiryNotification.verify|verify} messages.
                 * @param message ExpiryNotification message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.renewal.IExpiryNotification, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExpiryNotification message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExpiryNotification
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.renewal.ExpiryNotification;

                /**
                 * Decodes an ExpiryNotification message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExpiryNotification
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.renewal.ExpiryNotification;

                /**
                 * Verifies an ExpiryNotification message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExpiryNotification message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExpiryNotification
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.renewal.ExpiryNotification;

                /**
                 * Creates a plain object from an ExpiryNotification message. Also converts values to other types if specified.
                 * @param message ExpiryNotification
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.renewal.ExpiryNotification, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExpiryNotification to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for ExpiryNotification
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RenewalRequest. */
            interface IRenewalRequest {

                /** RenewalRequest tokensToRenew */
                tokensToRenew?: (juicetokens.token.model.ITokenId[]|null);

                /** RenewalRequest requesterId */
                requesterId?: (string|null);

                /** RenewalRequest requestTimestampMs */
                requestTimestampMs?: (number|Long|null);

                /** RenewalRequest requestFacilitation */
                requestFacilitation?: (boolean|null);

                /** RenewalRequest message */
                message?: (string|null);
            }

            /** Represents a RenewalRequest. */
            class RenewalRequest implements IRenewalRequest {

                /**
                 * Constructs a new RenewalRequest.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.renewal.IRenewalRequest);

                /** RenewalRequest tokensToRenew. */
                public tokensToRenew: juicetokens.token.model.ITokenId[];

                /** RenewalRequest requesterId. */
                public requesterId: string;

                /** RenewalRequest requestTimestampMs. */
                public requestTimestampMs: (number|Long);

                /** RenewalRequest requestFacilitation. */
                public requestFacilitation: boolean;

                /** RenewalRequest message. */
                public message: string;

                /**
                 * Creates a new RenewalRequest instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RenewalRequest instance
                 */
                public static create(properties?: juicetokens.lifecycle.renewal.IRenewalRequest): juicetokens.lifecycle.renewal.RenewalRequest;

                /**
                 * Encodes the specified RenewalRequest message. Does not implicitly {@link juicetokens.lifecycle.renewal.RenewalRequest.verify|verify} messages.
                 * @param message RenewalRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.renewal.IRenewalRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RenewalRequest message, length delimited. Does not implicitly {@link juicetokens.lifecycle.renewal.RenewalRequest.verify|verify} messages.
                 * @param message RenewalRequest message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.renewal.IRenewalRequest, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RenewalRequest message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RenewalRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.renewal.RenewalRequest;

                /**
                 * Decodes a RenewalRequest message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RenewalRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.renewal.RenewalRequest;

                /**
                 * Verifies a RenewalRequest message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RenewalRequest message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RenewalRequest
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.renewal.RenewalRequest;

                /**
                 * Creates a plain object from a RenewalRequest message. Also converts values to other types if specified.
                 * @param message RenewalRequest
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.renewal.RenewalRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RenewalRequest to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RenewalRequest
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RenewalFacilitation. */
            interface IRenewalFacilitation {

                /** RenewalFacilitation facilitationId */
                facilitationId?: (string|null);

                /** RenewalFacilitation facilitatorId */
                facilitatorId?: (string|null);

                /** RenewalFacilitation requestorId */
                requestorId?: (string|null);

                /** RenewalFacilitation facilitatedTokens */
                facilitatedTokens?: (juicetokens.token.model.ITokenId[]|null);

                /** RenewalFacilitation facilitationTimestampMs */
                facilitationTimestampMs?: (number|Long|null);

                /** RenewalFacilitation reward */
                reward?: (juicetokens.lifecycle.renewal.IRenewalReward|null);
            }

            /** Represents a RenewalFacilitation. */
            class RenewalFacilitation implements IRenewalFacilitation {

                /**
                 * Constructs a new RenewalFacilitation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.renewal.IRenewalFacilitation);

                /** RenewalFacilitation facilitationId. */
                public facilitationId: string;

                /** RenewalFacilitation facilitatorId. */
                public facilitatorId: string;

                /** RenewalFacilitation requestorId. */
                public requestorId: string;

                /** RenewalFacilitation facilitatedTokens. */
                public facilitatedTokens: juicetokens.token.model.ITokenId[];

                /** RenewalFacilitation facilitationTimestampMs. */
                public facilitationTimestampMs: (number|Long);

                /** RenewalFacilitation reward. */
                public reward?: (juicetokens.lifecycle.renewal.IRenewalReward|null);

                /**
                 * Creates a new RenewalFacilitation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RenewalFacilitation instance
                 */
                public static create(properties?: juicetokens.lifecycle.renewal.IRenewalFacilitation): juicetokens.lifecycle.renewal.RenewalFacilitation;

                /**
                 * Encodes the specified RenewalFacilitation message. Does not implicitly {@link juicetokens.lifecycle.renewal.RenewalFacilitation.verify|verify} messages.
                 * @param message RenewalFacilitation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.renewal.IRenewalFacilitation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RenewalFacilitation message, length delimited. Does not implicitly {@link juicetokens.lifecycle.renewal.RenewalFacilitation.verify|verify} messages.
                 * @param message RenewalFacilitation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.renewal.IRenewalFacilitation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RenewalFacilitation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RenewalFacilitation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.renewal.RenewalFacilitation;

                /**
                 * Decodes a RenewalFacilitation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RenewalFacilitation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.renewal.RenewalFacilitation;

                /**
                 * Verifies a RenewalFacilitation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RenewalFacilitation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RenewalFacilitation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.renewal.RenewalFacilitation;

                /**
                 * Creates a plain object from a RenewalFacilitation message. Also converts values to other types if specified.
                 * @param message RenewalFacilitation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.renewal.RenewalFacilitation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RenewalFacilitation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RenewalFacilitation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a RenewalReward. */
            interface IRenewalReward {

                /** RenewalReward expiredValueProcessed */
                expiredValueProcessed?: (number|Long|null);

                /** RenewalReward baseFacilitationReward */
                baseFacilitationReward?: (number|Long|null);

                /** RenewalReward economicActivityMultiplier */
                economicActivityMultiplier?: (number|null);

                /** RenewalReward newTokens */
                newTokens?: (juicetokens.token.model.ITokenId[]|null);

                /** RenewalReward trustBuilding */
                trustBuilding?: (number|Long|null);

                /** RenewalReward autonomySupport */
                autonomySupport?: (number|Long|null);

                /** RenewalReward imaginationFunding */
                imaginationFunding?: (number|Long|null);

                /** RenewalReward competenceReward */
                competenceReward?: (number|Long|null);

                /** RenewalReward identityFormation */
                identityFormation?: (number|Long|null);

                /** RenewalReward connectionBridges */
                connectionBridges?: (number|Long|null);

                /** RenewalReward generativityProjects */
                generativityProjects?: (number|Long|null);
            }

            /** Represents a RenewalReward. */
            class RenewalReward implements IRenewalReward {

                /**
                 * Constructs a new RenewalReward.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.renewal.IRenewalReward);

                /** RenewalReward expiredValueProcessed. */
                public expiredValueProcessed: (number|Long);

                /** RenewalReward baseFacilitationReward. */
                public baseFacilitationReward: (number|Long);

                /** RenewalReward economicActivityMultiplier. */
                public economicActivityMultiplier: number;

                /** RenewalReward newTokens. */
                public newTokens: juicetokens.token.model.ITokenId[];

                /** RenewalReward trustBuilding. */
                public trustBuilding: (number|Long);

                /** RenewalReward autonomySupport. */
                public autonomySupport: (number|Long);

                /** RenewalReward imaginationFunding. */
                public imaginationFunding: (number|Long);

                /** RenewalReward competenceReward. */
                public competenceReward: (number|Long);

                /** RenewalReward identityFormation. */
                public identityFormation: (number|Long);

                /** RenewalReward connectionBridges. */
                public connectionBridges: (number|Long);

                /** RenewalReward generativityProjects. */
                public generativityProjects: (number|Long);

                /**
                 * Creates a new RenewalReward instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns RenewalReward instance
                 */
                public static create(properties?: juicetokens.lifecycle.renewal.IRenewalReward): juicetokens.lifecycle.renewal.RenewalReward;

                /**
                 * Encodes the specified RenewalReward message. Does not implicitly {@link juicetokens.lifecycle.renewal.RenewalReward.verify|verify} messages.
                 * @param message RenewalReward message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.renewal.IRenewalReward, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified RenewalReward message, length delimited. Does not implicitly {@link juicetokens.lifecycle.renewal.RenewalReward.verify|verify} messages.
                 * @param message RenewalReward message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.renewal.IRenewalReward, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a RenewalReward message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns RenewalReward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.renewal.RenewalReward;

                /**
                 * Decodes a RenewalReward message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns RenewalReward
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.renewal.RenewalReward;

                /**
                 * Verifies a RenewalReward message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a RenewalReward message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns RenewalReward
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.renewal.RenewalReward;

                /**
                 * Creates a plain object from a RenewalReward message. Also converts values to other types if specified.
                 * @param message RenewalReward
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.renewal.RenewalReward, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this RenewalReward to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for RenewalReward
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }

            /** Properties of a TelomeerRenewalTransformation. */
            interface ITelomeerRenewalTransformation {

                /** TelomeerRenewalTransformation oldTokenId */
                oldTokenId?: (juicetokens.token.model.ITokenId|null);

                /** TelomeerRenewalTransformation newTokenId */
                newTokenId?: (juicetokens.token.model.ITokenId|null);

                /** TelomeerRenewalTransformation ownerId */
                ownerId?: (string|null);

                /** TelomeerRenewalTransformation renewalSignature */
                renewalSignature?: (Uint8Array|null);

                /** TelomeerRenewalTransformation renewalTimestampMs */
                renewalTimestampMs?: (number|Long|null);

                /** TelomeerRenewalTransformation newExpiryMs */
                newExpiryMs?: (number|Long|null);
            }

            /** Represents a TelomeerRenewalTransformation. */
            class TelomeerRenewalTransformation implements ITelomeerRenewalTransformation {

                /**
                 * Constructs a new TelomeerRenewalTransformation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: juicetokens.lifecycle.renewal.ITelomeerRenewalTransformation);

                /** TelomeerRenewalTransformation oldTokenId. */
                public oldTokenId?: (juicetokens.token.model.ITokenId|null);

                /** TelomeerRenewalTransformation newTokenId. */
                public newTokenId?: (juicetokens.token.model.ITokenId|null);

                /** TelomeerRenewalTransformation ownerId. */
                public ownerId: string;

                /** TelomeerRenewalTransformation renewalSignature. */
                public renewalSignature: Uint8Array;

                /** TelomeerRenewalTransformation renewalTimestampMs. */
                public renewalTimestampMs: (number|Long);

                /** TelomeerRenewalTransformation newExpiryMs. */
                public newExpiryMs: (number|Long);

                /**
                 * Creates a new TelomeerRenewalTransformation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns TelomeerRenewalTransformation instance
                 */
                public static create(properties?: juicetokens.lifecycle.renewal.ITelomeerRenewalTransformation): juicetokens.lifecycle.renewal.TelomeerRenewalTransformation;

                /**
                 * Encodes the specified TelomeerRenewalTransformation message. Does not implicitly {@link juicetokens.lifecycle.renewal.TelomeerRenewalTransformation.verify|verify} messages.
                 * @param message TelomeerRenewalTransformation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: juicetokens.lifecycle.renewal.ITelomeerRenewalTransformation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified TelomeerRenewalTransformation message, length delimited. Does not implicitly {@link juicetokens.lifecycle.renewal.TelomeerRenewalTransformation.verify|verify} messages.
                 * @param message TelomeerRenewalTransformation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: juicetokens.lifecycle.renewal.ITelomeerRenewalTransformation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a TelomeerRenewalTransformation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns TelomeerRenewalTransformation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.lifecycle.renewal.TelomeerRenewalTransformation;

                /**
                 * Decodes a TelomeerRenewalTransformation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns TelomeerRenewalTransformation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.lifecycle.renewal.TelomeerRenewalTransformation;

                /**
                 * Verifies a TelomeerRenewalTransformation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a TelomeerRenewalTransformation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns TelomeerRenewalTransformation
                 */
                public static fromObject(object: { [k: string]: any }): juicetokens.lifecycle.renewal.TelomeerRenewalTransformation;

                /**
                 * Creates a plain object from a TelomeerRenewalTransformation message. Also converts values to other types if specified.
                 * @param message TelomeerRenewalTransformation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: juicetokens.lifecycle.renewal.TelomeerRenewalTransformation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this TelomeerRenewalTransformation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };

                /**
                 * Gets the default type url for TelomeerRenewalTransformation
                 * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns The default type url
                 */
                public static getTypeUrl(typeUrlPrefix?: string): string;
            }
        }
    }

    /** Namespace extension. */
    namespace extension {

        /** Properties of an ExtensionPoint. */
        interface IExtensionPoint {

            /** ExtensionPoint extensionPointId */
            extensionPointId?: (string|null);

            /** ExtensionPoint description */
            description?: (string|null);

            /** ExtensionPoint supportedActions */
            supportedActions?: (string[]|null);

            /** ExtensionPoint parameters */
            parameters?: ({ [k: string]: string }|null);
        }

        /** Represents an ExtensionPoint. */
        class ExtensionPoint implements IExtensionPoint {

            /**
             * Constructs a new ExtensionPoint.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.extension.IExtensionPoint);

            /** ExtensionPoint extensionPointId. */
            public extensionPointId: string;

            /** ExtensionPoint description. */
            public description: string;

            /** ExtensionPoint supportedActions. */
            public supportedActions: string[];

            /** ExtensionPoint parameters. */
            public parameters: { [k: string]: string };

            /**
             * Creates a new ExtensionPoint instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtensionPoint instance
             */
            public static create(properties?: juicetokens.extension.IExtensionPoint): juicetokens.extension.ExtensionPoint;

            /**
             * Encodes the specified ExtensionPoint message. Does not implicitly {@link juicetokens.extension.ExtensionPoint.verify|verify} messages.
             * @param message ExtensionPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.extension.IExtensionPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ExtensionPoint message, length delimited. Does not implicitly {@link juicetokens.extension.ExtensionPoint.verify|verify} messages.
             * @param message ExtensionPoint message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.extension.IExtensionPoint, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ExtensionPoint message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtensionPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.extension.ExtensionPoint;

            /**
             * Decodes an ExtensionPoint message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtensionPoint
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.extension.ExtensionPoint;

            /**
             * Verifies an ExtensionPoint message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtensionPoint message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtensionPoint
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.extension.ExtensionPoint;

            /**
             * Creates a plain object from an ExtensionPoint message. Also converts values to other types if specified.
             * @param message ExtensionPoint
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.extension.ExtensionPoint, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtensionPoint to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ExtensionPoint
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ExtensionRegistration. */
        interface IExtensionRegistration {

            /** ExtensionRegistration extensionId */
            extensionId?: (string|null);

            /** ExtensionRegistration name */
            name?: (string|null);

            /** ExtensionRegistration description */
            description?: (string|null);

            /** ExtensionRegistration version */
            version?: (string|null);

            /** ExtensionRegistration extensionPoints */
            extensionPoints?: (string[]|null);

            /** ExtensionRegistration capabilities */
            capabilities?: ({ [k: string]: string }|null);
        }

        /** Represents an ExtensionRegistration. */
        class ExtensionRegistration implements IExtensionRegistration {

            /**
             * Constructs a new ExtensionRegistration.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.extension.IExtensionRegistration);

            /** ExtensionRegistration extensionId. */
            public extensionId: string;

            /** ExtensionRegistration name. */
            public name: string;

            /** ExtensionRegistration description. */
            public description: string;

            /** ExtensionRegistration version. */
            public version: string;

            /** ExtensionRegistration extensionPoints. */
            public extensionPoints: string[];

            /** ExtensionRegistration capabilities. */
            public capabilities: { [k: string]: string };

            /**
             * Creates a new ExtensionRegistration instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtensionRegistration instance
             */
            public static create(properties?: juicetokens.extension.IExtensionRegistration): juicetokens.extension.ExtensionRegistration;

            /**
             * Encodes the specified ExtensionRegistration message. Does not implicitly {@link juicetokens.extension.ExtensionRegistration.verify|verify} messages.
             * @param message ExtensionRegistration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.extension.IExtensionRegistration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ExtensionRegistration message, length delimited. Does not implicitly {@link juicetokens.extension.ExtensionRegistration.verify|verify} messages.
             * @param message ExtensionRegistration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.extension.IExtensionRegistration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ExtensionRegistration message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtensionRegistration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.extension.ExtensionRegistration;

            /**
             * Decodes an ExtensionRegistration message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtensionRegistration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.extension.ExtensionRegistration;

            /**
             * Verifies an ExtensionRegistration message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtensionRegistration message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtensionRegistration
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.extension.ExtensionRegistration;

            /**
             * Creates a plain object from an ExtensionRegistration message. Also converts values to other types if specified.
             * @param message ExtensionRegistration
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.extension.ExtensionRegistration, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtensionRegistration to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ExtensionRegistration
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PermissionRequest. */
        interface IPermissionRequest {

            /** PermissionRequest extensionId */
            extensionId?: (string|null);

            /** PermissionRequest requestedPermissions */
            requestedPermissions?: (string[]|null);

            /** PermissionRequest reason */
            reason?: (string|null);
        }

        /** Represents a PermissionRequest. */
        class PermissionRequest implements IPermissionRequest {

            /**
             * Constructs a new PermissionRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.extension.IPermissionRequest);

            /** PermissionRequest extensionId. */
            public extensionId: string;

            /** PermissionRequest requestedPermissions. */
            public requestedPermissions: string[];

            /** PermissionRequest reason. */
            public reason: string;

            /**
             * Creates a new PermissionRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PermissionRequest instance
             */
            public static create(properties?: juicetokens.extension.IPermissionRequest): juicetokens.extension.PermissionRequest;

            /**
             * Encodes the specified PermissionRequest message. Does not implicitly {@link juicetokens.extension.PermissionRequest.verify|verify} messages.
             * @param message PermissionRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.extension.IPermissionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PermissionRequest message, length delimited. Does not implicitly {@link juicetokens.extension.PermissionRequest.verify|verify} messages.
             * @param message PermissionRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.extension.IPermissionRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PermissionRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PermissionRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.extension.PermissionRequest;

            /**
             * Decodes a PermissionRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PermissionRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.extension.PermissionRequest;

            /**
             * Verifies a PermissionRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PermissionRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PermissionRequest
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.extension.PermissionRequest;

            /**
             * Creates a plain object from a PermissionRequest message. Also converts values to other types if specified.
             * @param message PermissionRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.extension.PermissionRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PermissionRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PermissionRequest
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a PermissionResponse. */
        interface IPermissionResponse {

            /** PermissionResponse extensionId */
            extensionId?: (string|null);

            /** PermissionResponse grantedPermissions */
            grantedPermissions?: (string[]|null);

            /** PermissionResponse deniedPermissions */
            deniedPermissions?: (string[]|null);

            /** PermissionResponse expiryTimestampMs */
            expiryTimestampMs?: (number|Long|null);
        }

        /** Represents a PermissionResponse. */
        class PermissionResponse implements IPermissionResponse {

            /**
             * Constructs a new PermissionResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.extension.IPermissionResponse);

            /** PermissionResponse extensionId. */
            public extensionId: string;

            /** PermissionResponse grantedPermissions. */
            public grantedPermissions: string[];

            /** PermissionResponse deniedPermissions. */
            public deniedPermissions: string[];

            /** PermissionResponse expiryTimestampMs. */
            public expiryTimestampMs: (number|Long);

            /**
             * Creates a new PermissionResponse instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PermissionResponse instance
             */
            public static create(properties?: juicetokens.extension.IPermissionResponse): juicetokens.extension.PermissionResponse;

            /**
             * Encodes the specified PermissionResponse message. Does not implicitly {@link juicetokens.extension.PermissionResponse.verify|verify} messages.
             * @param message PermissionResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.extension.IPermissionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PermissionResponse message, length delimited. Does not implicitly {@link juicetokens.extension.PermissionResponse.verify|verify} messages.
             * @param message PermissionResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.extension.IPermissionResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PermissionResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PermissionResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.extension.PermissionResponse;

            /**
             * Decodes a PermissionResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PermissionResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.extension.PermissionResponse;

            /**
             * Verifies a PermissionResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PermissionResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PermissionResponse
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.extension.PermissionResponse;

            /**
             * Creates a plain object from a PermissionResponse message. Also converts values to other types if specified.
             * @param message PermissionResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.extension.PermissionResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PermissionResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PermissionResponse
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ExtensionRegistry. */
        interface IExtensionRegistry {

            /** ExtensionRegistry extensions */
            extensions?: (juicetokens.extension.IExtensionEntry[]|null);

            /** ExtensionRegistry lastUpdatedMs */
            lastUpdatedMs?: (number|Long|null);

            /** ExtensionRegistry registryVersion */
            registryVersion?: (string|null);
        }

        /** Represents an ExtensionRegistry. */
        class ExtensionRegistry implements IExtensionRegistry {

            /**
             * Constructs a new ExtensionRegistry.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.extension.IExtensionRegistry);

            /** ExtensionRegistry extensions. */
            public extensions: juicetokens.extension.IExtensionEntry[];

            /** ExtensionRegistry lastUpdatedMs. */
            public lastUpdatedMs: (number|Long);

            /** ExtensionRegistry registryVersion. */
            public registryVersion: string;

            /**
             * Creates a new ExtensionRegistry instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtensionRegistry instance
             */
            public static create(properties?: juicetokens.extension.IExtensionRegistry): juicetokens.extension.ExtensionRegistry;

            /**
             * Encodes the specified ExtensionRegistry message. Does not implicitly {@link juicetokens.extension.ExtensionRegistry.verify|verify} messages.
             * @param message ExtensionRegistry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.extension.IExtensionRegistry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ExtensionRegistry message, length delimited. Does not implicitly {@link juicetokens.extension.ExtensionRegistry.verify|verify} messages.
             * @param message ExtensionRegistry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.extension.IExtensionRegistry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ExtensionRegistry message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtensionRegistry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.extension.ExtensionRegistry;

            /**
             * Decodes an ExtensionRegistry message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtensionRegistry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.extension.ExtensionRegistry;

            /**
             * Verifies an ExtensionRegistry message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtensionRegistry message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtensionRegistry
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.extension.ExtensionRegistry;

            /**
             * Creates a plain object from an ExtensionRegistry message. Also converts values to other types if specified.
             * @param message ExtensionRegistry
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.extension.ExtensionRegistry, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtensionRegistry to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ExtensionRegistry
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ExtensionEntry. */
        interface IExtensionEntry {

            /** ExtensionEntry registration */
            registration?: (juicetokens.extension.IExtensionRegistration|null);

            /** ExtensionEntry publisherId */
            publisherId?: (string|null);

            /** ExtensionEntry signature */
            signature?: (Uint8Array|null);

            /** ExtensionEntry registrationTimeMs */
            registrationTimeMs?: (number|Long|null);

            /** ExtensionEntry lastUpdatedMs */
            lastUpdatedMs?: (number|Long|null);

            /** ExtensionEntry status */
            status?: (juicetokens.extension.ExtensionStatus|null);
        }

        /** Represents an ExtensionEntry. */
        class ExtensionEntry implements IExtensionEntry {

            /**
             * Constructs a new ExtensionEntry.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.extension.IExtensionEntry);

            /** ExtensionEntry registration. */
            public registration?: (juicetokens.extension.IExtensionRegistration|null);

            /** ExtensionEntry publisherId. */
            public publisherId: string;

            /** ExtensionEntry signature. */
            public signature: Uint8Array;

            /** ExtensionEntry registrationTimeMs. */
            public registrationTimeMs: (number|Long);

            /** ExtensionEntry lastUpdatedMs. */
            public lastUpdatedMs: (number|Long);

            /** ExtensionEntry status. */
            public status: juicetokens.extension.ExtensionStatus;

            /**
             * Creates a new ExtensionEntry instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtensionEntry instance
             */
            public static create(properties?: juicetokens.extension.IExtensionEntry): juicetokens.extension.ExtensionEntry;

            /**
             * Encodes the specified ExtensionEntry message. Does not implicitly {@link juicetokens.extension.ExtensionEntry.verify|verify} messages.
             * @param message ExtensionEntry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.extension.IExtensionEntry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ExtensionEntry message, length delimited. Does not implicitly {@link juicetokens.extension.ExtensionEntry.verify|verify} messages.
             * @param message ExtensionEntry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.extension.IExtensionEntry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ExtensionEntry message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtensionEntry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.extension.ExtensionEntry;

            /**
             * Decodes an ExtensionEntry message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtensionEntry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.extension.ExtensionEntry;

            /**
             * Verifies an ExtensionEntry message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtensionEntry message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtensionEntry
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.extension.ExtensionEntry;

            /**
             * Creates a plain object from an ExtensionEntry message. Also converts values to other types if specified.
             * @param message ExtensionEntry
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.extension.ExtensionEntry, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtensionEntry to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ExtensionEntry
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** ExtensionStatus enum. */
        enum ExtensionStatus {
            ACTIVE = 0,
            DISABLED = 1,
            DEPRECATED = 2,
            BLOCKED = 3
        }

        /** Properties of a DiscoveryRequest. */
        interface IDiscoveryRequest {

            /** DiscoveryRequest query */
            query?: (string|null);

            /** DiscoveryRequest extensionPointIds */
            extensionPointIds?: (string[]|null);

            /** DiscoveryRequest capabilities */
            capabilities?: (string[]|null);

            /** DiscoveryRequest maxResults */
            maxResults?: (number|null);

            /** DiscoveryRequest includeDisabled */
            includeDisabled?: (boolean|null);
        }

        /** Represents a DiscoveryRequest. */
        class DiscoveryRequest implements IDiscoveryRequest {

            /**
             * Constructs a new DiscoveryRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.extension.IDiscoveryRequest);

            /** DiscoveryRequest query. */
            public query: string;

            /** DiscoveryRequest extensionPointIds. */
            public extensionPointIds: string[];

            /** DiscoveryRequest capabilities. */
            public capabilities: string[];

            /** DiscoveryRequest maxResults. */
            public maxResults: number;

            /** DiscoveryRequest includeDisabled. */
            public includeDisabled: boolean;

            /**
             * Creates a new DiscoveryRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DiscoveryRequest instance
             */
            public static create(properties?: juicetokens.extension.IDiscoveryRequest): juicetokens.extension.DiscoveryRequest;

            /**
             * Encodes the specified DiscoveryRequest message. Does not implicitly {@link juicetokens.extension.DiscoveryRequest.verify|verify} messages.
             * @param message DiscoveryRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.extension.IDiscoveryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DiscoveryRequest message, length delimited. Does not implicitly {@link juicetokens.extension.DiscoveryRequest.verify|verify} messages.
             * @param message DiscoveryRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.extension.IDiscoveryRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DiscoveryRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DiscoveryRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.extension.DiscoveryRequest;

            /**
             * Decodes a DiscoveryRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DiscoveryRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.extension.DiscoveryRequest;

            /**
             * Verifies a DiscoveryRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DiscoveryRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DiscoveryRequest
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.extension.DiscoveryRequest;

            /**
             * Creates a plain object from a DiscoveryRequest message. Also converts values to other types if specified.
             * @param message DiscoveryRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.extension.DiscoveryRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DiscoveryRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DiscoveryRequest
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a DiscoveryResponse. */
        interface IDiscoveryResponse {

            /** DiscoveryResponse results */
            results?: (juicetokens.extension.IExtensionEntry[]|null);

            /** DiscoveryResponse totalMatches */
            totalMatches?: (number|null);

            /** DiscoveryResponse hasMore */
            hasMore?: (boolean|null);
        }

        /** Represents a DiscoveryResponse. */
        class DiscoveryResponse implements IDiscoveryResponse {

            /**
             * Constructs a new DiscoveryResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.extension.IDiscoveryResponse);

            /** DiscoveryResponse results. */
            public results: juicetokens.extension.IExtensionEntry[];

            /** DiscoveryResponse totalMatches. */
            public totalMatches: number;

            /** DiscoveryResponse hasMore. */
            public hasMore: boolean;

            /**
             * Creates a new DiscoveryResponse instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DiscoveryResponse instance
             */
            public static create(properties?: juicetokens.extension.IDiscoveryResponse): juicetokens.extension.DiscoveryResponse;

            /**
             * Encodes the specified DiscoveryResponse message. Does not implicitly {@link juicetokens.extension.DiscoveryResponse.verify|verify} messages.
             * @param message DiscoveryResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.extension.IDiscoveryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DiscoveryResponse message, length delimited. Does not implicitly {@link juicetokens.extension.DiscoveryResponse.verify|verify} messages.
             * @param message DiscoveryResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.extension.IDiscoveryResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DiscoveryResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DiscoveryResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.extension.DiscoveryResponse;

            /**
             * Decodes a DiscoveryResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DiscoveryResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.extension.DiscoveryResponse;

            /**
             * Verifies a DiscoveryResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DiscoveryResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DiscoveryResponse
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.extension.DiscoveryResponse;

            /**
             * Creates a plain object from a DiscoveryResponse message. Also converts values to other types if specified.
             * @param message DiscoveryResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.extension.DiscoveryResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DiscoveryResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for DiscoveryResponse
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ActivationRequest. */
        interface IActivationRequest {

            /** ActivationRequest extensionId */
            extensionId?: (string|null);

            /** ActivationRequest userId */
            userId?: (string|null);

            /** ActivationRequest activationParameters */
            activationParameters?: ({ [k: string]: string }|null);
        }

        /** Represents an ActivationRequest. */
        class ActivationRequest implements IActivationRequest {

            /**
             * Constructs a new ActivationRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.extension.IActivationRequest);

            /** ActivationRequest extensionId. */
            public extensionId: string;

            /** ActivationRequest userId. */
            public userId: string;

            /** ActivationRequest activationParameters. */
            public activationParameters: { [k: string]: string };

            /**
             * Creates a new ActivationRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ActivationRequest instance
             */
            public static create(properties?: juicetokens.extension.IActivationRequest): juicetokens.extension.ActivationRequest;

            /**
             * Encodes the specified ActivationRequest message. Does not implicitly {@link juicetokens.extension.ActivationRequest.verify|verify} messages.
             * @param message ActivationRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.extension.IActivationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ActivationRequest message, length delimited. Does not implicitly {@link juicetokens.extension.ActivationRequest.verify|verify} messages.
             * @param message ActivationRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.extension.IActivationRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ActivationRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ActivationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.extension.ActivationRequest;

            /**
             * Decodes an ActivationRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ActivationRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.extension.ActivationRequest;

            /**
             * Verifies an ActivationRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ActivationRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ActivationRequest
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.extension.ActivationRequest;

            /**
             * Creates a plain object from an ActivationRequest message. Also converts values to other types if specified.
             * @param message ActivationRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.extension.ActivationRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ActivationRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ActivationRequest
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an ActivationResponse. */
        interface IActivationResponse {

            /** ActivationResponse extensionId */
            extensionId?: (string|null);

            /** ActivationResponse success */
            success?: (boolean|null);

            /** ActivationResponse errorMessage */
            errorMessage?: (string|null);

            /** ActivationResponse activationToken */
            activationToken?: (string|null);

            /** ActivationResponse requiredPermissions */
            requiredPermissions?: (string[]|null);
        }

        /** Represents an ActivationResponse. */
        class ActivationResponse implements IActivationResponse {

            /**
             * Constructs a new ActivationResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.extension.IActivationResponse);

            /** ActivationResponse extensionId. */
            public extensionId: string;

            /** ActivationResponse success. */
            public success: boolean;

            /** ActivationResponse errorMessage. */
            public errorMessage: string;

            /** ActivationResponse activationToken. */
            public activationToken: string;

            /** ActivationResponse requiredPermissions. */
            public requiredPermissions: string[];

            /**
             * Creates a new ActivationResponse instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ActivationResponse instance
             */
            public static create(properties?: juicetokens.extension.IActivationResponse): juicetokens.extension.ActivationResponse;

            /**
             * Encodes the specified ActivationResponse message. Does not implicitly {@link juicetokens.extension.ActivationResponse.verify|verify} messages.
             * @param message ActivationResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.extension.IActivationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ActivationResponse message, length delimited. Does not implicitly {@link juicetokens.extension.ActivationResponse.verify|verify} messages.
             * @param message ActivationResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.extension.IActivationResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an ActivationResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ActivationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.extension.ActivationResponse;

            /**
             * Decodes an ActivationResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ActivationResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.extension.ActivationResponse;

            /**
             * Verifies an ActivationResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ActivationResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ActivationResponse
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.extension.ActivationResponse;

            /**
             * Creates a plain object from an ActivationResponse message. Also converts values to other types if specified.
             * @param message ActivationResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.extension.ActivationResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ActivationResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ActivationResponse
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }
    }

    /** Namespace governance. */
    namespace governance {

        /** Properties of a MonitoringConfiguration. */
        interface IMonitoringConfiguration {

            /** MonitoringConfiguration metricCollectionIntervalSeconds */
            metricCollectionIntervalSeconds?: (number|null);

            /** MonitoringConfiguration collectSystemMetrics */
            collectSystemMetrics?: (boolean|null);

            /** MonitoringConfiguration collectBusinessMetrics */
            collectBusinessMetrics?: (boolean|null);

            /** MonitoringConfiguration collectNetworkMetrics */
            collectNetworkMetrics?: (boolean|null);

            /** MonitoringConfiguration retentionDays */
            retentionDays?: (number|null);

            /** MonitoringConfiguration enabledAlerts */
            enabledAlerts?: (string[]|null);
        }

        /** Represents a MonitoringConfiguration. */
        class MonitoringConfiguration implements IMonitoringConfiguration {

            /**
             * Constructs a new MonitoringConfiguration.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.governance.IMonitoringConfiguration);

            /** MonitoringConfiguration metricCollectionIntervalSeconds. */
            public metricCollectionIntervalSeconds: number;

            /** MonitoringConfiguration collectSystemMetrics. */
            public collectSystemMetrics: boolean;

            /** MonitoringConfiguration collectBusinessMetrics. */
            public collectBusinessMetrics: boolean;

            /** MonitoringConfiguration collectNetworkMetrics. */
            public collectNetworkMetrics: boolean;

            /** MonitoringConfiguration retentionDays. */
            public retentionDays: number;

            /** MonitoringConfiguration enabledAlerts. */
            public enabledAlerts: string[];

            /**
             * Creates a new MonitoringConfiguration instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MonitoringConfiguration instance
             */
            public static create(properties?: juicetokens.governance.IMonitoringConfiguration): juicetokens.governance.MonitoringConfiguration;

            /**
             * Encodes the specified MonitoringConfiguration message. Does not implicitly {@link juicetokens.governance.MonitoringConfiguration.verify|verify} messages.
             * @param message MonitoringConfiguration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.governance.IMonitoringConfiguration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MonitoringConfiguration message, length delimited. Does not implicitly {@link juicetokens.governance.MonitoringConfiguration.verify|verify} messages.
             * @param message MonitoringConfiguration message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.governance.IMonitoringConfiguration, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MonitoringConfiguration message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MonitoringConfiguration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.governance.MonitoringConfiguration;

            /**
             * Decodes a MonitoringConfiguration message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MonitoringConfiguration
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.governance.MonitoringConfiguration;

            /**
             * Verifies a MonitoringConfiguration message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MonitoringConfiguration message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MonitoringConfiguration
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.governance.MonitoringConfiguration;

            /**
             * Creates a plain object from a MonitoringConfiguration message. Also converts values to other types if specified.
             * @param message MonitoringConfiguration
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.governance.MonitoringConfiguration, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MonitoringConfiguration to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MonitoringConfiguration
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an AlertDefinition. */
        interface IAlertDefinition {

            /** AlertDefinition alertId */
            alertId?: (string|null);

            /** AlertDefinition name */
            name?: (string|null);

            /** AlertDefinition description */
            description?: (string|null);

            /** AlertDefinition metricId */
            metricId?: (string|null);

            /** AlertDefinition condition */
            condition?: (string|null);

            /** AlertDefinition severity */
            severity?: (number|null);

            /** AlertDefinition durationSeconds */
            durationSeconds?: (number|null);

            /** AlertDefinition notificationChannels */
            notificationChannels?: (string[]|null);
        }

        /** Represents an AlertDefinition. */
        class AlertDefinition implements IAlertDefinition {

            /**
             * Constructs a new AlertDefinition.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.governance.IAlertDefinition);

            /** AlertDefinition alertId. */
            public alertId: string;

            /** AlertDefinition name. */
            public name: string;

            /** AlertDefinition description. */
            public description: string;

            /** AlertDefinition metricId. */
            public metricId: string;

            /** AlertDefinition condition. */
            public condition: string;

            /** AlertDefinition severity. */
            public severity: number;

            /** AlertDefinition durationSeconds. */
            public durationSeconds: number;

            /** AlertDefinition notificationChannels. */
            public notificationChannels: string[];

            /**
             * Creates a new AlertDefinition instance using the specified properties.
             * @param [properties] Properties to set
             * @returns AlertDefinition instance
             */
            public static create(properties?: juicetokens.governance.IAlertDefinition): juicetokens.governance.AlertDefinition;

            /**
             * Encodes the specified AlertDefinition message. Does not implicitly {@link juicetokens.governance.AlertDefinition.verify|verify} messages.
             * @param message AlertDefinition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.governance.IAlertDefinition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified AlertDefinition message, length delimited. Does not implicitly {@link juicetokens.governance.AlertDefinition.verify|verify} messages.
             * @param message AlertDefinition message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.governance.IAlertDefinition, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an AlertDefinition message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AlertDefinition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.governance.AlertDefinition;

            /**
             * Decodes an AlertDefinition message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns AlertDefinition
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.governance.AlertDefinition;

            /**
             * Verifies an AlertDefinition message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an AlertDefinition message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns AlertDefinition
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.governance.AlertDefinition;

            /**
             * Creates a plain object from an AlertDefinition message. Also converts values to other types if specified.
             * @param message AlertDefinition
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.governance.AlertDefinition, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this AlertDefinition to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for AlertDefinition
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of an Alert. */
        interface IAlert {

            /** Alert alertId */
            alertId?: (string|null);

            /** Alert instanceId */
            instanceId?: (string|null);

            /** Alert startTimestampMs */
            startTimestampMs?: (number|Long|null);

            /** Alert lastUpdatedMs */
            lastUpdatedMs?: (number|Long|null);

            /** Alert currentValue */
            currentValue?: (string|null);

            /** Alert severity */
            severity?: (number|null);

            /** Alert status */
            status?: (juicetokens.governance.AlertStatus|null);
        }

        /** Represents an Alert. */
        class Alert implements IAlert {

            /**
             * Constructs a new Alert.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.governance.IAlert);

            /** Alert alertId. */
            public alertId: string;

            /** Alert instanceId. */
            public instanceId: string;

            /** Alert startTimestampMs. */
            public startTimestampMs: (number|Long);

            /** Alert lastUpdatedMs. */
            public lastUpdatedMs: (number|Long);

            /** Alert currentValue. */
            public currentValue: string;

            /** Alert severity. */
            public severity: number;

            /** Alert status. */
            public status: juicetokens.governance.AlertStatus;

            /**
             * Creates a new Alert instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Alert instance
             */
            public static create(properties?: juicetokens.governance.IAlert): juicetokens.governance.Alert;

            /**
             * Encodes the specified Alert message. Does not implicitly {@link juicetokens.governance.Alert.verify|verify} messages.
             * @param message Alert message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.governance.IAlert, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Alert message, length delimited. Does not implicitly {@link juicetokens.governance.Alert.verify|verify} messages.
             * @param message Alert message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.governance.IAlert, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Alert message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Alert
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.governance.Alert;

            /**
             * Decodes an Alert message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Alert
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.governance.Alert;

            /**
             * Verifies an Alert message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Alert message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Alert
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.governance.Alert;

            /**
             * Creates a plain object from an Alert message. Also converts values to other types if specified.
             * @param message Alert
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.governance.Alert, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Alert to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for Alert
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** AlertStatus enum. */
        enum AlertStatus {
            FIRING = 0,
            RESOLVED = 1,
            ACKNOWLEDGED = 2,
            SILENCED = 3
        }

        /** Properties of a PerformanceMetrics. */
        interface IPerformanceMetrics {

            /** PerformanceMetrics component */
            component?: (string|null);

            /** PerformanceMetrics averageResponseTimeMs */
            averageResponseTimeMs?: (number|null);

            /** PerformanceMetrics p95ResponseTimeMs */
            p95ResponseTimeMs?: (number|null);

            /** PerformanceMetrics p99ResponseTimeMs */
            p99ResponseTimeMs?: (number|null);

            /** PerformanceMetrics requestRate */
            requestRate?: (number|null);

            /** PerformanceMetrics errorRate */
            errorRate?: (number|null);

            /** PerformanceMetrics timestampMs */
            timestampMs?: (number|Long|null);
        }

        /** Represents a PerformanceMetrics. */
        class PerformanceMetrics implements IPerformanceMetrics {

            /**
             * Constructs a new PerformanceMetrics.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.governance.IPerformanceMetrics);

            /** PerformanceMetrics component. */
            public component: string;

            /** PerformanceMetrics averageResponseTimeMs. */
            public averageResponseTimeMs: number;

            /** PerformanceMetrics p95ResponseTimeMs. */
            public p95ResponseTimeMs: number;

            /** PerformanceMetrics p99ResponseTimeMs. */
            public p99ResponseTimeMs: number;

            /** PerformanceMetrics requestRate. */
            public requestRate: number;

            /** PerformanceMetrics errorRate. */
            public errorRate: number;

            /** PerformanceMetrics timestampMs. */
            public timestampMs: (number|Long);

            /**
             * Creates a new PerformanceMetrics instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PerformanceMetrics instance
             */
            public static create(properties?: juicetokens.governance.IPerformanceMetrics): juicetokens.governance.PerformanceMetrics;

            /**
             * Encodes the specified PerformanceMetrics message. Does not implicitly {@link juicetokens.governance.PerformanceMetrics.verify|verify} messages.
             * @param message PerformanceMetrics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.governance.IPerformanceMetrics, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PerformanceMetrics message, length delimited. Does not implicitly {@link juicetokens.governance.PerformanceMetrics.verify|verify} messages.
             * @param message PerformanceMetrics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.governance.IPerformanceMetrics, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PerformanceMetrics message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PerformanceMetrics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.governance.PerformanceMetrics;

            /**
             * Decodes a PerformanceMetrics message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PerformanceMetrics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.governance.PerformanceMetrics;

            /**
             * Verifies a PerformanceMetrics message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PerformanceMetrics message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PerformanceMetrics
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.governance.PerformanceMetrics;

            /**
             * Creates a plain object from a PerformanceMetrics message. Also converts values to other types if specified.
             * @param message PerformanceMetrics
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.governance.PerformanceMetrics, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PerformanceMetrics to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for PerformanceMetrics
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a BusinessMetrics. */
        interface IBusinessMetrics {

            /** BusinessMetrics activeUsers */
            activeUsers?: (number|null);

            /** BusinessMetrics tokenTransactions */
            tokenTransactions?: (number|null);

            /** BusinessMetrics tokenVolume */
            tokenVolume?: (number|Long|null);

            /** BusinessMetrics newUsers */
            newUsers?: (number|null);

            /** BusinessMetrics renewalsProcessed */
            renewalsProcessed?: (number|null);

            /** BusinessMetrics attestationsCreated */
            attestationsCreated?: (number|null);

            /** BusinessMetrics timestampMs */
            timestampMs?: (number|Long|null);

            /** BusinessMetrics customMetrics */
            customMetrics?: ({ [k: string]: number }|null);
        }

        /** Represents a BusinessMetrics. */
        class BusinessMetrics implements IBusinessMetrics {

            /**
             * Constructs a new BusinessMetrics.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.governance.IBusinessMetrics);

            /** BusinessMetrics activeUsers. */
            public activeUsers: number;

            /** BusinessMetrics tokenTransactions. */
            public tokenTransactions: number;

            /** BusinessMetrics tokenVolume. */
            public tokenVolume: (number|Long);

            /** BusinessMetrics newUsers. */
            public newUsers: number;

            /** BusinessMetrics renewalsProcessed. */
            public renewalsProcessed: number;

            /** BusinessMetrics attestationsCreated. */
            public attestationsCreated: number;

            /** BusinessMetrics timestampMs. */
            public timestampMs: (number|Long);

            /** BusinessMetrics customMetrics. */
            public customMetrics: { [k: string]: number };

            /**
             * Creates a new BusinessMetrics instance using the specified properties.
             * @param [properties] Properties to set
             * @returns BusinessMetrics instance
             */
            public static create(properties?: juicetokens.governance.IBusinessMetrics): juicetokens.governance.BusinessMetrics;

            /**
             * Encodes the specified BusinessMetrics message. Does not implicitly {@link juicetokens.governance.BusinessMetrics.verify|verify} messages.
             * @param message BusinessMetrics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.governance.IBusinessMetrics, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified BusinessMetrics message, length delimited. Does not implicitly {@link juicetokens.governance.BusinessMetrics.verify|verify} messages.
             * @param message BusinessMetrics message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.governance.IBusinessMetrics, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a BusinessMetrics message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BusinessMetrics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.governance.BusinessMetrics;

            /**
             * Decodes a BusinessMetrics message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns BusinessMetrics
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.governance.BusinessMetrics;

            /**
             * Verifies a BusinessMetrics message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a BusinessMetrics message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns BusinessMetrics
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.governance.BusinessMetrics;

            /**
             * Creates a plain object from a BusinessMetrics message. Also converts values to other types if specified.
             * @param message BusinessMetrics
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.governance.BusinessMetrics, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this BusinessMetrics to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for BusinessMetrics
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a HealthReport. */
        interface IHealthReport {

            /** HealthReport systemHealth */
            systemHealth?: (juicetokens.governance.ISystemHealth|null);

            /** HealthReport activeAlerts */
            activeAlerts?: (juicetokens.governance.IAlert[]|null);

            /** HealthReport performance */
            performance?: (juicetokens.governance.IPerformanceMetrics|null);

            /** HealthReport business */
            business?: (juicetokens.governance.IBusinessMetrics|null);

            /** HealthReport reportTimestampMs */
            reportTimestampMs?: (number|Long|null);

            /** HealthReport reportId */
            reportId?: (string|null);
        }

        /** Represents a HealthReport. */
        class HealthReport implements IHealthReport {

            /**
             * Constructs a new HealthReport.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.governance.IHealthReport);

            /** HealthReport systemHealth. */
            public systemHealth?: (juicetokens.governance.ISystemHealth|null);

            /** HealthReport activeAlerts. */
            public activeAlerts: juicetokens.governance.IAlert[];

            /** HealthReport performance. */
            public performance?: (juicetokens.governance.IPerformanceMetrics|null);

            /** HealthReport business. */
            public business?: (juicetokens.governance.IBusinessMetrics|null);

            /** HealthReport reportTimestampMs. */
            public reportTimestampMs: (number|Long);

            /** HealthReport reportId. */
            public reportId: string;

            /**
             * Creates a new HealthReport instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HealthReport instance
             */
            public static create(properties?: juicetokens.governance.IHealthReport): juicetokens.governance.HealthReport;

            /**
             * Encodes the specified HealthReport message. Does not implicitly {@link juicetokens.governance.HealthReport.verify|verify} messages.
             * @param message HealthReport message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.governance.IHealthReport, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HealthReport message, length delimited. Does not implicitly {@link juicetokens.governance.HealthReport.verify|verify} messages.
             * @param message HealthReport message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.governance.IHealthReport, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HealthReport message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HealthReport
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.governance.HealthReport;

            /**
             * Decodes a HealthReport message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HealthReport
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.governance.HealthReport;

            /**
             * Verifies a HealthReport message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HealthReport message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HealthReport
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.governance.HealthReport;

            /**
             * Creates a plain object from a HealthReport message. Also converts values to other types if specified.
             * @param message HealthReport
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.governance.HealthReport, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HealthReport to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for HealthReport
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MonitoringSnapshotRequest. */
        interface IMonitoringSnapshotRequest {

            /** MonitoringSnapshotRequest instanceId */
            instanceId?: (string|null);

            /** MonitoringSnapshotRequest metricTypes */
            metricTypes?: (string[]|null);

            /** MonitoringSnapshotRequest includeAlerts */
            includeAlerts?: (boolean|null);

            /** MonitoringSnapshotRequest lookbackMinutes */
            lookbackMinutes?: (number|null);
        }

        /** Represents a MonitoringSnapshotRequest. */
        class MonitoringSnapshotRequest implements IMonitoringSnapshotRequest {

            /**
             * Constructs a new MonitoringSnapshotRequest.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.governance.IMonitoringSnapshotRequest);

            /** MonitoringSnapshotRequest instanceId. */
            public instanceId: string;

            /** MonitoringSnapshotRequest metricTypes. */
            public metricTypes: string[];

            /** MonitoringSnapshotRequest includeAlerts. */
            public includeAlerts: boolean;

            /** MonitoringSnapshotRequest lookbackMinutes. */
            public lookbackMinutes: number;

            /**
             * Creates a new MonitoringSnapshotRequest instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MonitoringSnapshotRequest instance
             */
            public static create(properties?: juicetokens.governance.IMonitoringSnapshotRequest): juicetokens.governance.MonitoringSnapshotRequest;

            /**
             * Encodes the specified MonitoringSnapshotRequest message. Does not implicitly {@link juicetokens.governance.MonitoringSnapshotRequest.verify|verify} messages.
             * @param message MonitoringSnapshotRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.governance.IMonitoringSnapshotRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MonitoringSnapshotRequest message, length delimited. Does not implicitly {@link juicetokens.governance.MonitoringSnapshotRequest.verify|verify} messages.
             * @param message MonitoringSnapshotRequest message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.governance.IMonitoringSnapshotRequest, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MonitoringSnapshotRequest message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MonitoringSnapshotRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.governance.MonitoringSnapshotRequest;

            /**
             * Decodes a MonitoringSnapshotRequest message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MonitoringSnapshotRequest
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.governance.MonitoringSnapshotRequest;

            /**
             * Verifies a MonitoringSnapshotRequest message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MonitoringSnapshotRequest message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MonitoringSnapshotRequest
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.governance.MonitoringSnapshotRequest;

            /**
             * Creates a plain object from a MonitoringSnapshotRequest message. Also converts values to other types if specified.
             * @param message MonitoringSnapshotRequest
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.governance.MonitoringSnapshotRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MonitoringSnapshotRequest to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MonitoringSnapshotRequest
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a MonitoringSnapshotResponse. */
        interface IMonitoringSnapshotResponse {

            /** MonitoringSnapshotResponse report */
            report?: (juicetokens.governance.IHealthReport|null);

            /** MonitoringSnapshotResponse rawMetrics */
            rawMetrics?: ({ [k: string]: Uint8Array }|null);

            /** MonitoringSnapshotResponse complete */
            complete?: (boolean|null);

            /** MonitoringSnapshotResponse errorMessage */
            errorMessage?: (string|null);
        }

        /** Represents a MonitoringSnapshotResponse. */
        class MonitoringSnapshotResponse implements IMonitoringSnapshotResponse {

            /**
             * Constructs a new MonitoringSnapshotResponse.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.governance.IMonitoringSnapshotResponse);

            /** MonitoringSnapshotResponse report. */
            public report?: (juicetokens.governance.IHealthReport|null);

            /** MonitoringSnapshotResponse rawMetrics. */
            public rawMetrics: { [k: string]: Uint8Array };

            /** MonitoringSnapshotResponse complete. */
            public complete: boolean;

            /** MonitoringSnapshotResponse errorMessage. */
            public errorMessage: string;

            /**
             * Creates a new MonitoringSnapshotResponse instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MonitoringSnapshotResponse instance
             */
            public static create(properties?: juicetokens.governance.IMonitoringSnapshotResponse): juicetokens.governance.MonitoringSnapshotResponse;

            /**
             * Encodes the specified MonitoringSnapshotResponse message. Does not implicitly {@link juicetokens.governance.MonitoringSnapshotResponse.verify|verify} messages.
             * @param message MonitoringSnapshotResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.governance.IMonitoringSnapshotResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MonitoringSnapshotResponse message, length delimited. Does not implicitly {@link juicetokens.governance.MonitoringSnapshotResponse.verify|verify} messages.
             * @param message MonitoringSnapshotResponse message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.governance.IMonitoringSnapshotResponse, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MonitoringSnapshotResponse message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MonitoringSnapshotResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.governance.MonitoringSnapshotResponse;

            /**
             * Decodes a MonitoringSnapshotResponse message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MonitoringSnapshotResponse
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.governance.MonitoringSnapshotResponse;

            /**
             * Verifies a MonitoringSnapshotResponse message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MonitoringSnapshotResponse message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MonitoringSnapshotResponse
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.governance.MonitoringSnapshotResponse;

            /**
             * Creates a plain object from a MonitoringSnapshotResponse message. Also converts values to other types if specified.
             * @param message MonitoringSnapshotResponse
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.governance.MonitoringSnapshotResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MonitoringSnapshotResponse to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for MonitoringSnapshotResponse
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a ProtocolVersion. */
        interface IProtocolVersion {

            /** ProtocolVersion version */
            version?: (string|null);

            /** ProtocolVersion releaseNotes */
            releaseNotes?: (string|null);

            /** ProtocolVersion releaseTimestampMs */
            releaseTimestampMs?: (number|Long|null);

            /** ProtocolVersion changedComponents */
            changedComponents?: (string[]|null);

            /** ProtocolVersion backwardsCompatible */
            backwardsCompatible?: (boolean|null);
        }

        /** Represents a ProtocolVersion. */
        class ProtocolVersion implements IProtocolVersion {

            /**
             * Constructs a new ProtocolVersion.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.governance.IProtocolVersion);

            /** ProtocolVersion version. */
            public version: string;

            /** ProtocolVersion releaseNotes. */
            public releaseNotes: string;

            /** ProtocolVersion releaseTimestampMs. */
            public releaseTimestampMs: (number|Long);

            /** ProtocolVersion changedComponents. */
            public changedComponents: string[];

            /** ProtocolVersion backwardsCompatible. */
            public backwardsCompatible: boolean;

            /**
             * Creates a new ProtocolVersion instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ProtocolVersion instance
             */
            public static create(properties?: juicetokens.governance.IProtocolVersion): juicetokens.governance.ProtocolVersion;

            /**
             * Encodes the specified ProtocolVersion message. Does not implicitly {@link juicetokens.governance.ProtocolVersion.verify|verify} messages.
             * @param message ProtocolVersion message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.governance.IProtocolVersion, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ProtocolVersion message, length delimited. Does not implicitly {@link juicetokens.governance.ProtocolVersion.verify|verify} messages.
             * @param message ProtocolVersion message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.governance.IProtocolVersion, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ProtocolVersion message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ProtocolVersion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.governance.ProtocolVersion;

            /**
             * Decodes a ProtocolVersion message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ProtocolVersion
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.governance.ProtocolVersion;

            /**
             * Verifies a ProtocolVersion message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ProtocolVersion message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ProtocolVersion
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.governance.ProtocolVersion;

            /**
             * Creates a plain object from a ProtocolVersion message. Also converts values to other types if specified.
             * @param message ProtocolVersion
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.governance.ProtocolVersion, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ProtocolVersion to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for ProtocolVersion
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a HealthMetric. */
        interface IHealthMetric {

            /** HealthMetric metricId */
            metricId?: (string|null);

            /** HealthMetric component */
            component?: (string|null);

            /** HealthMetric metricType */
            metricType?: (string|null);

            /** HealthMetric value */
            value?: (number|null);

            /** HealthMetric unit */
            unit?: (string|null);

            /** HealthMetric timestampMs */
            timestampMs?: (number|Long|null);

            /** HealthMetric severity */
            severity?: (number|null);
        }

        /** Represents a HealthMetric. */
        class HealthMetric implements IHealthMetric {

            /**
             * Constructs a new HealthMetric.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.governance.IHealthMetric);

            /** HealthMetric metricId. */
            public metricId: string;

            /** HealthMetric component. */
            public component: string;

            /** HealthMetric metricType. */
            public metricType: string;

            /** HealthMetric value. */
            public value: number;

            /** HealthMetric unit. */
            public unit: string;

            /** HealthMetric timestampMs. */
            public timestampMs: (number|Long);

            /** HealthMetric severity. */
            public severity: number;

            /**
             * Creates a new HealthMetric instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HealthMetric instance
             */
            public static create(properties?: juicetokens.governance.IHealthMetric): juicetokens.governance.HealthMetric;

            /**
             * Encodes the specified HealthMetric message. Does not implicitly {@link juicetokens.governance.HealthMetric.verify|verify} messages.
             * @param message HealthMetric message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.governance.IHealthMetric, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HealthMetric message, length delimited. Does not implicitly {@link juicetokens.governance.HealthMetric.verify|verify} messages.
             * @param message HealthMetric message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.governance.IHealthMetric, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HealthMetric message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HealthMetric
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.governance.HealthMetric;

            /**
             * Decodes a HealthMetric message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HealthMetric
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.governance.HealthMetric;

            /**
             * Verifies a HealthMetric message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HealthMetric message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HealthMetric
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.governance.HealthMetric;

            /**
             * Creates a plain object from a HealthMetric message. Also converts values to other types if specified.
             * @param message HealthMetric
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.governance.HealthMetric, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HealthMetric to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for HealthMetric
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** Properties of a SystemHealth. */
        interface ISystemHealth {

            /** SystemHealth instanceId */
            instanceId?: (string|null);

            /** SystemHealth version */
            version?: (string|null);

            /** SystemHealth timestampMs */
            timestampMs?: (number|Long|null);

            /** SystemHealth metrics */
            metrics?: ({ [k: string]: juicetokens.governance.IHealthMetric }|null);

            /** SystemHealth status */
            status?: (juicetokens.governance.SystemStatus|null);
        }

        /** Represents a SystemHealth. */
        class SystemHealth implements ISystemHealth {

            /**
             * Constructs a new SystemHealth.
             * @param [properties] Properties to set
             */
            constructor(properties?: juicetokens.governance.ISystemHealth);

            /** SystemHealth instanceId. */
            public instanceId: string;

            /** SystemHealth version. */
            public version: string;

            /** SystemHealth timestampMs. */
            public timestampMs: (number|Long);

            /** SystemHealth metrics. */
            public metrics: { [k: string]: juicetokens.governance.IHealthMetric };

            /** SystemHealth status. */
            public status: juicetokens.governance.SystemStatus;

            /**
             * Creates a new SystemHealth instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SystemHealth instance
             */
            public static create(properties?: juicetokens.governance.ISystemHealth): juicetokens.governance.SystemHealth;

            /**
             * Encodes the specified SystemHealth message. Does not implicitly {@link juicetokens.governance.SystemHealth.verify|verify} messages.
             * @param message SystemHealth message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: juicetokens.governance.ISystemHealth, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SystemHealth message, length delimited. Does not implicitly {@link juicetokens.governance.SystemHealth.verify|verify} messages.
             * @param message SystemHealth message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: juicetokens.governance.ISystemHealth, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SystemHealth message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SystemHealth
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): juicetokens.governance.SystemHealth;

            /**
             * Decodes a SystemHealth message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SystemHealth
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): juicetokens.governance.SystemHealth;

            /**
             * Verifies a SystemHealth message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SystemHealth message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SystemHealth
             */
            public static fromObject(object: { [k: string]: any }): juicetokens.governance.SystemHealth;

            /**
             * Creates a plain object from a SystemHealth message. Also converts values to other types if specified.
             * @param message SystemHealth
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: juicetokens.governance.SystemHealth, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SystemHealth to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };

            /**
             * Gets the default type url for SystemHealth
             * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns The default type url
             */
            public static getTypeUrl(typeUrlPrefix?: string): string;
        }

        /** SystemStatus enum. */
        enum SystemStatus {
            HEALTHY = 0,
            DEGRADED = 1,
            CRITICAL = 2,
            MAINTENANCE = 3
        }
    }
}
